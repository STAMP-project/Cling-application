import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest36 {

    public static boolean debug = false;

    @Test
    public void test18001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18001");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 1, (double) (byte) 1, (double) (-1L), (double) (short) -1);
    }

    @Test
    public void test18002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18002");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18003");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(52.0d, (double) (-1L), (double) 1.0f, (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 10.0d);
        double[] doubleArray24 = pointCostPair23.getPoint();
        double double25 = pointCostPair23.getCost();
        double double26 = pointCostPair23.getCost();
        double[] doubleArray27 = pointCostPair23.getPoint();
        double[] doubleArray28 = pointCostPair23.getPoint();
        double double29 = pointCostPair23.getCost();
        double[] doubleArray30 = pointCostPair23.getPoint();
        double[] doubleArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair32 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, doubleArray30, doubleArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18004");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 'a', 100.0d, 0.0d, 52.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18005");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str7 = convergenceException6.getPattern();
        java.lang.Throwable[] throwableArray8 = convergenceException6.getSuppressed();
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray36 = convergenceException34.getArguments();
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray28, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray28);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray62 = convergenceException61.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray62, (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.optimization.CostException costException66 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray62);
        java.lang.Object[] objArray67 = new java.lang.Object[] { "hi!", throwableArray62 };
        org.apache.commons.math.optimization.CostException costException68 = new org.apache.commons.math.optimization.CostException("", objArray67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) costException68);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.optimization.CostException costException76 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException75);
        java.lang.String str77 = costException76.getPattern();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) costException76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) costException76);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) costException76);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) costException76);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) convergenceException81);
        java.lang.String str83 = mathException82.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.MathException" + "'", str77, "org.apache.commons.math.MathException");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix" + "'", str83, "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix");
    }

    @Test
    public void test18006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18006");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", objArray15);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray21, (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray38);
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", throwableArray38 };
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException44);
        java.lang.Throwable[] throwableArray46 = costException44.getSuppressed();
        convergenceException31.addSuppressed((java.lang.Throwable) costException44);
        java.lang.Throwable[] throwableArray48 = costException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray15, (java.lang.Throwable) costException44);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray15);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray15);
        java.lang.String str52 = mathException51.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        java.lang.String str55 = mathException51.getPattern();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str52, "org.apache.commons.math.optimization.CostException: ");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str55, "org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18007");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        java.lang.Object[] objArray12 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray12, (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", objArray8, (java.lang.Throwable) mathException21);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray8);
        java.lang.String str25 = costException24.getPattern();
        java.lang.Throwable[] throwableArray26 = costException24.getSuppressed();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException24);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.MathException: " + "'", str25, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18008");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1.0f), (double) 10.0f, (double) 0.0f, (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double double21 = pointCostPair20.getCost();
        double[] doubleArray22 = pointCostPair20.getPoint();
        double[] doubleArray23 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) 0L);
        double[] doubleArray26 = pointCostPair25.getPoint();
        double[] doubleArray31 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (short) 1);
        double[] doubleArray34 = pointCostPair33.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, doubleArray26, doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18009");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", throwableArray14 };
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException25);
        java.lang.Object[] objArray27 = convergenceException25.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray19);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test18010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18010");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 0L, "", '#', mathException18 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", objArray19, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray19);
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException29);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18011");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10L);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double double15 = pointCostPair12.getCost();
        double[] doubleArray16 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray16, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18012");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray9, (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", throwableArray29 };
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException43);
        java.lang.String str45 = mathException44.getPattern();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", objArray34, (java.lang.Throwable) mathException44);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("", objArray50, (java.lang.Throwable) mathException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", objArray34, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray9, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray68 = convergenceException67.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray78 = convergenceException77.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray78, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.optimization.CostException costException82 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray78);
        java.lang.Object[] objArray83 = new java.lang.Object[] { "hi!", throwableArray78 };
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException("", objArray83);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) costException84);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray9, (java.lang.Throwable) mathException86);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", objArray9);
        org.apache.commons.math.optimization.CostException costException90 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", objArray9);
        org.apache.commons.math.optimization.CostException costException91 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray9);
        java.lang.String str92 = costException91.getPattern();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: " + "'", str92, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18013");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray7, (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException18);
        java.lang.String str22 = mathException18.toString();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str22, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18014");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException44);
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException45);
        java.lang.Throwable[] throwableArray48 = mathException47.getSuppressed();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
    }

    @Test
    public void test18015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18015");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 10);
        double double11 = pointCostPair10.getCost();
        double[] doubleArray12 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18016");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) (byte) -1, (double) '4', (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 10L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 35.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1L));
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 10);
        double[] doubleArray29 = pointCostPair28.getPoint();
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        double[] doubleArray39 = pointCostPair38.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray39, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray39, (double) 10);
        double[] doubleArray44 = pointCostPair43.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, doubleArray29, doubleArray44, 100, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18017");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray12 = convergenceException11.getArguments();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray16, (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", objArray12, (java.lang.Throwable) mathException25);
        java.lang.Throwable[] throwableArray28 = mathException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) costException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.optimization.CostException costException41 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray28);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", objArray49, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException59);
        java.lang.Object[] objArray61 = convergenceException59.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray61);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray75 = convergenceException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray75);
        java.lang.Object[] objArray77 = convergenceException76.getArguments();
        java.lang.Object[] objArray81 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray86 = convergenceException85.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray86, (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("", objArray81, (java.lang.Throwable) mathException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("hi!", objArray77, (java.lang.Throwable) mathException90);
        java.lang.Throwable[] throwableArray93 = mathException90.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray93);
        org.apache.commons.math.optimization.CostException costException95 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray93);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray61, (java.lang.Throwable) costException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException96);
        org.apache.commons.math.ConvergenceException convergenceException98 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test18018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18018");
        double[] doubleArray4 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair6 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (double) (short) 1);
        double[] doubleArray7 = pointCostPair6.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair9 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, 1.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair11 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) 10L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) (byte) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) 0.0f);
        double[] doubleArray16 = pointCostPair15.getPoint();
        double double17 = pointCostPair15.getCost();
        double[] doubleArray18 = pointCostPair15.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18019");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: not positive definite matrix");
    }

    @Test
    public void test18020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18020");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ");
        java.lang.String str5 = convergenceException4.getPattern();
        java.lang.Throwable[] throwableArray6 = convergenceException4.getSuppressed();
        java.lang.Throwable[] throwableArray7 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        java.lang.String str34 = mathException33.getPattern();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", objArray23, (java.lang.Throwable) mathException33);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) mathException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", objArray23, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray23, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray58, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray58);
        java.lang.Throwable[] throwableArray63 = costException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray68 = convergenceException67.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) mathException72);
        java.lang.Throwable[] throwableArray74 = mathException73.getSuppressed();
        convergenceException52.addSuppressed((java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException76);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException81);
        java.lang.Throwable[] throwableArray83 = convergenceException81.getSuppressed();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Object[]) throwableArray83);
        org.apache.commons.math.optimization.CostException costException85 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray83);
        mathException77.addSuppressed((java.lang.Throwable) costException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray1, (java.lang.Throwable) costException85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: " + "'", str5, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test18021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18021");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray14);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray20, (java.lang.Throwable) mathException29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException29);
        java.lang.Object[] objArray32 = mathException29.getArguments();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) mathException29);
        java.lang.Throwable[] throwableArray34 = mathException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray41);
        java.lang.Object[] objArray43 = convergenceException42.getArguments();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray47, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", objArray43, (java.lang.Throwable) mathException56);
        java.lang.Throwable[] throwableArray59 = mathException56.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) mathException63);
        java.lang.Object[] objArray65 = mathException63.getArguments();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
    }

    @Test
    public void test18022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18022");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray3 = convergenceException2.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray21, (java.lang.Throwable) mathException30);
        costException17.addSuppressed((java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray33 = costException17.getSuppressed();
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", throwable35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray3, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException39);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray50);
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", throwableArray50 };
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", objArray55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { "hi!", throwableArray73 };
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", objArray78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) costException79);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray86 = convergenceException85.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray86, (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException90);
        costException79.addSuppressed((java.lang.Throwable) convergenceException91);
        convergenceException57.addSuppressed((java.lang.Throwable) convergenceException91);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) convergenceException91);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException94);
        org.apache.commons.math.optimization.CostException costException96 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException95);
        costException40.addSuppressed((java.lang.Throwable) mathException95);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test18023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18023");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException5);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", throwableArray20 };
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray25);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException29 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray30 = notPositiveDefiniteMatrixException29.getArguments();
        java.lang.Throwable[] throwableArray31 = notPositiveDefiniteMatrixException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray25, (java.lang.Throwable) mathException35);
        java.lang.Throwable[] throwableArray37 = mathException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        java.lang.Throwable[] throwableArray48 = convergenceException46.getSuppressed();
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray48);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException54);
        java.lang.String str56 = convergenceException55.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray8, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException60);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str56, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18024");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray25);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", throwableArray25 };
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException31);
        java.lang.Throwable[] throwableArray33 = costException31.getSuppressed();
        convergenceException18.addSuppressed((java.lang.Throwable) costException31);
        java.lang.String str35 = convergenceException18.getPattern();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException36);
        java.lang.Throwable[] throwableArray39 = mathException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray50);
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", throwableArray50 };
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", objArray55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException64);
        java.lang.String str66 = mathException65.getPattern();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("", objArray55, (java.lang.Throwable) mathException65);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray76 = convergenceException75.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray76, (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("", objArray71, (java.lang.Throwable) mathException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("hi!", objArray55, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("", objArray55, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.optimization.CostException costException85 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray55);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) costException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) costException85);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException85);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException88);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test18025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18025");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) (-1.0f), (double) 1L, (double) 0.0f);
    }

    @Test
    public void test18026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18026");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, (double) (-1L), (double) (short) 100, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { (short) 100 };
        double[] doubleArray11 = new double[] { (short) 100 };
        double[] doubleArray13 = new double[] { (short) 100 };
        double[] doubleArray15 = new double[] { (short) 100 };
        double[] doubleArray17 = new double[] { (short) 100 };
        double[] doubleArray19 = new double[] { (short) 100 };
        double[][] doubleArray20 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15, doubleArray17, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair21 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18027");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray15 = convergenceException14.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray32 = convergenceException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) mathException36);
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException(throwable39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray15, (java.lang.Throwable) costException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray15);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException47 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray48 = notPositiveDefiniteMatrixException47.getArguments();
        java.lang.String str49 = notPositiveDefiniteMatrixException47.getPattern();
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException47);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) notPositiveDefiniteMatrixException47);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray58, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray58);
        java.lang.Object[] objArray63 = new java.lang.Object[] { "hi!", throwableArray58 };
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException64);
        java.lang.String str66 = costException64.getPattern();
        notPositiveDefiniteMatrixException47.addSuppressed((java.lang.Throwable) costException64);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) notPositiveDefiniteMatrixException47);
        java.lang.Class<?> wildcardClass69 = mathException68.getClass();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "not positive definite matrix" + "'", str49, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test18028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18028");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((-1.0d), (double) (short) 100, (double) 1L, (double) (-1L));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray10 = new double[] { 97.0d, (byte) -1 };
        double[] doubleArray13 = new double[] { 97.0d, (byte) -1 };
        double[] doubleArray16 = new double[] { 97.0d, (byte) -1 };
        double[] doubleArray19 = new double[] { 97.0d, (byte) -1 };
        double[] doubleArray22 = new double[] { 97.0d, (byte) -1 };
        double[][] doubleArray23 = new double[][] { doubleArray10, doubleArray13, doubleArray16, doubleArray19, doubleArray22 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair24 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }

    @Test
    public void test18029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18029");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException11);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException(throwable13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) mathException27);
        costException14.addSuppressed((java.lang.Throwable) convergenceException28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException14);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException32);
        java.lang.Object[] objArray34 = convergenceException32.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException32);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
    }

    @Test
    public void test18030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18030");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 100, (double) 1L, (double) (-1.0f), (double) (byte) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0);
        double[] doubleArray24 = pointCostPair23.getPoint();
        double[] doubleArray25 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) 0L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) '#');
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair41 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray25, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18031");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray45 = convergenceException43.getArguments();
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) costException46);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException46);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) costException46);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException50);
        java.lang.Throwable[] throwableArray53 = mathException52.getSuppressed();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test18032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18032");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(97.0d, (double) '4', 0.0d, (double) 100L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18033");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 10L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 35.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) ' ');
        double double19 = pointCostPair18.getCost();
        double double20 = pointCostPair18.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 32.0d + "'", double19 == 32.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
    }

    @Test
    public void test18034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18034");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        java.lang.Throwable[] throwableArray11 = convergenceException9.getSuppressed();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", throwableArray20 };
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", objArray25);
        mathException13.addSuppressed((java.lang.Throwable) costException26);
        java.lang.Object[] objArray28 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray35);
        java.lang.Object[] objArray37 = convergenceException36.getArguments();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray46 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray41, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", objArray37, (java.lang.Throwable) mathException50);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        java.lang.Object[] objArray54 = mathException52.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray66);
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", throwableArray66 };
        org.apache.commons.math.optimization.CostException costException72 = new org.apache.commons.math.optimization.CostException("", objArray71);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray77 = convergenceException76.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray77, (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException80);
        java.lang.String str82 = mathException81.getPattern();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("", objArray71, (java.lang.Throwable) mathException81);
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException("hi!", objArray71);
        java.lang.Object[] objArray85 = costException84.getArguments();
        org.apache.commons.math.optimization.CostException costException86 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException84);
        java.lang.Throwable[] throwableArray87 = costException84.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) costException84);
        convergenceException56.addSuppressed((java.lang.Throwable) convergenceException88);
        org.apache.commons.math.optimization.CostException costException90 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Throwable) mathException91);
        java.lang.Object[] objArray93 = convergenceException92.getArguments();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
    }

    @Test
    public void test18035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18035");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(32.0d, 0.0d, (double) (-1.0f), (double) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, randomVectorGenerator8, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18036");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (-1.0d), 52.0d, 10.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18037");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, 0.0d, 52.0d, (double) 100L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18038");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str4 = convergenceException3.getPattern();
        java.lang.Throwable[] throwableArray5 = convergenceException3.getSuppressed();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) mathException8);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test18039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18039");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ");
        java.lang.String str2 = convergenceException1.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: " + "'", str2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18040");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (-1.0d));
        double double15 = pointCostPair14.getCost();
        double[] doubleArray16 = pointCostPair14.getPoint();
        double double17 = pointCostPair14.getCost();
        double[] doubleArray18 = pointCostPair14.getPoint();
        double double19 = pointCostPair14.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
    }

    @Test
    public void test18041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18041");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", throwable4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException5);
        java.lang.Throwable[] throwableArray8 = mathException7.getSuppressed();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        java.lang.Throwable[] throwableArray24 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException30);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test18042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18042");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), (double) 0.0f, (double) 1.0f, (double) ' ');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { '4', 35.0d, (-1), 0L };
        double[] doubleArray17 = new double[] { '4', 35.0d, (-1), 0L };
        double[] doubleArray22 = new double[] { '4', 35.0d, (-1), 0L };
        double[] doubleArray27 = new double[] { '4', 35.0d, (-1), 0L };
        double[] doubleArray32 = new double[] { '4', 35.0d, (-1), 0L };
        double[] doubleArray37 = new double[] { '4', 35.0d, (-1), 0L };
        double[][] doubleArray38 = new double[][] { doubleArray12, doubleArray17, doubleArray22, doubleArray27, doubleArray32, doubleArray37 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0, 35.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test18043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18043");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", objArray11, (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        java.lang.Object[] objArray28 = mathException26.getArguments();
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", objArray28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray28);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray28);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) costException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException33);
        java.lang.String str36 = convergenceException35.getPattern();
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException35);
        java.lang.Throwable[] throwableArray38 = costException37.getSuppressed();
        java.lang.Throwable[] throwableArray39 = costException37.getSuppressed();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray51 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray51);
        java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", throwableArray51 };
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", objArray56);
        mathException44.addSuppressed((java.lang.Throwable) costException57);
        java.lang.String str59 = mathException44.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException44);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray66);
        org.apache.commons.math.optimization.CostException costException71 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray66);
        mathException44.addSuppressed((java.lang.Throwable) costException71);
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException71);
        java.lang.Throwable[] throwableArray74 = costException73.getSuppressed();
        java.lang.Object[] objArray75 = costException73.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) costException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) costException73);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ConvergenceException: hi!" + "'", str36, "org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
    }

    @Test
    public void test18044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18044");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', 0.0d, (double) (byte) 1, (double) 10.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double[] doubleArray23 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) 100.0f);
        double[] doubleArray26 = pointCostPair25.getPoint();
        double[] doubleArray33 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (byte) 1);
        double double40 = pointCostPair39.getCost();
        double[] doubleArray41 = pointCostPair39.getPoint();
        double[] doubleArray42 = pointCostPair39.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (-1.0d));
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair49 = nelderMead4.minimize(costFunction5, (int) (short) 100, convergenceChecker7, doubleArray26, doubleArray42, 0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18045");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", objArray11, (java.lang.Throwable) mathException24);
        java.lang.Throwable[] throwableArray27 = mathException24.getSuppressed();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) mathException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) costException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException32);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray43);
        java.lang.Object[] objArray45 = convergenceException44.getArguments();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", objArray49, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", objArray45, (java.lang.Throwable) mathException58);
        java.lang.Throwable[] throwableArray61 = mathException58.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.optimization.CostException costException66 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.optimization.CostException costException78 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) costException79);
        costException32.addSuppressed((java.lang.Throwable) costException79);
        org.apache.commons.math.optimization.CostException costException82 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException32);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException32);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test18046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18046");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", throwable3);
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray22);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException26 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray27 = notPositiveDefiniteMatrixException26.getArguments();
        java.lang.Throwable[] throwableArray28 = notPositiveDefiniteMatrixException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) mathException32);
        java.lang.Throwable[] throwableArray34 = mathException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) convergenceException43);
        java.lang.Throwable[] throwableArray45 = convergenceException43.getSuppressed();
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException51);
        java.lang.String str53 = convergenceException52.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray34);
        convergenceException4.addSuppressed((java.lang.Throwable) costException58);
        java.lang.Object[] objArray60 = convergenceException4.getArguments();
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray60);
        java.lang.String str62 = costException61.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException61);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str53, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException" + "'", str62, "org.apache.commons.math.MathException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18047");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) mathException8);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) mathException8);
        java.lang.String str12 = mathException8.getPattern();
        java.lang.Object[] objArray13 = mathException8.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException8);
        java.lang.String str15 = mathException8.getPattern();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test18048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18048");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException46);
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException47);
        java.lang.Throwable[] throwableArray50 = mathException49.getSuppressed();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException52);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test18049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18049");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException2 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException2);
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray7, (java.lang.Throwable) mathException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException16);
        convergenceException3.addSuppressed((java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException3);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException20);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test18050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18050");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray14 = convergenceException13.getArguments();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", objArray14, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray30 = mathException29.getArguments();
        java.lang.Object[] objArray31 = mathException29.getArguments();
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", objArray31);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray31);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray31);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray31);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray31);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
    }

    @Test
    public void test18051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18051");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("hi!", objArray16);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException30);
        java.lang.Throwable[] throwableArray34 = costException30.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18052");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 100, (double) '4', 0.0d, (double) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray13 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[] doubleArray19 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[] doubleArray25 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[] doubleArray31 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[] doubleArray37 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[] doubleArray43 = new double[] { (short) -1, (-1.0f), (short) -1, (short) -1, 100.0d };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair45 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test18053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18053");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, (double) 0.0f, 97.0d, (double) 100L);
    }

    @Test
    public void test18054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18054");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, (double) (byte) -1, (double) 1, (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (-1L));
        double[] doubleArray28 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (byte) -1);
        double[] doubleArray35 = pointCostPair34.getPoint();
        double double36 = pointCostPair34.getCost();
        double[] doubleArray37 = pointCostPair34.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) 1L);
        double[] doubleArray42 = pointCostPair41.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair45 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray17, doubleArray42, (int) (byte) 1, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18055");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100.0f, 10.0d, (double) 1.0f, (double) (-1.0f));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 'a');
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 0.0f);
        double[] doubleArray23 = pointCostPair22.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) '4');
        double[] doubleArray26 = pointCostPair25.getPoint();
        double[] doubleArray33 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (byte) 1);
        double[] doubleArray40 = pointCostPair39.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (-1L));
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, doubleArray26, doubleArray40, (int) (byte) 0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18056");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Throwable[] throwableArray26 = mathException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) costException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test18057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18057");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", objArray16);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray22, (java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException45);
        java.lang.Throwable[] throwableArray47 = costException45.getSuppressed();
        convergenceException32.addSuppressed((java.lang.Throwable) costException45);
        java.lang.Throwable[] throwableArray49 = costException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray16, (java.lang.Throwable) costException45);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException52);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test18058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18058");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 1.0d);
        double[] doubleArray19 = pointCostPair18.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18059");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray35);
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", throwableArray35 };
        org.apache.commons.math.optimization.CostException costException41 = new org.apache.commons.math.optimization.CostException("", objArray40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) costException41);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray48 = convergenceException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException52);
        costException41.addSuppressed((java.lang.Throwable) convergenceException53);
        java.lang.Object[] objArray55 = convergenceException53.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", objArray55);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException60);
        java.lang.Object[] objArray62 = convergenceException60.getArguments();
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException60);
        java.lang.Throwable[] throwableArray64 = costException63.getSuppressed();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) costException63);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException65);
        costException57.addSuppressed((java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray16, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray16, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException73);
        java.lang.Throwable[] throwableArray75 = convergenceException73.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test18060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18060");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, (double) 1L, (double) (-1), (double) (byte) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { 100L, 32.0d, '#', 'a' };
        double[] doubleArray17 = new double[] { 100L, 32.0d, '#', 'a' };
        double[] doubleArray22 = new double[] { 100L, 32.0d, '#', 'a' };
        double[] doubleArray27 = new double[] { 100L, 32.0d, '#', 'a' };
        double[][] doubleArray28 = new double[][] { doubleArray12, doubleArray17, doubleArray22, doubleArray27 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair31 = nelderMead4.minimize(costFunction5, 10, convergenceChecker7, doubleArray28, (int) '4', (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 32.0, 35.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 32.0, 35.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 32.0, 35.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 32.0, 35.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
    }

    @Test
    public void test18061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18061");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double double15 = pointCostPair12.getCost();
        double[] doubleArray16 = pointCostPair12.getPoint();
        double double17 = pointCostPair12.getCost();
        double[] doubleArray18 = pointCostPair12.getPoint();
        double[] doubleArray19 = pointCostPair12.getPoint();
        double[] doubleArray20 = pointCostPair12.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 97.0d + "'", double15 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18062");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        java.lang.Throwable[] throwableArray11 = costException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException12);
        java.lang.Throwable[] throwableArray15 = convergenceException12.getSuppressed();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        java.lang.String str18 = mathException17.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: " + "'", str18, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18063");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1), (double) 1, (double) 1, (double) 100L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 0, convergenceChecker7, randomVectorGenerator8, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18064");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str8 = convergenceException7.getPattern();
        java.lang.Throwable[] throwableArray9 = convergenceException7.getSuppressed();
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray19);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", throwableArray19 };
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        java.lang.String str35 = mathException34.getPattern();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", objArray24, (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray9);
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray42);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test18065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18065");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray28);
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", throwableArray28 };
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        java.lang.String str44 = mathException43.getPattern();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", objArray33, (java.lang.Throwable) mathException43);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", objArray49, (java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", objArray33, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", objArray16, (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str67 = mathException66.getPattern();
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException68 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException68);
        java.lang.Object[] objArray73 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray78 = convergenceException77.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray78, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray73, (java.lang.Throwable) mathException82);
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException82);
        convergenceException69.addSuppressed((java.lang.Throwable) mathException82);
        mathException66.addSuppressed((java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", objArray16, (java.lang.Throwable) mathException82);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: hi!", objArray16);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test18066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18066");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", throwable1);
    }

    @Test
    public void test18067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18067");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10, (double) 100L, 0.0d, (double) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double[] doubleArray23 = pointCostPair20.getPoint();
        double double24 = pointCostPair20.getCost();
        double[] doubleArray25 = pointCostPair20.getPoint();
        double[] doubleArray26 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, (double) (byte) -1);
        double[] doubleArray35 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (byte) 1);
        double[] doubleArray42 = pointCostPair41.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, 10.0d);
        double double47 = pointCostPair46.getCost();
        double[] doubleArray48 = pointCostPair46.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair49 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, doubleArray26, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18068");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) -1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, 10.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (-1));
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 10.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, 52.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18069");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray16);
        java.lang.String str19 = mathException18.getPattern();
        java.lang.Object[] objArray20 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray20);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: ", objArray20);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str19, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, []]");
    }

    @Test
    public void test18070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18070");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 100, (double) 10L, (double) '4', (double) (-1.0f));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (byte) -1);
        double[] doubleArray22 = pointCostPair21.getPoint();
        double double23 = pointCostPair21.getCost();
        double[] doubleArray24 = pointCostPair21.getPoint();
        double[] doubleArray25 = pointCostPair21.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) (short) 1);
        double double28 = pointCostPair27.getCost();
        double[] doubleArray29 = pointCostPair27.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray29, (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair34 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, doubleArray8, doubleArray29, 0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18071");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException11);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException(throwable13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) mathException27);
        costException14.addSuppressed((java.lang.Throwable) convergenceException28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException14);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException32);
        java.lang.Class<?> wildcardClass35 = convergenceException32.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test18072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18072");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException15);
        java.lang.Throwable[] throwableArray17 = costException15.getSuppressed();
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException18);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException22);
        java.lang.Object[] objArray24 = convergenceException22.getArguments();
        costException18.addSuppressed((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException22);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray29 = mathException26.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18073");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException10);
        java.lang.String str12 = mathException11.getPattern();
        java.lang.Throwable[] throwableArray13 = mathException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) costException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException15);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test18074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18074");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        java.lang.Object[] objArray44 = convergenceException42.getArguments();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException47);
        java.lang.Throwable[] throwableArray49 = convergenceException47.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test18075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18075");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException24);
        java.lang.Object[] objArray26 = convergenceException24.getArguments();
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray18);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Throwable) mathException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException29);
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) convergenceException43);
        java.lang.Throwable[] throwableArray45 = convergenceException43.getSuppressed();
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException49);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) costException49);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test18076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18076");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), (double) (byte) 10, (double) 1.0f, (double) (short) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 10.0d);
        double[] doubleArray24 = pointCostPair23.getPoint();
        double double25 = pointCostPair23.getCost();
        double double26 = pointCostPair23.getCost();
        double[] doubleArray27 = pointCostPair23.getPoint();
        double[] doubleArray34 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, 0.0d);
        double double37 = pointCostPair36.getCost();
        double[] doubleArray38 = pointCostPair36.getPoint();
        double[] doubleArray39 = pointCostPair36.getPoint();
        double[] doubleArray40 = pointCostPair36.getPoint();
        double[] doubleArray41 = pointCostPair36.getPoint();
        double[] doubleArray42 = pointCostPair36.getPoint();
        double[] doubleArray43 = pointCostPair36.getPoint();
        double double44 = pointCostPair36.getCost();
        double[] doubleArray45 = pointCostPair36.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair47 = new org.apache.commons.math.optimization.PointCostPair(doubleArray45, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair48 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, doubleArray27, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18077");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException2);
    }

    @Test
    public void test18078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18078");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) mathException27);
        costException14.addSuppressed((java.lang.Throwable) mathException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException14);
        java.lang.Throwable[] throwableArray31 = costException14.getSuppressed();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException32);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test18079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18079");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray9 = convergenceException8.getArguments();
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray9);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray9);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", throwable16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException17);
        java.lang.String str21 = mathException20.getPattern();
        java.lang.Throwable[] throwableArray22 = mathException20.getSuppressed();
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException25 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray26 = notPositiveDefiniteMatrixException25.getArguments();
        java.lang.Throwable[] throwableArray27 = notPositiveDefiniteMatrixException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) mathException31);
        java.lang.Throwable[] throwableArray34 = mathException31.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray9, (java.lang.Throwable) mathException31);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str21, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18080");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 1.0d);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 1.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18081");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, 32.0d, (double) (-1.0f), (double) 'a');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, (int) (short) 100, convergenceChecker7, doubleArray8, (int) (short) 0, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18082");
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException31);
        java.lang.String str33 = mathException32.getPattern();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", objArray22, (java.lang.Throwable) mathException32);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", objArray22, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray66);
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", throwableArray66 };
        org.apache.commons.math.optimization.CostException costException72 = new org.apache.commons.math.optimization.CostException("", objArray71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", objArray71);
        org.apache.commons.math.optimization.CostException costException74 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException73);
        convergenceException57.addSuppressed((java.lang.Throwable) convergenceException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray22, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray22);
        org.apache.commons.math.optimization.CostException costException78 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray22);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("Convergence failed", objArray22);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray22);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, []]");
    }

    @Test
    public void test18083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18083");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("");
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", objArray21);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", throwableArray40 };
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", objArray45);
        mathException33.addSuppressed((java.lang.Throwable) costException46);
        costException24.addSuppressed((java.lang.Throwable) costException46);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray55);
        java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", throwableArray55 };
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("", objArray60);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray70 = convergenceException69.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray70, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray65, (java.lang.Throwable) mathException74);
        costException61.addSuppressed((java.lang.Throwable) mathException74);
        costException46.addSuppressed((java.lang.Throwable) mathException74);
        java.lang.Object[] objArray78 = costException46.getArguments();
        convergenceException8.addSuppressed((java.lang.Throwable) costException46);
        java.lang.String str80 = convergenceException8.getPattern();
        java.lang.Object[] objArray81 = convergenceException8.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray81);
        java.lang.Object[] objArray83 = convergenceException82.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException89);
        java.lang.Throwable[] throwableArray91 = mathException90.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException90);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) convergenceException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) mathException93);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(throwableArray91);
    }

    @Test
    public void test18084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18084");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray12 = convergenceException11.getArguments();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray16, (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", objArray12, (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray28 = mathException27.getArguments();
        java.lang.Object[] objArray29 = mathException27.getArguments();
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", objArray29);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray29);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray52);
        java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", throwableArray52 };
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("", objArray57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) costException58);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException69);
        costException58.addSuppressed((java.lang.Throwable) convergenceException70);
        java.lang.Object[] objArray72 = convergenceException70.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray72);
        java.lang.String str75 = mathException74.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException74);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray29, (java.lang.Throwable) convergenceException77);
        java.lang.Object[] objArray79 = convergenceException77.getArguments();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str75, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test18085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18085");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18086");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", throwable1);
    }

    @Test
    public void test18087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18087");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, 97.0d, 35.0d, (-1.0d));
    }

    @Test
    public void test18088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18088");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        double double11 = pointCostPair10.getCost();
        double[] doubleArray12 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) 0L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, 0.0d);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18089");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException20);
        java.lang.Object[] objArray23 = mathException22.getArguments();
        java.lang.Object[] objArray24 = mathException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException22);
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18090");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException20 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray21 = notPositiveDefiniteMatrixException20.getArguments();
        java.lang.Throwable[] throwableArray22 = notPositiveDefiniteMatrixException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray28 = mathException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        java.lang.Throwable[] throwableArray39 = convergenceException37.getSuppressed();
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException45);
        java.lang.String str47 = convergenceException46.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException51);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str47, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18091");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException28);
        java.lang.Throwable[] throwableArray30 = mathException28.getSuppressed();
        java.lang.Object[] objArray31 = mathException28.getArguments();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray41);
        java.lang.Object[] objArray43 = convergenceException42.getArguments();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray47, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", objArray43, (java.lang.Throwable) mathException56);
        java.lang.Throwable[] throwableArray59 = mathException56.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray59);
        java.lang.Throwable throwable69 = null;
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", throwable69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException71);
        java.lang.Object[] objArray73 = mathException71.getArguments();
        java.lang.Object[] objArray79 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray84 = convergenceException83.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray84, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException87);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("", objArray79, (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray79);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException90);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray73, (java.lang.Throwable) mathException90);
        mathException65.addSuppressed((java.lang.Throwable) convergenceException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray31, (java.lang.Throwable) convergenceException92);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray31);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", objArray31);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test18092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18092");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 10);
        double double15 = pointCostPair14.getCost();
        double[] doubleArray16 = pointCostPair14.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18093");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10, 0.0d, (double) 0.0f, (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, (double) 10L);
        double double21 = pointCostPair20.getCost();
        double[] doubleArray22 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) 1);
        double[] doubleArray25 = pointCostPair24.getPoint();
        double[] doubleArray26 = pointCostPair24.getPoint();
        double[] doubleArray33 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) '#');
        double[] doubleArray42 = pointCostPair41.getPoint();
        double[] doubleArray43 = pointCostPair41.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair45 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) (byte) 0);
        double[] doubleArray46 = pointCostPair45.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair49 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray26, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18094");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double[] doubleArray15 = pointCostPair12.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18095");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) 1L, (-1.0d), 97.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { 35.0d, (short) 1, 35.0d, (byte) 10 };
        double[] doubleArray17 = new double[] { 35.0d, (short) 1, 35.0d, (byte) 10 };
        double[] doubleArray22 = new double[] { 35.0d, (short) 1, 35.0d, (byte) 10 };
        double[][] doubleArray23 = new double[][] { doubleArray12, doubleArray17, doubleArray22 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair26 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, doubleArray23, (int) (byte) 10, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[35.0, 1.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[35.0, 1.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[35.0, 1.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }

    @Test
    public void test18096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18096");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException28);
        java.lang.Throwable[] throwableArray30 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray46 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray46);
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", throwableArray46 };
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException("", objArray51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) costException52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray36);
        convergenceException28.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException59);
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException60);
        java.lang.Throwable[] throwableArray63 = costException60.getSuppressed();
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException60);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test18097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18097");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", objArray17);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray23, (java.lang.Throwable) mathException32);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", throwableArray40 };
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", objArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException46);
        java.lang.Throwable[] throwableArray48 = costException46.getSuppressed();
        convergenceException33.addSuppressed((java.lang.Throwable) costException46);
        java.lang.Throwable[] throwableArray50 = costException46.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray17, (java.lang.Throwable) costException46);
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray17);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray17);
        java.lang.String str54 = mathException53.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException53);
        java.lang.Object[] objArray56 = mathException53.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", objArray56);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        java.lang.String str60 = mathException58.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str54, "org.apache.commons.math.optimization.CostException: ");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException" + "'", str60, "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException");
    }

    @Test
    public void test18098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18098");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray14 = convergenceException13.getArguments();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", objArray14, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray30 = mathException29.getArguments();
        java.lang.Object[] objArray31 = mathException29.getArguments();
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", objArray31);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray31);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray49);
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", throwableArray49 };
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray54);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray65);
        java.lang.Object[] objArray67 = convergenceException66.getArguments();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray67);
        mathException59.addSuppressed((java.lang.Throwable) convergenceException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException59);
        java.lang.String str72 = convergenceException71.getPattern();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray31, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray31);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str72, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18099");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, (double) 100.0f, (double) 100.0f, (double) 1L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray8, doubleArray9 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, doubleArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test18100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18100");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray8, 0, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18101");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", objArray15);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray21, (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray38);
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", throwableArray38 };
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException44);
        java.lang.Throwable[] throwableArray46 = costException44.getSuppressed();
        convergenceException31.addSuppressed((java.lang.Throwable) costException44);
        java.lang.Throwable[] throwableArray48 = costException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray15, (java.lang.Throwable) costException44);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray15);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray15);
        java.lang.String str52 = mathException51.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        java.lang.String str56 = convergenceException55.getPattern();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str52, "org.apache.commons.math.optimization.CostException: ");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str56, "org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18102");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 1, 1.0d, (double) 10L, (double) (short) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 10);
        double[] doubleArray19 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray19, (double) 10);
        double double22 = pointCostPair21.getCost();
        double[] doubleArray23 = pointCostPair21.getPoint();
        double[] doubleArray24 = pointCostPair21.getPoint();
        double[] doubleArray31 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (short) 1);
        double[] doubleArray38 = pointCostPair37.getPoint();
        double double39 = pointCostPair37.getCost();
        double double40 = pointCostPair37.getCost();
        double[] doubleArray41 = pointCostPair37.getPoint();
        double[] doubleArray42 = pointCostPair37.getPoint();
        double[] doubleArray43 = pointCostPair37.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair45 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair47 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) 0L);
        double[] doubleArray48 = pointCostPair47.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair49 = nelderMead4.minimize(costFunction5, (int) (short) 100, convergenceChecker7, doubleArray24, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18103");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException25);
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) costException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException31);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", (java.lang.Throwable) costException34);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18104");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException4 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray5 = notPositiveDefiniteMatrixException4.getArguments();
        java.lang.String str6 = notPositiveDefiniteMatrixException4.getPattern();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException4);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) notPositiveDefiniteMatrixException4);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", throwableArray15 };
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException21);
        java.lang.String str23 = costException21.getPattern();
        notPositiveDefiniteMatrixException4.addSuppressed((java.lang.Throwable) costException21);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) notPositiveDefiniteMatrixException4);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException4);
        java.lang.Object[] objArray27 = costException26.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray27);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "not positive definite matrix" + "'", str6, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test18105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18105");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, (double) ' ', (double) (short) 0, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray10 = new double[] { (-1), (short) 0 };
        double[] doubleArray13 = new double[] { (-1), (short) 0 };
        double[] doubleArray16 = new double[] { (-1), (short) 0 };
        double[] doubleArray19 = new double[] { (-1), (short) 0 };
        double[][] doubleArray20 = new double[][] { doubleArray10, doubleArray13, doubleArray16, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair21 = nelderMead4.minimize(costFunction5, 100, convergenceChecker7, doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18106");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException9);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test18107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18107");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0L, (double) 100, (double) 0.0f, (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        double[] doubleArray15 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (short) -1);
        double[] doubleArray28 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        double[] doubleArray37 = pointCostPair36.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair38 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray15, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18108");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100.0f, (double) (-1L), (double) 1L, (double) 'a');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double19 = pointCostPair18.getCost();
        double[] doubleArray20 = pointCostPair18.getPoint();
        double double21 = pointCostPair18.getCost();
        double[] doubleArray22 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) 100);
        double[] doubleArray33 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, 0.0d);
        double double36 = pointCostPair35.getCost();
        double[] doubleArray37 = pointCostPair35.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) (byte) 0);
        double[] doubleArray42 = pointCostPair41.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 'a');
        double[] doubleArray45 = pointCostPair44.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair46 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, doubleArray22, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18109");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException22);
        java.lang.Object[] objArray24 = convergenceException22.getArguments();
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray16, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray16);
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray16, throwable28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException31);
        java.lang.Class<?> wildcardClass33 = convergenceException32.getClass();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test18110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18110");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException8);
        java.lang.Throwable[] throwableArray10 = mathException8.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException13 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray14 = notPositiveDefiniteMatrixException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notPositiveDefiniteMatrixException13);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException15);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test18111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18111");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("not positive definite matrix", objArray18);
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray34);
        java.lang.Object[] objArray39 = new java.lang.Object[] { "hi!", throwableArray34 };
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("", objArray39);
        mathException27.addSuppressed((java.lang.Throwable) costException40);
        java.lang.String str42 = mathException27.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException27);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray49);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray49);
        mathException27.addSuppressed((java.lang.Throwable) costException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) costException54);
        java.lang.Throwable[] throwableArray57 = costException54.getSuppressed();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException54);
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException58);
        java.lang.Object[] objArray60 = costException59.getArguments();
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray60);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
    }

    @Test
    public void test18112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18112");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("hi!", objArray16);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException47);
        java.lang.Object[] objArray50 = mathException47.getArguments();
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray50);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16, (java.lang.Throwable) convergenceException53);
        java.lang.Class<?> wildcardClass56 = objArray16.getClass();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test18113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18113");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException21);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
    }

    @Test
    public void test18114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18114");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) '#');
        double[] doubleArray15 = pointCostPair14.getPoint();
        double double16 = pointCostPair14.getCost();
        double[] doubleArray17 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        double[] doubleArray21 = pointCostPair19.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 35.0d + "'", double16 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18115");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str4 = convergenceException3.getPattern();
        java.lang.Throwable[] throwableArray5 = convergenceException3.getSuppressed();
        org.apache.commons.math.optimization.CostException costException6 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        java.lang.String str32 = mathException31.getPattern();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) mathException31);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray37, (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", objArray21, (java.lang.Throwable) convergenceException47);
        java.lang.Object[] objArray49 = convergenceException47.getArguments();
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) costException50);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) mathException54);
        java.lang.String str56 = mathException54.getPattern();
        java.lang.Object[] objArray57 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException54);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str56, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test18116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18116");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException24);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException(throwable27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray11);
        java.lang.String str32 = convergenceException31.getPattern();
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray36 = convergenceException34.getArguments();
        java.lang.Object[] objArray37 = convergenceException34.getArguments();
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray37, throwable38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray1, throwable38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str32, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test18117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18117");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0, (double) ' ', 52.0d, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18118");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) costException24);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException35);
        costException24.addSuppressed((java.lang.Throwable) convergenceException36);
        java.lang.Object[] objArray38 = convergenceException36.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray38, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException45);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException46);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test18119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18119");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        double double14 = pointCostPair12.getCost();
        double[] doubleArray15 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (byte) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) 100L);
        double[] doubleArray22 = pointCostPair21.getPoint();
        double[] doubleArray23 = pointCostPair21.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18120");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable[] throwableArray12 = costException11.getSuppressed();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.String str16 = costException15.getPattern();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test18121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18121");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException6);
        java.lang.Object[] objArray8 = convergenceException6.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray23);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray8, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray8);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException29);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
    }

    @Test
    public void test18122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18122");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 10, (double) '4', (double) (short) -1, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18123");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        double double14 = pointCostPair12.getCost();
        double[] doubleArray15 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) 'a');
        double double18 = pointCostPair17.getCost();
        double double19 = pointCostPair17.getCost();
        double double20 = pointCostPair17.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 97.0d + "'", double19 == 97.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
    }

    @Test
    public void test18124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18124");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException15);
        java.lang.Object[] objArray17 = convergenceException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException18);
        java.lang.String str20 = convergenceException18.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException18);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[10, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test18125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18125");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", throwableArray20 };
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        java.lang.String str36 = mathException35.getPattern();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray25, (java.lang.Throwable) mathException35);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray46 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray41, (java.lang.Throwable) mathException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", objArray25, (java.lang.Throwable) convergenceException51);
        java.lang.Object[] objArray53 = convergenceException51.getArguments();
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException51);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) costException56);
        java.lang.Object[] objArray59 = costException56.getArguments();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[10, 10]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test18126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18126");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        double double14 = pointCostPair12.getCost();
        double double15 = pointCostPair12.getCost();
        double[] doubleArray16 = pointCostPair12.getPoint();
        double[] doubleArray17 = pointCostPair12.getPoint();
        double[] doubleArray18 = pointCostPair12.getPoint();
        double[] doubleArray19 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray19, (double) (byte) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray19, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18127");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        java.lang.Object[] objArray44 = convergenceException42.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray44);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray57 = convergenceException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray57, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", objArray52, (java.lang.Throwable) mathException61);
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException61);
        java.lang.Object[] objArray64 = mathException61.getArguments();
        java.lang.Object[] objArray65 = mathException61.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray44, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray75 = convergenceException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray75, (java.lang.Throwable) convergenceException77);
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray75);
        java.lang.Object[] objArray80 = new java.lang.Object[] { "hi!", throwableArray75 };
        org.apache.commons.math.optimization.CostException costException81 = new org.apache.commons.math.optimization.CostException("", objArray80);
        java.lang.Throwable[] throwableArray82 = costException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) costException81);
        java.lang.String str84 = mathException83.getPattern();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException83);
        convergenceException67.addSuppressed((java.lang.Throwable) mathException83);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException67);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10, 10]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test18128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18128");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', (double) 100.0f, 10.0d, (double) (byte) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (short) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        double[] doubleArray21 = pointCostPair19.getPoint();
        double[] doubleArray28 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (byte) 1);
        double double35 = pointCostPair34.getCost();
        double[] doubleArray36 = pointCostPair34.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair41 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, doubleArray21, doubleArray36, 100, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18129");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (-1.0d));
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 10);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        double[] doubleArray19 = pointCostPair16.getPoint();
        double[] doubleArray20 = pointCostPair16.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18130");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray23 = mathException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException50);
        java.lang.Object[] objArray52 = convergenceException50.getArguments();
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray44, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray44);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException57);
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException58);
        convergenceException25.addSuppressed((java.lang.Throwable) costException59);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test18131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18131");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 10, (double) 10.0f, (double) 10.0f, 35.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double[] doubleArray31 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (byte) 1);
        double[] doubleArray38 = pointCostPair37.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) ' ');
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) ' ');
        double[] doubleArray43 = pointCostPair42.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair46 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, doubleArray14, doubleArray43, 0, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18132");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) costException24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray36);
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", throwableArray36 };
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", objArray41);
        mathException29.addSuppressed((java.lang.Throwable) costException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException29);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException49);
        java.lang.Object[] objArray51 = convergenceException49.getArguments();
        java.lang.Throwable[] throwableArray52 = convergenceException49.getSuppressed();
        java.lang.Object[] objArray53 = convergenceException49.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", objArray53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray63);
        java.lang.Object[] objArray68 = new java.lang.Object[] { "hi!", throwableArray63 };
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("", objArray68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException69);
        java.lang.Throwable[] throwableArray71 = costException69.getSuppressed();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException75);
        java.lang.Throwable[] throwableArray77 = convergenceException75.getSuppressed();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException75);
        convergenceException54.addSuppressed((java.lang.Throwable) mathException78);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test18133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18133");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!");
        java.lang.Throwable[] throwableArray3 = convergenceException2.getSuppressed();
        org.apache.commons.math.optimization.CostException costException4 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException2);
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException2);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test18134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18134");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100, (double) '4', (double) (byte) 10, (double) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18135");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException16);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        java.lang.Object[] objArray19 = mathException17.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test18136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18136");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException2);
        java.lang.String str4 = convergenceException2.getPattern();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: " + "'", str4, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test18137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18137");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) costException22);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException33);
        costException22.addSuppressed((java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray36 = convergenceException34.getArguments();
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray36, throwable37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray36);
        java.lang.Class<?> wildcardClass40 = convergenceException39.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test18138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18138");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray5);
        java.lang.Throwable[] throwableArray10 = costException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray12 = convergenceException11.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException13);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException16 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray17 = notPositiveDefiniteMatrixException16.getArguments();
        java.lang.Throwable[] throwableArray18 = notPositiveDefiniteMatrixException16.getSuppressed();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notPositiveDefiniteMatrixException16);
        convergenceException14.addSuppressed((java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException14);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test18139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18139");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        java.lang.Throwable[] throwableArray11 = costException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray28);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray13, (java.lang.Throwable) mathException32);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException32);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray47 = convergenceException46.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray47);
        java.lang.Object[] objArray52 = new java.lang.Object[] { "hi!", throwableArray47 };
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray52);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray52);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray67 = convergenceException66.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray67, (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.optimization.CostException costException71 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray67);
        java.lang.Object[] objArray72 = new java.lang.Object[] { "hi!", throwableArray67 };
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException("", objArray72);
        mathException60.addSuppressed((java.lang.Throwable) costException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray52, (java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray77 = mathException60.getSuppressed();
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException(throwable78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException79);
        mathException60.addSuppressed((java.lang.Throwable) convergenceException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException60);
        costException34.addSuppressed((java.lang.Throwable) mathException82);
        java.lang.String str84 = costException34.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!" + "'", str84, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
    }

    @Test
    public void test18140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18140");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException15);
        java.lang.Object[] objArray17 = new java.lang.Object[] { 0L, "", '#', mathException16 };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException20);
        java.lang.Throwable[] throwableArray23 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray23);
        java.lang.String str25 = convergenceException24.getPattern();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException24);
        java.lang.Throwable[] throwableArray27 = mathException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException26);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.MathException: " + "'", str25, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test18141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18141");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException18);
        java.lang.Object[] objArray20 = convergenceException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray20);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) mathException28);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test18142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18142");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException15);
        java.lang.Throwable[] throwableArray17 = convergenceException15.getSuppressed();
        java.lang.String str18 = convergenceException15.getPattern();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test18143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18143");
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        java.lang.String str32 = mathException31.getPattern();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) mathException31);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray37, (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", objArray21, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray21);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray58, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray69 = convergenceException68.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { "hi!", throwableArray69 };
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("", objArray74);
        mathException62.addSuppressed((java.lang.Throwable) costException75);
        java.lang.String str77 = mathException62.getPattern();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException62);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray21, (java.lang.Throwable) mathException62);
        org.apache.commons.math.optimization.CostException costException80 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException81);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test18144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18144");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException7);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException15);
        java.lang.Object[] objArray17 = convergenceException15.getArguments();
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException15);
        java.lang.Throwable[] throwableArray19 = costException18.getSuppressed();
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray10, (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException22);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test18145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18145");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1), (double) (byte) -1, 35.0d, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) '#');
        double[] doubleArray19 = pointCostPair18.getPoint();
        double double20 = pointCostPair18.getCost();
        double[] doubleArray21 = pointCostPair18.getPoint();
        double[] doubleArray28 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) 10L);
        double[] doubleArray35 = pointCostPair34.getPoint();
        double[] doubleArray36 = pointCostPair34.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, doubleArray21, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18146");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray10, (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray27);
        java.lang.Object[] objArray32 = new java.lang.Object[] { "hi!", throwableArray27 };
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException33);
        java.lang.Throwable[] throwableArray35 = costException33.getSuppressed();
        convergenceException20.addSuppressed((java.lang.Throwable) costException33);
        java.lang.String str37 = convergenceException20.getPattern();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException40);
        java.lang.Object[] objArray42 = mathException41.getArguments();
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray59 = convergenceException58.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray59);
        java.lang.Object[] objArray64 = new java.lang.Object[] { "hi!", throwableArray59 };
        org.apache.commons.math.optimization.CostException costException65 = new org.apache.commons.math.optimization.CostException("", objArray64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) costException65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray49);
        java.lang.String str69 = mathException68.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray42, (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException72);
        java.lang.Class<?> wildcardClass75 = convergenceException72.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.MathException: " + "'", str69, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test18147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18147");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) costException24);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException35);
        costException24.addSuppressed((java.lang.Throwable) convergenceException36);
        java.lang.Object[] objArray38 = convergenceException36.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray38);
        org.apache.commons.math.optimization.CostException costException41 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray38);
        java.lang.Object[] objArray42 = costException41.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException43);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test18148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18148");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException15);
        java.lang.Object[] objArray17 = new java.lang.Object[] { 0L, "", '#', mathException16 };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray17);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[0, , #, org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test18149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18149");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, (double) 10L, (double) (-1L), (double) (byte) 100);
    }

    @Test
    public void test18150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18150");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, 1.0d, 0.0d, (double) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, randomVectorGenerator8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18151");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray45 = convergenceException43.getArguments();
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) costException46);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException46);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException49);
        java.lang.Object[] objArray51 = convergenceException49.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray51);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 10]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
    }

    @Test
    public void test18152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18152");
        double[] doubleArray4 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair6 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (-1.0d));
        double[] doubleArray9 = pointCostPair8.getPoint();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) (short) 100);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 'a');
        double[] doubleArray16 = pointCostPair15.getPoint();
        double[] doubleArray17 = pointCostPair15.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) 10L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18153");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        mathException10.addSuppressed((java.lang.Throwable) costException23);
        java.lang.String str25 = mathException10.getPattern();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException10);
        java.lang.Throwable[] throwableArray29 = mathException10.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException10);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18154");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1), (double) (-1.0f), 35.0d, (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray11 = new double[] { (short) 1, 100L, (byte) 0 };
        double[] doubleArray15 = new double[] { (short) 1, 100L, (byte) 0 };
        double[] doubleArray19 = new double[] { (short) 1, 100L, (byte) 0 };
        double[] doubleArray23 = new double[] { (short) 1, 100L, (byte) 0 };
        double[][] doubleArray24 = new double[][] { doubleArray11, doubleArray15, doubleArray19, doubleArray23 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair25 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, doubleArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
    }

    @Test
    public void test18155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18155");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException2);
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException2);
        java.lang.String str5 = convergenceException2.getPattern();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException20);
        java.lang.Object[] objArray23 = mathException20.getArguments();
        java.lang.Object[] objArray24 = mathException20.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray24);
        convergenceException2.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test18156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18156");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray13);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray21, (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        java.lang.Object[] objArray33 = convergenceException31.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) convergenceException38);
        java.lang.Throwable[] throwableArray40 = convergenceException38.getSuppressed();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray13, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException38);
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test18157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18157");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException11);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException37);
        java.lang.String str39 = mathException38.getPattern();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", objArray28, (java.lang.Throwable) mathException38);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray44, (java.lang.Throwable) mathException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", objArray28, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) costException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test18158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18158");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', 0.0d, (double) 1.0f, (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, randomVectorGenerator8, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18159");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double double15 = pointCostPair12.getCost();
        double[] doubleArray16 = pointCostPair12.getPoint();
        double double17 = pointCostPair12.getCost();
        double[] doubleArray18 = pointCostPair12.getPoint();
        double[] doubleArray19 = pointCostPair12.getPoint();
        double double20 = pointCostPair12.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 97.0d + "'", double15 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
    }

    @Test
    public void test18160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18160");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException33);
        java.lang.Object[] objArray35 = convergenceException33.getArguments();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", objArray35);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) mathException36);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException40);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test18161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18161");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException17);
        java.lang.Throwable[] throwableArray20 = costException19.getSuppressed();
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) convergenceException28);
        java.lang.Throwable[] throwableArray30 = convergenceException28.getSuppressed();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        mathException32.addSuppressed((java.lang.Throwable) costException45);
        java.lang.Object[] objArray47 = mathException32.getArguments();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) mathException32);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray20);
        java.lang.String str53 = costException52.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str53, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18162");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray9 = convergenceException8.getArguments();
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray13, (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", objArray9, (java.lang.Throwable) mathException22);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        java.lang.Object[] objArray26 = mathException24.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException24);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException24);
        java.lang.Throwable[] throwableArray29 = mathException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray37, (java.lang.Throwable) mathException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        java.lang.Throwable[] throwableArray51 = mathException49.getSuppressed();
        java.lang.Throwable[] throwableArray52 = mathException49.getSuppressed();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException49);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) mathException53);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test18163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18163");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(97.0d, (double) (byte) 0, (double) '#', (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 10.0d);
        double double26 = pointCostPair25.getCost();
        double[] doubleArray27 = pointCostPair25.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, (double) (-1));
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        double double41 = pointCostPair40.getCost();
        double[] doubleArray42 = pointCostPair40.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 100.0f);
        double double45 = pointCostPair44.getCost();
        double[] doubleArray46 = pointCostPair44.getPoint();
        double double47 = pointCostPair44.getCost();
        double[] doubleArray48 = pointCostPair44.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair50 = new org.apache.commons.math.optimization.PointCostPair(doubleArray48, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair52 = new org.apache.commons.math.optimization.PointCostPair(doubleArray48, (double) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, doubleArray27, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 100.0d + "'", double45 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 100.0d + "'", double47 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18164");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) (short) 0, (double) (short) 10, (double) 1.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double double23 = pointCostPair20.getCost();
        double double24 = pointCostPair20.getCost();
        double[] doubleArray25 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) (short) 1);
        double[] doubleArray34 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) (-1.0f));
        double double39 = pointCostPair38.getCost();
        double double40 = pointCostPair38.getCost();
        double[] doubleArray41 = pointCostPair38.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray41, (double) 'a');
        double[] doubleArray44 = pointCostPair43.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray44, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray44, (double) 1L);
        double[] doubleArray49 = pointCostPair48.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair50 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, doubleArray25, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1.0d) + "'", double40 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18165");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray6, (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException29);
        java.lang.Throwable[] throwableArray31 = costException29.getSuppressed();
        convergenceException16.addSuppressed((java.lang.Throwable) costException29);
        java.lang.String str33 = convergenceException16.getPattern();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException34);
        java.lang.Throwable[] throwableArray37 = mathException34.getSuppressed();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray37);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test18166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18166");
        java.lang.Object[] objArray4 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray4, (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray21);
        java.lang.Object[] objArray26 = new java.lang.Object[] { "hi!", throwableArray21 };
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", objArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        java.lang.Throwable[] throwableArray29 = costException27.getSuppressed();
        convergenceException14.addSuppressed((java.lang.Throwable) costException27);
        java.lang.String str31 = convergenceException14.getPattern();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException14);
        java.lang.String str34 = convergenceException14.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str34, "org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test18167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18167");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) costException22);
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray6);
        java.lang.String str27 = convergenceException26.getPattern();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException26);
        java.lang.Object[] objArray29 = convergenceException26.getArguments();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str27, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test18168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18168");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        java.lang.Object[] objArray10 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray10, (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", objArray6, (java.lang.Throwable) mathException19);
        java.lang.Throwable[] throwableArray22 = mathException19.getSuppressed();
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException19);
        java.lang.Object[] objArray25 = convergenceException24.getArguments();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test18169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18169");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException44);
        java.lang.Object[] objArray46 = mathException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException48);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
    }

    @Test
    public void test18170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18170");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException23);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException34);
        costException23.addSuppressed((java.lang.Throwable) convergenceException35);
        java.lang.Object[] objArray37 = convergenceException35.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) costException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) costException39);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException39);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test18171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18171");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        mathException2.addSuppressed((java.lang.Throwable) costException15);
        java.lang.Object[] objArray17 = mathException2.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        mathException2.addSuppressed((java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException2);
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        java.lang.Class<?> wildcardClass23 = throwableArray22.getClass();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test18172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18172");
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", throwableArray15 };
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray20);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray20);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray20);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray35);
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", throwableArray35 };
        org.apache.commons.math.optimization.CostException costException41 = new org.apache.commons.math.optimization.CostException("", objArray40);
        mathException28.addSuppressed((java.lang.Throwable) costException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException28);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray20, (java.lang.Throwable) mathException28);
        java.lang.Throwable[] throwableArray45 = mathException28.getSuppressed();
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException(throwable46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException47);
        mathException28.addSuppressed((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException28);
        java.lang.Throwable[] throwableArray51 = mathException50.getSuppressed();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException54);
        java.lang.Throwable[] throwableArray57 = mathException54.getSuppressed();
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException54);
        java.lang.Throwable[] throwableArray59 = costException58.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Object[]) throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test18173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18173");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, (double) 0, (double) (byte) 10, 52.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = new double[][] {};
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (short) 100, convergenceChecker7, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test18174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18174");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", throwableArray6 };
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", objArray11);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("not positive definite matrix", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray19);
        costException12.addSuppressed((java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", throwableArray33 };
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        java.lang.String str49 = mathException48.getPattern();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", objArray38, (java.lang.Throwable) mathException48);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray56, (java.lang.Throwable) mathException65);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { "hi!", throwableArray73 };
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", objArray78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException79);
        java.lang.Throwable[] throwableArray81 = costException79.getSuppressed();
        convergenceException66.addSuppressed((java.lang.Throwable) costException79);
        java.lang.String str83 = convergenceException66.getPattern();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException84);
        org.apache.commons.math.optimization.CostException costException87 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) costException87);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException87);
        costException12.addSuppressed((java.lang.Throwable) costException87);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException12);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException91);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test18175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18175");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray13, (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray35, (java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", objArray31, (java.lang.Throwable) mathException44);
        java.lang.Object[] objArray47 = mathException46.getArguments();
        java.lang.Object[] objArray48 = mathException46.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException46);
        mathException24.addSuppressed((java.lang.Throwable) convergenceException49);
        java.lang.String str51 = convergenceException49.getPattern();
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException49);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test18176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18176");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double[] doubleArray15 = pointCostPair12.getPoint();
        double double16 = pointCostPair12.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test18177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18177");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, (double) ' ', (double) (short) -1, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (byte) 1);
        double double24 = pointCostPair23.getCost();
        double[] doubleArray25 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, 35.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, 0.0d);
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) (byte) 1);
        double[] doubleArray43 = pointCostPair42.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair45 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair47 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair49 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) 1);
        double[] doubleArray50 = pointCostPair49.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair52 = new org.apache.commons.math.optimization.PointCostPair(doubleArray50, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair54 = new org.apache.commons.math.optimization.PointCostPair(doubleArray50, 1.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair55 = nelderMead4.minimize(costFunction5, 10, convergenceChecker7, doubleArray25, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18178");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.optimization.CostException costException8 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test18179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18179");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException2 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray3 = notPositiveDefiniteMatrixException2.getArguments();
        java.lang.Throwable[] throwableArray4 = notPositiveDefiniteMatrixException2.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) convergenceException6);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test18180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18180");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100, (double) 100L, 0.0d, (double) 1.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[] doubleArray10 = new double[] {};
        double[][] doubleArray11 = new double[][] { doubleArray8, doubleArray9, doubleArray10 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair14 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray11, (int) (byte) 1, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: row and column dimensions must be postive");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test18181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18181");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray20, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray20, (double) (short) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray20, (double) (short) -1);
        double double27 = pointCostPair26.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
    }

    @Test
    public void test18182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18182");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException");
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException15);
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) costException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) costException19);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test18183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18183");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 0, 0.0d, (double) 100L, (double) 10.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { 35.0d, 1, 0.0f, 100.0f, 100.0f, 1.0f };
        double[] doubleArray21 = new double[] { 35.0d, 1, 0.0f, 100.0f, 100.0f, 1.0f };
        double[] doubleArray28 = new double[] { 35.0d, 1, 0.0f, 100.0f, 100.0f, 1.0f };
        double[][] doubleArray29 = new double[][] { doubleArray14, doubleArray21, doubleArray28 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair32 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, doubleArray29, 0, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[35.0, 1.0, 0.0, 100.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[35.0, 1.0, 0.0, 100.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[35.0, 1.0, 0.0, 100.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
    }

    @Test
    public void test18184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18184");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.optimization.CostException costException41 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray37);
        java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", throwableArray37 };
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", objArray42);
        java.lang.Throwable[] throwableArray44 = costException43.getSuppressed();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) costException43);
        java.lang.Throwable[] throwableArray46 = mathException45.getSuppressed();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray16, (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException45);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test18185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18185");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10.0f, 0.0d, (double) 1.0f, (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, randomVectorGenerator8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18186");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException10);
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test18187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18187");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str6 = convergenceException5.getPattern();
        java.lang.Throwable[] throwableArray7 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray35 = convergenceException34.getArguments();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", objArray35, (java.lang.Throwable) mathException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        java.lang.Object[] objArray52 = mathException50.getArguments();
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray65);
        java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", throwableArray65 };
        org.apache.commons.math.optimization.CostException costException71 = new org.apache.commons.math.optimization.CostException("", objArray70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!", objArray70);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray70);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray70);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray70);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("not positive definite matrix", objArray52, (java.lang.Throwable) mathException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray52);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException77);
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7);
        java.lang.String str80 = costException79.getPattern();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str80, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18188");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException3);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException6);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException6);
    }

    @Test
    public void test18189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18189");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0, (double) (byte) 10, (double) (short) 100, (double) 10);
    }

    @Test
    public void test18190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18190");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        double[] doubleArray21 = pointCostPair19.getPoint();
        double[] doubleArray22 = pointCostPair19.getPoint();
        java.lang.Class<?> wildcardClass23 = pointCostPair19.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test18191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18191");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException20 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray21 = notPositiveDefiniteMatrixException20.getArguments();
        java.lang.Throwable[] throwableArray22 = notPositiveDefiniteMatrixException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray28 = mathException26.getSuppressed();
        java.lang.Object[] objArray29 = mathException26.getArguments();
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray43);
        java.lang.Object[] objArray45 = convergenceException44.getArguments();
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray45);
        convergenceException34.addSuppressed((java.lang.Throwable) mathException48);
        java.lang.Throwable[] throwableArray50 = mathException48.getSuppressed();
        java.lang.Object[] objArray51 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Throwable[] throwableArray53 = mathException52.getSuppressed();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: ", objArray29, (java.lang.Throwable) mathException54);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test18192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18192");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10L);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 1);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, (double) (byte) 10);
        double[] doubleArray23 = pointCostPair22.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18193");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        java.lang.String str25 = mathException24.getPattern();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) mathException24);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray28 = mathException26.getSuppressed();
        java.lang.Object[] objArray29 = mathException26.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException32);
        java.lang.Throwable[] throwableArray34 = convergenceException32.getSuppressed();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("");
        java.lang.String str37 = mathException36.getPattern();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray29);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test18194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18194");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException1);
        java.lang.Throwable[] throwableArray3 = convergenceException1.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray19);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", throwableArray19 };
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) costException25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray9);
        convergenceException1.addSuppressed((java.lang.Throwable) convergenceException28);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray35, (java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException45);
        convergenceException28.addSuppressed((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray54);
        java.lang.Object[] objArray56 = convergenceException55.getArguments();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray60, (java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", objArray56, (java.lang.Throwable) mathException69);
        java.lang.Object[] objArray72 = mathException71.getArguments();
        java.lang.Object[] objArray73 = mathException71.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException71);
        java.lang.Throwable[] throwableArray75 = convergenceException74.getSuppressed();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException76);
        convergenceException28.addSuppressed((java.lang.Throwable) mathException76);
        java.lang.Throwable[] throwableArray79 = convergenceException28.getSuppressed();
        java.lang.Throwable[] throwableArray80 = convergenceException28.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test18195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18195");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray31, (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray45 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray57 = convergenceException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray57, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray57);
        java.lang.Object[] objArray62 = new java.lang.Object[] { "hi!", throwableArray57 };
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException("", objArray62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException63);
        java.lang.Throwable[] throwableArray65 = costException63.getSuppressed();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray65);
        java.lang.Throwable throwable69 = null;
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Object[]) throwableArray65, throwable69);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Throwable) mathException76);
        java.lang.Object[] objArray79 = mathException78.getArguments();
        org.apache.commons.math.optimization.CostException costException80 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray79);
        org.apache.commons.math.optimization.CostException costException81 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray79);
        java.lang.Throwable[] throwableArray82 = costException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) costException81);
        java.lang.String str84 = costException81.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray45, (java.lang.Throwable) costException81);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException" + "'", str84, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18196");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        java.lang.Throwable[] throwableArray10 = convergenceException8.getSuppressed();
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException12);
        java.lang.Object[] objArray14 = costException13.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray34);
        java.lang.Object[] objArray39 = new java.lang.Object[] { "hi!", throwableArray34 };
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) costException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException45);
        java.lang.Throwable[] throwableArray47 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray63);
        java.lang.Object[] objArray68 = new java.lang.Object[] { "hi!", throwableArray63 };
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("", objArray68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) costException69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray53);
        convergenceException45.addSuppressed((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException76);
        java.lang.Object[] objArray79 = convergenceException78.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray14, (java.lang.Throwable) mathException80);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test18197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18197");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray26 = convergenceException25.getArguments();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray30, (java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", objArray26, (java.lang.Throwable) mathException39);
        java.lang.Throwable[] throwableArray42 = mathException39.getSuppressed();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray14, (java.lang.Throwable) mathException46);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, []]");
    }

    @Test
    public void test18198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18198");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException5);
        java.lang.Throwable[] throwableArray7 = convergenceException5.getSuppressed();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("");
        java.lang.String str10 = mathException9.getPattern();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException9);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0L, "", '#', mathException27 };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", objArray28, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Convergence failed", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[0, , #, org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test18199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18199");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray9, (java.lang.Throwable) mathException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray21 = costException20.getSuppressed();
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray31);
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", throwableArray31 };
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", objArray36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray36);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray36);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) costException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException42);
        java.lang.Throwable[] throwableArray44 = mathException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray63);
        java.lang.Object[] objArray68 = new java.lang.Object[] { "hi!", throwableArray63 };
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("", objArray68);
        mathException56.addSuppressed((java.lang.Throwable) costException69);
        java.lang.String str71 = mathException56.getPattern();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException56);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) mathException73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.optimization.CostException costException82 = new org.apache.commons.math.optimization.CostException(throwable81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException84);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException84);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException87);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException87);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test18200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18200");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        double double11 = pointCostPair10.getCost();
        double double12 = pointCostPair10.getCost();
        double double13 = pointCostPair10.getCost();
        double[] doubleArray14 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18201");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (double) (-1L), 35.0d, (double) ' ');
    }

    @Test
    public void test18202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18202");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 0L, "", '#', mathException17 };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException21);
        java.lang.Throwable[] throwableArray24 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray24);
        java.lang.String str26 = convergenceException25.getPattern();
        java.lang.Throwable[] throwableArray27 = convergenceException25.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException30);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("not positive definite matrix");
        costException33.addSuppressed((java.lang.Throwable) mathException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) mathException35);
        java.lang.Object[] objArray38 = mathException35.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray38);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.MathException: " + "'", str26, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test18203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18203");
        double[] doubleArray4 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair6 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (double) (short) 1);
        double double7 = pointCostPair6.getCost();
        double double8 = pointCostPair6.getCost();
        double double9 = pointCostPair6.getCost();
        double[] doubleArray10 = pointCostPair6.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18204");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("hi!", objArray16);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray45 = convergenceException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray45);
        java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", throwableArray45 };
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("", objArray50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException59);
        java.lang.String str61 = mathException60.getPattern();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", objArray50, (java.lang.Throwable) mathException60);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray71 = convergenceException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray66, (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!", objArray50, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.optimization.CostException costException78 = new org.apache.commons.math.optimization.CostException("", objArray50);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", objArray50);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray50);
        mathException33.addSuppressed((java.lang.Throwable) mathException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException80);
        java.lang.String str83 = convergenceException82.getPattern();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str83, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18205");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        double[] doubleArray11 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray11, (double) (-1L));
        double[] doubleArray14 = pointCostPair13.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 32.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18206");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double[] doubleArray11 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray11, (double) (byte) 10);
        double[] doubleArray14 = pointCostPair13.getPoint();
        double[] doubleArray15 = pointCostPair13.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18207");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        java.lang.Object[] objArray12 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray12, (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", objArray8, (java.lang.Throwable) mathException21);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray8);
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray8);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException25);
        java.lang.Object[] objArray27 = costException26.getArguments();
        java.lang.String str28 = costException26.getPattern();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str28, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18208");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), 97.0d, 1.0d, 10.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double double23 = pointCostPair20.getCost();
        double double24 = pointCostPair20.getCost();
        double[] doubleArray25 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) (short) 1);
        double[] doubleArray28 = pointCostPair27.getPoint();
        double[] doubleArray35 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (byte) 1);
        double[] doubleArray42 = pointCostPair41.getPoint();
        double[] doubleArray43 = pointCostPair41.getPoint();
        double[] doubleArray44 = pointCostPair41.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair45 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray28, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18209");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray27);
        java.lang.Object[] objArray32 = new java.lang.Object[] { "hi!", throwableArray27 };
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        java.lang.String str43 = mathException42.getPattern();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", objArray32, (java.lang.Throwable) mathException42);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray48, (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray32, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", objArray15, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str66 = mathException65.getPattern();
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException67 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException67);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray77 = convergenceException76.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray77, (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("", objArray72, (java.lang.Throwable) mathException81);
        org.apache.commons.math.optimization.CostException costException83 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException81);
        convergenceException68.addSuppressed((java.lang.Throwable) mathException81);
        mathException65.addSuppressed((java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", objArray15, (java.lang.Throwable) mathException81);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray15);
        org.apache.commons.math.optimization.CostException costException88 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException87);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test18210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18210");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1.0f), (double) ' ', (double) '#', 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, randomVectorGenerator8, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18211");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), 0.0d, 100.0d, (double) (-1L));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18212");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10L);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 10L);
        double double21 = pointCostPair20.getCost();
        double double22 = pointCostPair20.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test18213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18213");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", throwableArray14 };
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException28);
        java.lang.String str30 = mathException29.getPattern();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", objArray19, (java.lang.Throwable) mathException29);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray35, (java.lang.Throwable) mathException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!", objArray19, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray19, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray57 = convergenceException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray57);
        java.lang.Object[] objArray59 = convergenceException58.getArguments();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray68 = convergenceException67.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("", objArray63, (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", objArray59, (java.lang.Throwable) mathException72);
        java.lang.Object[] objArray75 = mathException74.getArguments();
        java.lang.Object[] objArray76 = mathException74.getArguments();
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!", objArray76);
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray76);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!", objArray76);
        convergenceException48.addSuppressed((java.lang.Throwable) convergenceException80);
        java.lang.Object[] objArray82 = convergenceException48.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray82);
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray82);
        org.apache.commons.math.optimization.CostException costException85 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray82);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException", objArray82);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray82);
        java.lang.Object[] objArray88 = convergenceException87.getArguments();
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, []]");
    }

    @Test
    public void test18214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18214");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        double double14 = pointCostPair12.getCost();
        double double15 = pointCostPair12.getCost();
        double double16 = pointCostPair12.getCost();
        double double17 = pointCostPair12.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test18215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18215");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double double15 = pointCostPair12.getCost();
        double double16 = pointCostPair12.getCost();
        double[] doubleArray17 = pointCostPair12.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 97.0d + "'", double15 == 97.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18216");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) (byte) -1, 35.0d, (double) 1L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        double double19 = pointCostPair18.getCost();
        double double20 = pointCostPair18.getCost();
        double[] doubleArray21 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 'a');
        double[] doubleArray24 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = pointCostPair28.getPoint();
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) (short) 1);
        double[] doubleArray43 = pointCostPair42.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair45 = new org.apache.commons.math.optimization.PointCostPair(doubleArray43, (double) 100);
        double[] doubleArray46 = pointCostPair45.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair50 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 10L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair51 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, doubleArray29, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18217");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException17);
        java.lang.Throwable[] throwableArray19 = costException17.getSuppressed();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray19);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Object[]) throwableArray19, throwable23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", throwable23);
        java.lang.String str26 = mathException25.getPattern();
        java.lang.String str27 = mathException25.getPattern();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str26, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str27, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18218");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100.0f, (double) 0.0f, 0.0d, (double) (byte) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { 32.0d, '4', (short) 0, 100L };
        double[] doubleArray17 = new double[] { 32.0d, '4', (short) 0, 100L };
        double[][] doubleArray18 = new double[][] { doubleArray12, doubleArray17 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair21 = nelderMead4.minimize(costFunction5, 100, convergenceChecker7, doubleArray18, (int) (byte) 10, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[32.0, 52.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[32.0, 52.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
    }

    @Test
    public void test18219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18219");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        mathException17.addSuppressed((java.lang.Throwable) costException30);
        java.lang.Object[] objArray32 = mathException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray36 = convergenceException35.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray36);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray45 = convergenceException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray45);
        java.lang.Throwable[] throwableArray50 = costException49.getSuppressed();
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.optimization.CostException costException65 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray61);
        java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", throwableArray61 };
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", objArray66);
        mathException54.addSuppressed((java.lang.Throwable) costException67);
        java.lang.Object[] objArray69 = mathException54.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray36, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException75);
        java.lang.Throwable[] throwableArray78 = convergenceException77.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test18220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18220");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable[] throwableArray12 = costException11.getSuppressed();
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray12, throwable14);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray27);
        java.lang.Object[] objArray32 = new java.lang.Object[] { "hi!", throwableArray27 };
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", objArray32);
        mathException20.addSuppressed((java.lang.Throwable) costException33);
        java.lang.Object[] objArray35 = mathException20.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray53);
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", throwableArray53 };
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("", objArray58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", objArray58);
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException60);
        convergenceException44.addSuppressed((java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray35, (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { "hi!", throwableArray73 };
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", objArray78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray78);
        java.lang.String str81 = mathException80.getPattern();
        java.lang.String str82 = mathException80.getPattern();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException80);
        java.lang.Object[] objArray84 = mathException83.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray87 = convergenceException86.getSuppressed();
        org.apache.commons.math.optimization.CostException costException88 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException86);
        mathException83.addSuppressed((java.lang.Throwable) convergenceException86);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException86);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str81, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str82, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(throwableArray87);
    }

    @Test
    public void test18221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18221");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10.0f, (double) (-1L), (double) 1, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = new double[] {};
        double[][] doubleArray9 = new double[][] { doubleArray8 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test18222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18222");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((-1.0d), (double) 10L, (double) (short) -1, (double) (short) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray8, doubleArray9 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair13 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray10, 100, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: row and column dimensions must be postive");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test18223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18223");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException3);
        java.lang.Object[] objArray5 = convergenceException3.getArguments();
        java.lang.Throwable[] throwableArray6 = convergenceException3.getSuppressed();
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Object[]) throwableArray6);
        java.lang.Class<?> wildcardClass8 = mathException7.getClass();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test18224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18224");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (double) '#', (double) (byte) 10, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, randomVectorGenerator8, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18225");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray31, (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray53);
        java.lang.Object[] objArray55 = convergenceException54.getArguments();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray64 = convergenceException63.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray64, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray59, (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", objArray55, (java.lang.Throwable) mathException68);
        java.lang.Object[] objArray71 = mathException70.getArguments();
        java.lang.Object[] objArray72 = mathException70.getArguments();
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!", objArray72);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray72);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!", objArray72);
        convergenceException44.addSuppressed((java.lang.Throwable) convergenceException76);
        java.lang.Object[] objArray78 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException79);
        java.lang.Class<?> wildcardClass81 = convergenceException79.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test18226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18226");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) '#', (double) 100.0f, (double) 10.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double19 = pointCostPair18.getCost();
        double[] doubleArray20 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray20, (double) 100.0f);
        double double23 = pointCostPair22.getCost();
        double[] doubleArray24 = pointCostPair22.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 10.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 'a');
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 100L);
        double[] doubleArray31 = pointCostPair30.getPoint();
        double[] doubleArray38 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, 0.0d);
        double double41 = pointCostPair40.getCost();
        double[] doubleArray42 = pointCostPair40.getPoint();
        double[] doubleArray43 = pointCostPair40.getPoint();
        double[] doubleArray44 = pointCostPair40.getPoint();
        double double45 = pointCostPair40.getCost();
        double[] doubleArray46 = pointCostPair40.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 100);
        double[] doubleArray49 = pointCostPair48.getPoint();
        double[] doubleArray50 = pointCostPair48.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray31, doubleArray50, (int) (byte) 10, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18227");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ");
        java.lang.Object[] objArray3 = mathException2.getArguments();
        java.lang.Throwable[] throwableArray4 = mathException2.getSuppressed();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test18228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18228");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", throwableArray15 };
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) costException21);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException23);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, []]");
    }

    @Test
    public void test18229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18229");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1), (double) '#', (double) (byte) 100, (-1.0d));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (short) 1);
        double double22 = pointCostPair21.getCost();
        double[] doubleArray23 = pointCostPair21.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair28 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray8, doubleArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18230");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", objArray21);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException23);
        convergenceException7.addSuppressed((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException27);
        java.lang.Throwable[] throwableArray29 = costException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException30);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18231");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray7, (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException30);
        java.lang.Throwable[] throwableArray32 = costException30.getSuppressed();
        convergenceException17.addSuppressed((java.lang.Throwable) costException30);
        java.lang.String str34 = convergenceException17.getPattern();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException35);
        java.lang.Throwable[] throwableArray38 = mathException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray49);
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", throwableArray49 };
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray60 = convergenceException59.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException63);
        java.lang.String str65 = mathException64.getPattern();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("", objArray54, (java.lang.Throwable) mathException64);
        java.lang.Object[] objArray70 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray75 = convergenceException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray75, (java.lang.Throwable) convergenceException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("", objArray70, (java.lang.Throwable) mathException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!", objArray54, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray54, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray54);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) costException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) costException84);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException84);
        java.lang.Throwable[] throwableArray88 = convergenceException87.getSuppressed();
        java.lang.String str89 = convergenceException87.toString();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str89, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18232");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1.0f), (double) (byte) -1, (double) (byte) -1, (double) 10);
    }

    @Test
    public void test18233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18233");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100.0f, 32.0d, (double) (byte) 0, (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, randomVectorGenerator8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18234");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) (byte) 0);
        double double15 = pointCostPair14.getCost();
        double double16 = pointCostPair14.getCost();
        double[] doubleArray17 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18235");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10.0f, (double) (-1.0f), (double) (-1), (double) (short) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[] doubleArray10 = new double[] {};
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        double[] doubleArray13 = new double[] {};
        double[][] doubleArray14 = new double[][] { doubleArray8, doubleArray9, doubleArray10, doubleArray11, doubleArray12, doubleArray13 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair17 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, doubleArray14, 10, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: row and column dimensions must be postive");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
    }

    @Test
    public void test18236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18236");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException24);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException(throwable27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", throwableArray40 };
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", objArray45);
        mathException33.addSuppressed((java.lang.Throwable) costException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray66);
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", throwableArray66 };
        org.apache.commons.math.optimization.CostException costException72 = new org.apache.commons.math.optimization.CostException("", objArray71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) costException72);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray79 = convergenceException78.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray79, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException83);
        costException72.addSuppressed((java.lang.Throwable) convergenceException84);
        java.lang.Throwable[] throwableArray86 = convergenceException84.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException84);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException89);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test18237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18237");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException3 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray4 = notPositiveDefiniteMatrixException3.getArguments();
        java.lang.Throwable[] throwableArray5 = notPositiveDefiniteMatrixException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException38);
        java.lang.String str40 = mathException39.getPattern();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", objArray29, (java.lang.Throwable) mathException39);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("hi!", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray48 = convergenceException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray48);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray57 = convergenceException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray57, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) mathException61);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException61);
        costException42.addSuppressed((java.lang.Throwable) convergenceException64);
        java.lang.Object[] objArray66 = costException42.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray84 = convergenceException83.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray84, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.optimization.CostException costException88 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray84);
        java.lang.Object[] objArray89 = new java.lang.Object[] { "hi!", throwableArray84 };
        org.apache.commons.math.optimization.CostException costException90 = new org.apache.commons.math.optimization.CostException("", objArray89);
        mathException77.addSuppressed((java.lang.Throwable) costException90);
        java.lang.String str92 = mathException77.getPattern();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException77);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) mathException94);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Convergence failed", objArray66, (java.lang.Throwable) convergenceException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray66);
        convergenceException13.addSuppressed((java.lang.Throwable) mathException97);
        java.lang.Throwable[] throwableArray99 = mathException97.getSuppressed();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(throwableArray99);
    }

    @Test
    public void test18238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18238");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray51 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException54);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException54);
        java.lang.Object[] objArray58 = mathException54.getArguments();
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray58, throwable59);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test18239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18239");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), (double) 1L, (double) (short) 0, (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18240");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double[] doubleArray9 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair11 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, 0.0d);
        double[] doubleArray12 = pointCostPair11.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) 10);
        double[] doubleArray17 = pointCostPair16.getPoint();
        java.lang.Class<?> wildcardClass18 = pointCostPair16.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test18241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18241");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException17);
        java.lang.Object[] objArray19 = convergenceException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray19, (java.lang.Throwable) mathException22);
        java.lang.Throwable[] throwableArray25 = mathException22.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test18242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18242");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0, (double) 10L, (double) (-1L), 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0);
        double[] doubleArray24 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 0.0d);
        double[] doubleArray27 = pointCostPair26.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, (double) 1);
        double double30 = pointCostPair29.getCost();
        double[] doubleArray31 = pointCostPair29.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) 10.0f);
        double[] doubleArray34 = pointCostPair33.getPoint();
        double[] doubleArray41 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray41, 0.0d);
        double double44 = pointCostPair43.getCost();
        double[] doubleArray45 = pointCostPair43.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair47 = new org.apache.commons.math.optimization.PointCostPair(doubleArray45, (double) 10L);
        double double48 = pointCostPair47.getCost();
        double[] doubleArray49 = pointCostPair47.getPoint();
        double[] doubleArray50 = pointCostPair47.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair52 = new org.apache.commons.math.optimization.PointCostPair(doubleArray50, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, doubleArray34, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18243");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray10);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", objArray10);
        java.lang.Throwable[] throwableArray29 = costException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException30);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18244");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10L);
        double[] doubleArray13 = pointCostPair12.getPoint();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 1L);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18245");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(32.0d, (double) (short) 1, (double) (-1L), 32.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, randomVectorGenerator8, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18246");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray6, (java.lang.Throwable) mathException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException15);
        java.lang.Object[] objArray18 = mathException15.getArguments();
        java.lang.Object[] objArray19 = mathException15.getArguments();
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray19);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException22 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray23 = notPositiveDefiniteMatrixException22.getArguments();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notPositiveDefiniteMatrixException22);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException24);
        java.lang.String str26 = convergenceException25.getPattern();
        java.lang.Throwable[] throwableArray27 = convergenceException25.getSuppressed();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray19, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException53);
        java.lang.String str55 = mathException54.getPattern();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray44, (java.lang.Throwable) mathException54);
        java.lang.Object[] objArray60 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray60, (java.lang.Throwable) mathException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", objArray44, (java.lang.Throwable) convergenceException70);
        java.lang.Object[] objArray72 = convergenceException70.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException70);
        costException29.addSuppressed((java.lang.Throwable) convergenceException70);
        java.lang.Object[] objArray75 = convergenceException70.getArguments();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray75);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 10]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[10, 10]");
    }

    @Test
    public void test18247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18247");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1.0f, (-1.0d), (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18248");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray48 = convergenceException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) mathException52);
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException(throwable55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException57);
        convergenceException32.addSuppressed((java.lang.Throwable) convergenceException58);
        java.lang.Object[] objArray60 = convergenceException58.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray60);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray71 = convergenceException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray71);
        java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", throwableArray71 };
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", objArray76);
        mathException64.addSuppressed((java.lang.Throwable) costException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) costException77);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) costException77);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.optimization.CostException costException82 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException", objArray60);
        org.apache.commons.math.optimization.CostException costException83 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray60);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, []]");
    }

    @Test
    public void test18249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18249");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, (double) (byte) -1, (double) 100L, (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, (double) (byte) 100);
        double double21 = pointCostPair20.getCost();
        double double22 = pointCostPair20.getCost();
        double double23 = pointCostPair20.getCost();
        double[] doubleArray24 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 10L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) (short) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 0L);
        double[] doubleArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair34 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, doubleArray24, doubleArray31, (int) (byte) 100, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18250");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray45 = convergenceException43.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray55);
        java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", throwableArray55 };
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("", objArray60);
        mathException48.addSuppressed((java.lang.Throwable) costException61);
        java.lang.Object[] objArray63 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        mathException48.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray45, (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray71 = mathException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray45, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException73);
        java.lang.String str78 = convergenceException77.getPattern();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str78, "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18251");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.optimization.CostException costException8 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray13, (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        costException8.addSuppressed((java.lang.Throwable) mathException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException24);
        java.lang.Class<?> wildcardClass27 = mathException24.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test18252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18252");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException3);
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException3);
        org.apache.commons.math.optimization.CostException costException6 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("not positive definite matrix");
        costException6.addSuppressed((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException8);
    }

    @Test
    public void test18253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18253");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException16);
        java.lang.Throwable[] throwableArray18 = costException17.getSuppressed();
        java.lang.Object[] objArray19 = costException17.getArguments();
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray19);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test18254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18254");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(1.0d, (double) (byte) -1, (-1.0d), (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18255");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 100L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 10);
        double[] doubleArray15 = pointCostPair14.getPoint();
        double[] doubleArray16 = pointCostPair14.getPoint();
        double[] doubleArray17 = pointCostPair14.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18256");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException21);
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException(throwable24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException26);
        java.lang.Throwable[] throwableArray28 = convergenceException26.getSuppressed();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray28);
        java.lang.Throwable[] throwableArray31 = costException30.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test18257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18257");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException4);
        java.lang.Object[] objArray6 = convergenceException4.getArguments();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException4);
        java.lang.Throwable[] throwableArray8 = costException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray20 = mathException18.getSuppressed();
        java.lang.Object[] objArray21 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray21);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test18258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18258");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException24);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
    }

    @Test
    public void test18259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18259");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 35.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 10);
        double[] doubleArray15 = pointCostPair14.getPoint();
        double[] doubleArray16 = pointCostPair14.getPoint();
        double double17 = pointCostPair14.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test18260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18260");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException20);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test18261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18261");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str5 = mathException4.getPattern();
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException6 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException6);
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException20);
        convergenceException7.addSuppressed((java.lang.Throwable) mathException20);
        mathException4.addSuppressed((java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray26 = mathException20.getSuppressed();
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException28);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18262");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", throwableArray14 };
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", objArray19);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray25, (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray42);
        java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", throwableArray42 };
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException("", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException48);
        java.lang.Throwable[] throwableArray50 = costException48.getSuppressed();
        convergenceException35.addSuppressed((java.lang.Throwable) costException48);
        java.lang.Throwable[] throwableArray52 = costException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray19, (java.lang.Throwable) costException48);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray19);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray19);
        java.lang.Object[] objArray59 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray64 = convergenceException63.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray64, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray59, (java.lang.Throwable) mathException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException68);
        java.lang.String str71 = costException70.getPattern();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", objArray19, (java.lang.Throwable) costException70);
        org.apache.commons.math.optimization.CostException costException73 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: not positive definite matrix", objArray19);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", objArray19);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: hi!", objArray19);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test18263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18263");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 1, (double) 'a', (double) (-1L), (double) 1L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18264");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", throwableArray15 };
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", objArray20);
        mathException8.addSuppressed((java.lang.Throwable) costException21);
        java.lang.String str23 = mathException8.getPattern();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        java.lang.Throwable[] throwableArray26 = mathException8.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18265");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray50);
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", throwableArray50 };
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", objArray55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException56);
        java.lang.Throwable[] throwableArray58 = costException56.getSuppressed();
        convergenceException43.addSuppressed((java.lang.Throwable) costException56);
        java.lang.String str60 = convergenceException43.getPattern();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) mathException61);
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = costException64.getArguments();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", objArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray65);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
    }

    @Test
    public void test18266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18266");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray60 = convergenceException59.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray60);
        java.lang.Object[] objArray65 = new java.lang.Object[] { "hi!", throwableArray60 };
        org.apache.commons.math.optimization.CostException costException66 = new org.apache.commons.math.optimization.CostException("", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) costException66);
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray16, (java.lang.Throwable) costException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!, []]");
    }

    @Test
    public void test18267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18267");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException42);
        mathException25.addSuppressed((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Throwable) convergenceException47);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test18268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18268");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray19);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", throwableArray19 };
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) costException25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray53);
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", throwableArray53 };
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("", objArray58);
        mathException46.addSuppressed((java.lang.Throwable) costException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) mathException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray38);
        costException30.addSuppressed((java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = costException30.getArguments();
        org.apache.commons.math.optimization.CostException costException66 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray65);
        java.lang.Object[] objArray67 = costException66.getArguments();
        org.apache.commons.math.optimization.CostException costException68 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray67);
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray67);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
    }

    @Test
    public void test18269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18269");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException23);
        java.lang.Object[] objArray25 = convergenceException23.getArguments();
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray17, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray17);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray17, throwable29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException30);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test18270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18270");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) '#', (double) '4', 100.0d, 52.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, randomVectorGenerator8, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18271");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, (double) 10.0f, (double) (byte) 100, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 35.0d);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (byte) 100);
        double[] doubleArray30 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (short) 1);
        double double37 = pointCostPair36.getCost();
        double[] doubleArray38 = pointCostPair36.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 100L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, 100.0d);
        double[] doubleArray45 = pointCostPair44.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair47 = new org.apache.commons.math.optimization.PointCostPair(doubleArray45, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair50 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, doubleArray21, doubleArray45, 100, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18272");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(1.0d, (double) (-1L), (double) '4', 10.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray10 = new double[] { 10.0f, 1L };
        double[] doubleArray13 = new double[] { 10.0f, 1L };
        double[] doubleArray16 = new double[] { 10.0f, 1L };
        double[] doubleArray19 = new double[] { 10.0f, 1L };
        double[] doubleArray22 = new double[] { 10.0f, 1L };
        double[][] doubleArray23 = new double[][] { doubleArray10, doubleArray13, doubleArray16, doubleArray19, doubleArray22 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair24 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
    }

    @Test
    public void test18273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18273");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray16);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray28);
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", throwableArray28 };
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", objArray16, (java.lang.Throwable) convergenceException35);
        java.lang.String str37 = mathException36.getPattern();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray39);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.optimization.CostException" + "'", str37, "org.apache.commons.math.optimization.CostException");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test18274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18274");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (double) (byte) 100, (double) (short) 1, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double double23 = pointCostPair20.getCost();
        double[] doubleArray24 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 100);
        double[] doubleArray31 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (short) 1);
        double double34 = pointCostPair33.getCost();
        double[] doubleArray35 = pointCostPair33.getPoint();
        double double36 = pointCostPair33.getCost();
        double[] doubleArray37 = pointCostPair33.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair42 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, doubleArray24, doubleArray37, 0, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18275");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", objArray18);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray24, (java.lang.Throwable) mathException33);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray41);
        java.lang.Object[] objArray46 = new java.lang.Object[] { "hi!", throwableArray41 };
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException("", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException47);
        java.lang.Throwable[] throwableArray49 = costException47.getSuppressed();
        convergenceException34.addSuppressed((java.lang.Throwable) costException47);
        java.lang.Throwable[] throwableArray51 = costException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray18, (java.lang.Throwable) costException47);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray18);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray18);
        java.lang.Object[] objArray58 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("", objArray58, (java.lang.Throwable) mathException67);
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException67);
        java.lang.String str70 = costException69.getPattern();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", objArray18, (java.lang.Throwable) costException69);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException71);
        java.lang.Object[] objArray73 = mathException72.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray73);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException74);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test18276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18276");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        mathException10.addSuppressed((java.lang.Throwable) costException23);
        java.lang.String str25 = mathException10.getPattern();
        java.lang.Object[] objArray26 = mathException10.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray35 = convergenceException34.getArguments();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", objArray35, (java.lang.Throwable) mathException48);
        java.lang.Throwable[] throwableArray51 = mathException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) costException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("not positive definite matrix", objArray26, (java.lang.Throwable) costException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException63);
        java.lang.Throwable[] throwableArray65 = mathException63.getSuppressed();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException66);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test18277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18277");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, (double) 10.0f, (double) (byte) 100, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray8 = null;
        double[] doubleArray13 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (short) 1);
        double[] doubleArray16 = pointCostPair15.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray16, 1.0d);
        double[] doubleArray19 = pointCostPair18.getPoint();
        double[] doubleArray20 = pointCostPair18.getPoint();
        double[] doubleArray21 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 35.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 32.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 52.0d);
        double[] doubleArray30 = pointCostPair29.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair31 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray8, doubleArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18278");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18279");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException19);
        java.lang.Object[] objArray21 = convergenceException20.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        java.lang.Throwable[] throwableArray34 = costException33.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) mathException35);
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: not positive definite matrix", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray21);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18280");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray29 = mathException27.getSuppressed();
        java.lang.Object[] objArray30 = mathException27.getArguments();
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray37);
        java.lang.Object[] objArray39 = convergenceException38.getArguments();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray48 = convergenceException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray43, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", objArray39, (java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray55 = mathException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", objArray30, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", objArray30);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test18281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18281");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) '#', (double) (short) 1, 10.0d, (double) (byte) -1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18282");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str7 = convergenceException6.getPattern();
        java.lang.Throwable[] throwableArray8 = convergenceException6.getSuppressed();
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        java.lang.String str34 = mathException33.getPattern();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", objArray23, (java.lang.Throwable) mathException33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.String str41 = costException40.getPattern();
        java.lang.String str42 = costException40.getPattern();
        java.lang.Throwable[] throwableArray43 = costException40.getSuppressed();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!" + "'", str41, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!" + "'", str42, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test18283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18283");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        java.lang.String str25 = mathException24.getPattern();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray30, (java.lang.Throwable) mathException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, (java.lang.Throwable) convergenceException40);
        java.lang.Object[] objArray42 = convergenceException40.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException40);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 10]");
    }

    @Test
    public void test18284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18284");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, (double) (short) 100, (double) 0L, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18285");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray6, (java.lang.Throwable) mathException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException15);
        java.lang.Throwable[] throwableArray18 = costException17.getSuppressed();
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException21 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException21);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray26, (java.lang.Throwable) mathException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException35);
        convergenceException22.addSuppressed((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException22);
        java.lang.Object[] objArray41 = convergenceException22.getArguments();
        java.lang.Object[] objArray42 = convergenceException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray51 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray51, (java.lang.Throwable) mathException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException60);
        java.lang.Object[] objArray63 = mathException60.getArguments();
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException65);
        java.lang.String str68 = convergenceException65.getPattern();
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException65);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str68, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18286");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        double double14 = pointCostPair12.getCost();
        double[] doubleArray15 = pointCostPair12.getPoint();
        double double16 = pointCostPair12.getCost();
        double[] doubleArray17 = pointCostPair12.getPoint();
        double[] doubleArray18 = pointCostPair12.getPoint();
        double[] doubleArray19 = pointCostPair12.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18287");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!");
    }

    @Test
    public void test18288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18288");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) (byte) 100, 10.0d, (double) (byte) -1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, randomVectorGenerator8, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18289");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException15);
        java.lang.Throwable[] throwableArray17 = convergenceException15.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test18290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18290");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0, (double) ' ', 52.0d, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { 0.0d };
        double[] doubleArray11 = new double[] { 0.0d };
        double[] doubleArray13 = new double[] { 0.0d };
        double[] doubleArray15 = new double[] { 0.0d };
        double[] doubleArray17 = new double[] { 0.0d };
        double[] doubleArray19 = new double[] { 0.0d };
        double[][] doubleArray20 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15, doubleArray17, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair23 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, doubleArray20, 100, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18291");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, (double) 1L, 52.0d, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 0, convergenceChecker7, randomVectorGenerator8, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18292");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) (byte) 0, (double) (byte) 1, (double) 1.0f);
    }

    @Test
    public void test18293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18293");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("not positive definite matrix", objArray15);
        java.lang.Throwable[] throwableArray19 = mathException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) costException28);
        mathException18.addSuppressed((java.lang.Throwable) convergenceException29);
        java.lang.String str31 = mathException18.getPattern();
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) mathException36);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "not positive definite matrix" + "'", str31, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18294");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        double[] doubleArray11 = pointCostPair8.getPoint();
        double[] doubleArray12 = pointCostPair8.getPoint();
        double[] doubleArray13 = pointCostPair8.getPoint();
        double[] doubleArray14 = pointCostPair8.getPoint();
        double[] doubleArray15 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, 52.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18295");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, 10.0d, 32.0d, (double) 'a');
    }

    @Test
    public void test18296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18296");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1), 0.0d, (double) (-1), (double) (short) 1);
    }

    @Test
    public void test18297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18297");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10, (double) 1.0f, (double) 1, 97.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18298");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray9 = convergenceException8.getArguments();
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray13, (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", objArray9, (java.lang.Throwable) mathException22);
        java.lang.Throwable[] throwableArray25 = mathException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) costException34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray44);
        java.lang.Object[] objArray49 = new java.lang.Object[] { "hi!", throwableArray44 };
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", objArray49);
        mathException37.addSuppressed((java.lang.Throwable) costException50);
        java.lang.Object[] objArray52 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        mathException37.addSuppressed((java.lang.Throwable) mathException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) mathException37);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        java.lang.Object[] objArray59 = mathException57.getArguments();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test18299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18299");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(10.0d, (double) 1, 0.0d, (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray13 = new double[] { (short) -1, 100.0f, ' ', (short) 100, 1L };
        double[] doubleArray19 = new double[] { (short) -1, 100.0f, ' ', (short) 100, 1L };
        double[][] doubleArray20 = new double[][] { doubleArray13, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair23 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, doubleArray20, (int) (byte) 10, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 32.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 32.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18300");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray24 = costException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray26 = convergenceException25.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray36);
        java.lang.Object[] objArray38 = convergenceException37.getArguments();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray47 = convergenceException46.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray42, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", objArray38, (java.lang.Throwable) mathException51);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray38);
        java.lang.String str55 = costException54.getPattern();
        java.lang.Throwable[] throwableArray56 = costException54.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException54);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) costException54);
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray60 = costException59.getArguments();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.MathException: " + "'", str55, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
    }

    @Test
    public void test18301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18301");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) (byte) 1, (double) 0.0f, 0.0d);
    }

    @Test
    public void test18302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18302");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException5);
        java.lang.Object[] objArray7 = convergenceException5.getArguments();
        java.lang.Throwable[] throwableArray8 = convergenceException5.getSuppressed();
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray13, (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray30);
        java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", throwableArray30 };
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException("", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException36);
        java.lang.Throwable[] throwableArray38 = costException36.getSuppressed();
        convergenceException23.addSuppressed((java.lang.Throwable) costException36);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray45 = convergenceException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray45);
        java.lang.Throwable[] throwableArray50 = costException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) mathException59);
        costException36.addSuppressed((java.lang.Throwable) mathException59);
        java.lang.Object[] objArray62 = costException36.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray70 = convergenceException69.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray70, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.optimization.CostException costException74 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray70);
        java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", throwableArray70 };
        org.apache.commons.math.optimization.CostException costException76 = new org.apache.commons.math.optimization.CostException("", objArray75);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray81 = convergenceException80.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray81, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException84);
        java.lang.String str86 = mathException85.getPattern();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("", objArray75, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", objArray62, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException88);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test18303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18303");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: not positive definite matrix");
    }

    @Test
    public void test18304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18304");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 0, (double) (byte) 1, 1.0d, (double) 100);
    }

    @Test
    public void test18305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18305");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) (byte) 100, (double) (short) -1, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) 1);
        double double21 = pointCostPair20.getCost();
        double[] doubleArray22 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) (short) -1);
        double double27 = pointCostPair26.getCost();
        double double28 = pointCostPair26.getCost();
        double[] doubleArray29 = pointCostPair26.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray29, (double) 100L);
        double[] doubleArray38 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) (short) 1);
        double double45 = pointCostPair44.getCost();
        double[] doubleArray46 = pointCostPair44.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair50 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 10.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair52 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) (short) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair54 = new org.apache.commons.math.optimization.PointCostPair(doubleArray46, (double) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair57 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, doubleArray29, doubleArray46, 10, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18306");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.optimization.CostException costException8 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) mathException7);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", throwableArray22 };
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException36);
        java.lang.String str38 = mathException37.getPattern();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray27, (java.lang.Throwable) mathException37);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray48 = convergenceException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray43, (java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", objArray27, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray27, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException57);
        mathException10.addSuppressed((java.lang.Throwable) mathException58);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test18307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18307");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", throwableArray14 };
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", objArray19);
        mathException7.addSuppressed((java.lang.Throwable) costException20);
        java.lang.String str22 = mathException7.getPattern();
        java.lang.Object[] objArray23 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray32 = convergenceException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray32);
        java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", throwableArray32 };
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("", objArray37);
        mathException25.addSuppressed((java.lang.Throwable) costException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray23, (java.lang.Throwable) costException38);
        java.lang.Throwable[] throwableArray41 = convergenceException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray54);
        java.lang.Throwable[] throwableArray59 = costException58.getSuppressed();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray59);
        java.lang.Object[] objArray63 = convergenceException62.getArguments();
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) costException64);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray72 = convergenceException71.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray72, (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray72);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray83 = convergenceException82.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray83, (java.lang.Throwable) convergenceException85);
        org.apache.commons.math.optimization.CostException costException87 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray83);
        java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", throwableArray83 };
        org.apache.commons.math.optimization.CostException costException89 = new org.apache.commons.math.optimization.CostException("", objArray88);
        mathException76.addSuppressed((java.lang.Throwable) costException89);
        java.lang.String str91 = mathException76.getPattern();
        java.lang.Throwable[] throwableArray92 = mathException76.getSuppressed();
        java.lang.Object[] objArray93 = mathException76.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) mathException76);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
    }

    @Test
    public void test18308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18308");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException18);
        java.lang.Object[] objArray20 = convergenceException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException21);
        java.lang.Throwable[] throwableArray23 = convergenceException21.getSuppressed();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray32 = convergenceException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray32);
        java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", throwableArray32 };
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException46);
        java.lang.String str48 = mathException47.getPattern();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", objArray37, (java.lang.Throwable) mathException47);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) mathException47);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test18309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18309");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, 52.0d, (double) (byte) 1, 0.0d);
    }

    @Test
    public void test18310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18310");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(52.0d, (double) (-1L), (double) 1.0f, (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) 100, convergenceChecker7, randomVectorGenerator8, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18311");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, (double) (byte) -1, (double) 100L, (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0);
        double[] doubleArray24 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 0.0d);
        double[] doubleArray27 = pointCostPair26.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, (double) 1);
        double double30 = pointCostPair29.getCost();
        double[] doubleArray31 = pointCostPair29.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) 10.0f);
        double[] doubleArray34 = pointCostPair33.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) (-1));
        double[] doubleArray41 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray41, (double) (short) 1);
        double[] doubleArray44 = pointCostPair43.getPoint();
        double double45 = pointCostPair43.getCost();
        double double46 = pointCostPair43.getCost();
        double[] doubleArray47 = pointCostPair43.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair49 = new org.apache.commons.math.optimization.PointCostPair(doubleArray47, (double) (-1));
        double[] doubleArray50 = pointCostPair49.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, doubleArray34, doubleArray50, (int) (short) 1, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18312");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException23);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException(throwable26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        mathException32.addSuppressed((java.lang.Throwable) costException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException51);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
    }

    @Test
    public void test18313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18313");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray18);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray18);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", throwableArray33 };
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", objArray38);
        mathException26.addSuppressed((java.lang.Throwable) costException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray18, (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray43 = mathException26.getSuppressed();
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException(throwable44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException45);
        mathException26.addSuppressed((java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray49 = mathException48.getSuppressed();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) mathException48);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException48);
        java.lang.String str52 = convergenceException51.toString();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: " + "'", str52, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18314");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) convergenceException11);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test18315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18315");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, (double) (-1.0f), 32.0d, 35.0d);
    }

    @Test
    public void test18316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18316");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (double) 100.0f, (double) 1.0f, (double) 1.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        double double15 = pointCostPair14.getCost();
        double[] doubleArray16 = pointCostPair14.getPoint();
        double[] doubleArray17 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, 0.0d);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, (double) (byte) 10);
        double double31 = pointCostPair30.getCost();
        double double32 = pointCostPair30.getCost();
        double double33 = pointCostPair30.getCost();
        double[] doubleArray34 = pointCostPair30.getPoint();
        double double35 = pointCostPair30.getCost();
        double[] doubleArray36 = pointCostPair30.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, doubleArray17, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18317");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) 1.0f, 100.0d, (double) 100L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) 1);
        double double21 = pointCostPair20.getCost();
        double[] doubleArray22 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, (double) 100L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, 100.0d);
        double[] doubleArray35 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray35, (double) (byte) -1);
        double[] doubleArray42 = pointCostPair41.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 0L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, 97.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray22, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18318");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 'a', (double) 100.0f, (double) (-1), (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, randomVectorGenerator8, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18319");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray10, (double) 10L);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 10L);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test18320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18320");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException16);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray25);
        java.lang.Throwable[] throwableArray30 = costException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException33);
        convergenceException17.addSuppressed((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException33);
        java.lang.Throwable[] throwableArray37 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray56);
        java.lang.Throwable[] throwableArray61 = costException60.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.optimization.CostException costException65 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) costException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test18321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18321");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, (double) (byte) 1, (double) (short) -1, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = new double[][] {};
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray8, 10, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test18322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18322");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 'a');
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 100.0f);
        double[] doubleArray16 = pointCostPair15.getPoint();
        double double17 = pointCostPair15.getCost();
        double double18 = pointCostPair15.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
    }

    @Test
    public void test18323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18323");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException3);
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException3);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", throwableArray22 };
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray27);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray27);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray42);
        java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", throwableArray42 };
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException("", objArray47);
        mathException35.addSuppressed((java.lang.Throwable) costException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray27, (java.lang.Throwable) mathException35);
        java.lang.Throwable[] throwableArray52 = mathException35.getSuppressed();
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException(throwable53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException54);
        mathException35.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException35);
        java.lang.Throwable[] throwableArray58 = mathException57.getSuppressed();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray8, (java.lang.Throwable) mathException59);
        org.apache.commons.math.optimization.CostException costException61 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException60);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test18324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18324");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: not positive definite matrix", objArray15);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException24 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray25 = notPositiveDefiniteMatrixException24.getArguments();
        java.lang.Throwable[] throwableArray26 = notPositiveDefiniteMatrixException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray26);
        convergenceException21.addSuppressed((java.lang.Throwable) convergenceException27);
        java.lang.Throwable[] throwableArray29 = convergenceException21.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test18325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18325");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException21);
        java.lang.Object[] objArray23 = convergenceException21.getArguments();
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) convergenceException21);
        java.lang.String str26 = convergenceException25.getPattern();
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException27);
        java.lang.Object[] objArray29 = costException27.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray29);
        java.lang.Object[] objArray31 = mathException30.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException30);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.MathException: " + "'", str26, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
    }

    @Test
    public void test18326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18326");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (byte) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18327");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Throwable[] throwableArray14 = costException13.getSuppressed();
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray25);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", throwableArray25 };
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", objArray30);
        mathException18.addSuppressed((java.lang.Throwable) costException31);
        java.lang.Object[] objArray33 = mathException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray45 = convergenceException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray40, (java.lang.Throwable) mathException49);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException49);
        java.lang.Throwable[] throwableArray52 = costException51.getSuppressed();
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) costException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray63);
        java.lang.Object[] objArray68 = new java.lang.Object[] { "hi!", throwableArray63 };
        org.apache.commons.math.optimization.CostException costException69 = new org.apache.commons.math.optimization.CostException("", objArray68);
        mathException56.addSuppressed((java.lang.Throwable) costException69);
        java.lang.Object[] objArray71 = mathException56.getArguments();
        org.apache.commons.math.optimization.CostException costException72 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) mathException56);
        java.lang.Object[] objArray74 = mathException56.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str78 = convergenceException77.getPattern();
        java.lang.Throwable[] throwableArray79 = convergenceException77.getSuppressed();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray74, (java.lang.Throwable) mathException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException81);
        java.lang.Object[] objArray83 = convergenceException81.getArguments();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test18328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18328");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1.0f, (double) (short) 10, (double) (-1L), 35.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { (byte) 10 };
        double[] doubleArray11 = new double[] { (byte) 10 };
        double[] doubleArray13 = new double[] { (byte) 10 };
        double[] doubleArray15 = new double[] { (byte) 10 };
        double[] doubleArray17 = new double[] { (byte) 10 };
        double[] doubleArray19 = new double[] { (byte) 10 };
        double[][] doubleArray20 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15, doubleArray17, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair21 = nelderMead4.minimize(costFunction5, (int) (byte) 100, convergenceChecker7, doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18329");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100L, (double) (byte) 10, (double) (byte) 10, (double) (-1L));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = new double[][] {};
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, doubleArray8, (int) ' ', (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test18330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18330");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100, 10.0d, (double) 0, (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = new double[][] {};
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 100, convergenceChecker7, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test18331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18331");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray22 = mathException18.getSuppressed();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test18332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18332");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str5 = convergenceException4.getPattern();
        java.lang.Throwable[] throwableArray6 = convergenceException4.getSuppressed();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", throwableArray16 };
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        java.lang.String str32 = mathException31.getPattern();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray6);
        java.lang.Throwable[] throwableArray37 = mathException36.getSuppressed();
        java.lang.Object[] objArray38 = mathException36.getArguments();
        java.lang.String str39 = mathException36.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!" + "'", str39, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18333");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray38);
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", throwableArray38 };
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray43);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException47 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray48 = notPositiveDefiniteMatrixException47.getArguments();
        java.lang.Throwable[] throwableArray49 = notPositiveDefiniteMatrixException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray43, (java.lang.Throwable) mathException53);
        java.lang.Object[] objArray55 = convergenceException54.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray27, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", objArray27);
        java.lang.String str59 = mathException58.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix" + "'", str59, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix");
    }

    @Test
    public void test18334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18334");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray18);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray51);
        java.lang.Class<?> wildcardClass53 = objArray51.getClass();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, []]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test18335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18335");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(100.0d, 100.0d, (double) 100, (double) (byte) -1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18336");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18337");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        double double11 = pointCostPair10.getCost();
        double[] doubleArray12 = pointCostPair10.getPoint();
        double[] doubleArray13 = pointCostPair10.getPoint();
        double[] doubleArray14 = pointCostPair10.getPoint();
        double double15 = pointCostPair10.getCost();
        double double16 = pointCostPair10.getCost();
        double double17 = pointCostPair10.getCost();
        double[] doubleArray18 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray18, 35.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18338");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException3);
        java.lang.Throwable[] throwableArray5 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Throwable[] throwableArray16 = costException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray22);
        java.lang.Throwable[] throwableArray27 = costException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray27);
        java.lang.Object[] objArray29 = convergenceException28.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException28);
        java.lang.Throwable[] throwableArray32 = convergenceException28.getSuppressed();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray5);
        java.lang.Throwable[] throwableArray35 = costException34.getSuppressed();
        java.lang.Object[] objArray36 = costException34.getArguments();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test18339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18339");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("hi!");
        java.lang.String str3 = mathException2.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException10);
        mathException2.addSuppressed((java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException10);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException13);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test18340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18340");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(97.0d, 0.0d, 97.0d, (double) 1L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18341");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException14);
        java.lang.String str17 = costException16.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) costException16);
        java.lang.Object[] objArray19 = costException16.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", throwableArray29 };
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException43);
        java.lang.String str45 = mathException44.getPattern();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", objArray34, (java.lang.Throwable) mathException44);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException("hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException", objArray34);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray19, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException49);
        java.lang.Throwable[] throwableArray51 = mathException49.getSuppressed();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test18342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18342");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray17, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", objArray13, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        java.lang.Object[] objArray30 = mathException28.getArguments();
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", objArray30);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray30);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: hi!", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException36);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test18343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18343");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", throwableArray22 };
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", objArray27);
        mathException15.addSuppressed((java.lang.Throwable) costException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray32 = mathException30.getSuppressed();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray32, throwable33);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException(throwable33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException(throwable33);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException36);
        java.lang.String str38 = costException37.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.optimization.CostException" + "'", str38, "org.apache.commons.math.optimization.CostException");
    }

    @Test
    public void test18344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18344");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException8);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException10);
        java.lang.Throwable[] throwableArray12 = mathException10.getSuppressed();
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Object[]) throwableArray12, throwable13);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test18345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18345");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException30);
        java.lang.Throwable[] throwableArray32 = mathException30.getSuppressed();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("Convergence failed", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray56);
        java.lang.Object[] objArray61 = new java.lang.Object[] { "hi!", throwableArray56 };
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", objArray61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray61);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException65 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray66 = notPositiveDefiniteMatrixException65.getArguments();
        java.lang.Throwable[] throwableArray67 = notPositiveDefiniteMatrixException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray70 = convergenceException69.getSuppressed();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray67, (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray61, (java.lang.Throwable) mathException71);
        java.lang.Throwable[] throwableArray73 = mathException71.getSuppressed();
        java.lang.Object[] objArray74 = mathException71.getArguments();
        java.lang.Throwable[] throwableArray75 = mathException71.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray32);
        java.lang.Throwable[] throwableArray80 = convergenceException79.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test18346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18346");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("hi!", objArray17);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: hi!", objArray17);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray43);
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", throwableArray43 };
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException49);
        java.lang.Throwable[] throwableArray51 = costException49.getSuppressed();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray17, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException55);
        java.lang.String str58 = convergenceException55.getPattern();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str58, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18347");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException16);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        java.lang.Throwable[] throwableArray19 = mathException17.getSuppressed();
        java.lang.String str20 = mathException17.getPattern();
        java.lang.Class<?> wildcardClass21 = mathException17.getClass();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ConvergenceException: hi!" + "'", str20, "org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test18348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18348");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, (double) (byte) 10, (double) 1L, (double) (short) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray10 = new double[] { (short) 0, 32.0d };
        double[] doubleArray13 = new double[] { (short) 0, 32.0d };
        double[][] doubleArray14 = new double[][] { doubleArray10, doubleArray13 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair15 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, doubleArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
    }

    @Test
    public void test18349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18349");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException3 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray4 = notPositiveDefiniteMatrixException3.getArguments();
        java.lang.String str5 = notPositiveDefiniteMatrixException3.getPattern();
        org.apache.commons.math.optimization.CostException costException6 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException3);
        java.lang.Throwable[] throwableArray7 = costException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray16);
        java.lang.Object[] objArray18 = convergenceException17.getArguments();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray22, (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", objArray18, (java.lang.Throwable) mathException31);
        java.lang.Throwable[] throwableArray34 = mathException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException38);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray41);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "not positive definite matrix" + "'", str5, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test18350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18350");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) '#');
        java.lang.Class<?> wildcardClass15 = pointCostPair14.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test18351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18351");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException3 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray4 = notPositiveDefiniteMatrixException3.getArguments();
        java.lang.String str5 = notPositiveDefiniteMatrixException3.getPattern();
        org.apache.commons.math.optimization.CostException costException6 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException3);
        mathException2.addSuppressed((java.lang.Throwable) notPositiveDefiniteMatrixException3);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) mathException2);
        java.lang.Class<?> wildcardClass10 = mathException9.getClass();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "not positive definite matrix" + "'", str5, "not positive definite matrix");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test18352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18352");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, 32.0d, 1.0d, 52.0d);
    }

    @Test
    public void test18353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18353");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 1, (double) 10L, (double) (short) 1, (double) 1.0f);
    }

    @Test
    public void test18354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18354");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 10, (double) 'a', 0.0d, (double) (-1.0f));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray13 = new double[] { (short) 10, 100L, (byte) -1, 1L, 52.0d };
        double[] doubleArray19 = new double[] { (short) 10, 100L, (byte) -1, 1L, 52.0d };
        double[] doubleArray25 = new double[] { (short) 10, 100L, (byte) -1, 1L, 52.0d };
        double[] doubleArray31 = new double[] { (short) 10, 100L, (byte) -1, 1L, 52.0d };
        double[] doubleArray37 = new double[] { (short) 10, 100L, (byte) -1, 1L, 52.0d };
        double[][] doubleArray38 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, (int) (short) 0, convergenceChecker7, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0, -1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0, -1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 100.0, -1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0, -1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0, -1.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test18355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18355");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) '4', 0.0d, (double) (short) -1, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 100L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 97.0d);
        double[] doubleArray23 = pointCostPair22.getPoint();
        double[] doubleArray28 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (short) 1);
        double[] doubleArray31 = pointCostPair30.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) 100);
        double[] doubleArray36 = pointCostPair35.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair41 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, doubleArray23, doubleArray36, (int) (byte) 10, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18356");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) 0, 0.0d, (double) 0L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, 10.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (-1));
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 10);
        double[] doubleArray32 = pointCostPair31.getPoint();
        double double33 = pointCostPair31.getCost();
        double[] doubleArray34 = pointCostPair31.getPoint();
        double[] doubleArray35 = pointCostPair31.getPoint();
        double[] doubleArray42 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 1);
        double double47 = pointCostPair46.getCost();
        double[] doubleArray48 = pointCostPair46.getPoint();
        double[] doubleArray49 = pointCostPair46.getPoint();
        double double50 = pointCostPair46.getCost();
        double[] doubleArray51 = pointCostPair46.getPoint();
        double[] doubleArray52 = pointCostPair46.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair54 = new org.apache.commons.math.optimization.PointCostPair(doubleArray52, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair57 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray35, doubleArray52, (int) '#', 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18357");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException2);
        org.apache.commons.math.optimization.CostException costException4 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException3);
    }

    @Test
    public void test18358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18358");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) '4', 32.0d, (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double double23 = pointCostPair20.getCost();
        double[] doubleArray24 = pointCostPair20.getPoint();
        double double25 = pointCostPair20.getCost();
        double double26 = pointCostPair20.getCost();
        double[] doubleArray27 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, 10.0d);
        double[] doubleArray36 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray36, 0.0d);
        double double39 = pointCostPair38.getCost();
        double[] doubleArray40 = pointCostPair38.getPoint();
        double[] doubleArray41 = pointCostPair38.getPoint();
        double[] doubleArray42 = pointCostPair38.getPoint();
        double double43 = pointCostPair38.getCost();
        double[] doubleArray44 = pointCostPair38.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray44, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray27, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18359");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) '#', (double) (short) 1, 10.0d, (double) (byte) -1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[] doubleArray17 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[] doubleArray22 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[] doubleArray27 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[] doubleArray32 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[] doubleArray37 = new double[] { 10.0f, 0L, 'a', ' ' };
        double[][] doubleArray38 = new double[][] { doubleArray12, doubleArray17, doubleArray22, doubleArray27, doubleArray32, doubleArray37 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair39 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0, 97.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test18360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18360");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        double[] doubleArray11 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray11, (double) 10L);
        double[] doubleArray14 = pointCostPair13.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double17 = pointCostPair16.getCost();
        double double18 = pointCostPair16.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test18361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18361");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("hi!", objArray16);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray45 = convergenceException44.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray45, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray45);
        java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", throwableArray45 };
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("", objArray50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException59);
        java.lang.String str61 = mathException60.getPattern();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", objArray50, (java.lang.Throwable) mathException60);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray71 = convergenceException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray66, (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!", objArray50, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.optimization.CostException costException78 = new org.apache.commons.math.optimization.CostException("", objArray50);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", objArray50);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray50);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray50);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray16, (java.lang.Throwable) mathException81);
        java.lang.Throwable throwable84 = null;
        // The following exception was thrown during execution in test generation
        try {
            convergenceException83.addSuppressed(throwable84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray71);
    }

    @Test
    public void test18362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18362");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", throwableArray22 };
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray27);
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ");
        costException31.addSuppressed((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) costException31);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray10, (java.lang.Throwable) costException31);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray10);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test18363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18363");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        java.lang.Throwable[] throwableArray11 = costException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray23 = mathException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test18364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18364");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.optimization.CostException costException44 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", throwableArray40 };
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", objArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", objArray45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray45);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray45);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray45);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("not positive definite matrix", objArray27, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException53);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, []]");
    }

    @Test
    public void test18365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18365");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, (double) (byte) 10, (double) 1L, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18366");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) 1);
        double double11 = pointCostPair10.getCost();
        double[] doubleArray12 = pointCostPair10.getPoint();
        double[] doubleArray13 = pointCostPair10.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) ' ');
        double double16 = pointCostPair15.getCost();
        double double17 = pointCostPair15.getCost();
        double[] doubleArray18 = pointCostPair15.getPoint();
        double[] doubleArray19 = pointCostPair15.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 32.0d + "'", double16 == 32.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18367");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) 100, (double) 1, (double) ' ');
    }

    @Test
    public void test18368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18368");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str3 = convergenceException2.getPattern();
        java.lang.Throwable[] throwableArray4 = convergenceException2.getSuppressed();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test18369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18369");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.optimization.CostException costException3 = new org.apache.commons.math.optimization.CostException(throwable2);
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException3);
        java.lang.Object[] objArray5 = costException3.getArguments();
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", throwable8);
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray5, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray5);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException13);
        java.lang.String str15 = convergenceException13.toString();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!" + "'", str15, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test18370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18370");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.optimization.CostException costException1 = new org.apache.commons.math.optimization.CostException(throwable0);
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        costException1.addSuppressed((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException1);
        java.lang.Object[] objArray18 = costException1.getArguments();
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException1);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) costException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        java.lang.String str22 = mathException20.getPattern();
        java.lang.Throwable[] throwableArray23 = mathException20.getSuppressed();
        java.lang.Object[] objArray24 = mathException20.getArguments();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException44);
        java.lang.Object[] objArray46 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", objArray46, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray46);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray46);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray46, (java.lang.Throwable) mathException54);
        mathException20.addSuppressed((java.lang.Throwable) mathException54);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 10]");
    }

    @Test
    public void test18371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18371");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray2 = convergenceException1.getSuppressed();
        org.apache.commons.math.optimization.CostException costException3 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException1);
        java.lang.String str4 = convergenceException1.getPattern();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException1);
        java.lang.Throwable[] throwableArray6 = convergenceException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test18372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18372");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray8, (java.lang.Throwable) mathException17);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException17);
        java.lang.Throwable[] throwableArray20 = costException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) mathException43);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException(throwable46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException52);
        java.lang.Throwable[] throwableArray54 = convergenceException52.getSuppressed();
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray54);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test18373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18373");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(97.0d, (double) (short) 0, 35.0d, (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18374");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException4);
        java.lang.Object[] objArray6 = convergenceException4.getArguments();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException4);
        java.lang.Throwable[] throwableArray8 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) mathException19);
        java.lang.Object[] objArray21 = convergenceException20.getArguments();
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test18375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18375");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', 1.0d, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[] doubleArray21 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[] doubleArray28 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[] doubleArray35 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[] doubleArray42 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[] doubleArray49 = new double[] { (short) 10, (byte) -1, 1, 32.0d, 1, (short) 0 };
        double[][] doubleArray50 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, doubleArray50, (int) ' ', (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0, 1.0, 32.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
    }

    @Test
    public void test18376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18376");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException14);
        java.lang.Throwable[] throwableArray16 = costException14.getSuppressed();
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException20);
        mathException18.addSuppressed((java.lang.Throwable) convergenceException20);
        java.lang.String str23 = mathException18.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: " + "'", str23, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18377");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", throwableArray20 };
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", objArray25);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException27);
        convergenceException11.addSuppressed((java.lang.Throwable) convergenceException27);
        java.lang.Object[] objArray30 = convergenceException27.getArguments();
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray30);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException48);
        java.lang.Object[] objArray50 = convergenceException48.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray30, (java.lang.Throwable) convergenceException51);
        java.lang.Throwable[] throwableArray53 = convergenceException51.getSuppressed();
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) costException54);
        java.lang.Throwable[] throwableArray56 = costException54.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray56);
        java.lang.Throwable[] throwableArray58 = mathException57.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test18378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18378");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) costException24);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray31 = convergenceException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException35);
        costException24.addSuppressed((java.lang.Throwable) convergenceException36);
        java.lang.Object[] objArray38 = convergenceException36.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray38);
        java.lang.String str41 = mathException40.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException40);
        java.lang.Object[] objArray43 = mathException40.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray56);
        java.lang.Object[] objArray61 = new java.lang.Object[] { "hi!", throwableArray56 };
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", objArray61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("not positive definite matrix", objArray61);
        java.lang.Throwable[] throwableArray65 = mathException64.getSuppressed();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray65);
        java.lang.Object[] objArray73 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray78 = convergenceException77.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray78, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray73, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException83);
        java.lang.Object[] objArray85 = convergenceException83.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray89 = convergenceException88.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray85, (java.lang.Throwable) convergenceException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) convergenceException90);
        convergenceException44.addSuppressed((java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str41, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test18379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18379");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException5);
        java.lang.Object[] objArray7 = convergenceException5.getArguments();
        java.lang.String str8 = convergenceException5.getPattern();
        java.lang.Object[] objArray9 = convergenceException5.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray16);
        convergenceException5.addSuppressed((java.lang.Throwable) costException22);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.commons.math.ConvergenceException: hi!" + "'", str8, "org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test18380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18380");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double[] doubleArray9 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair11 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, 0.0d);
        double[] doubleArray14 = pointCostPair13.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 100.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        double[] doubleArray18 = pointCostPair16.getPoint();
        double double19 = pointCostPair16.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
    }

    @Test
    public void test18381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18381");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", throwableArray17 };
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", objArray22);
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException24);
        convergenceException8.addSuppressed((java.lang.Throwable) convergenceException24);
        java.lang.Object[] objArray27 = convergenceException24.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray46 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray46);
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", throwableArray46 };
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException("", objArray51);
        mathException39.addSuppressed((java.lang.Throwable) costException52);
        java.lang.String str54 = costException52.getPattern();
        mathException30.addSuppressed((java.lang.Throwable) costException52);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test18382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18382");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', (double) (short) 1, 52.0d, 97.0d);
        java.lang.Class<?> wildcardClass5 = nelderMead4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test18383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18383");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 0, (double) (short) -1, (double) (byte) 10, (-1.0d));
    }

    @Test
    public void test18384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18384");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.optimization.CostException costException2 = new org.apache.commons.math.optimization.CostException(throwable1);
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException2);
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException3);
        java.lang.Object[] objArray5 = mathException4.getArguments();
        java.lang.Object[] objArray6 = mathException4.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test18385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18385");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        java.lang.Object[] objArray19 = new java.lang.Object[] { "hi!", throwableArray14 };
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray19);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException23 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray24 = notPositiveDefiniteMatrixException23.getArguments();
        java.lang.Throwable[] throwableArray25 = notPositiveDefiniteMatrixException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) mathException29);
        java.lang.Throwable[] throwableArray31 = mathException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        java.lang.Throwable[] throwableArray42 = convergenceException40.getSuppressed();
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException48);
        java.lang.String str50 = convergenceException49.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray31);
        java.lang.Throwable[] throwableArray58 = mathException57.getSuppressed();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException", (java.lang.Throwable) mathException57);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str50, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test18386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18386");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) (-1L), (double) (byte) -1, (double) 100L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, randomVectorGenerator8, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18387");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 100, (double) 10L, (double) '4', (double) (-1.0f));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0);
        double[] doubleArray24 = pointCostPair23.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair26 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 'a');
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, (double) 10.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray24, 97.0d);
        double[] doubleArray39 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray39, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray39, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair45 = new org.apache.commons.math.optimization.PointCostPair(doubleArray39, (double) (short) 1);
        double double46 = pointCostPair45.getCost();
        double[] doubleArray47 = pointCostPair45.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair49 = new org.apache.commons.math.optimization.PointCostPair(doubleArray47, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair51 = new org.apache.commons.math.optimization.PointCostPair(doubleArray47, (double) (short) -1);
        double double52 = pointCostPair51.getCost();
        double double53 = pointCostPair51.getCost();
        double[] doubleArray54 = pointCostPair51.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair57 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray24, doubleArray54, (int) (byte) -1, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1.0d) + "'", double52 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18388");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 100, 0.0d, (double) '4', 32.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, randomVectorGenerator8, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18389");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) 0, 10.0d, (double) (-1L));
    }

    @Test
    public void test18390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18390");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray17, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException47);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray58, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray58);
        java.lang.Object[] objArray63 = new java.lang.Object[] { "hi!", throwableArray58 };
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException64);
        java.lang.Throwable[] throwableArray66 = costException64.getSuppressed();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Object[]) throwableArray66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray49, (java.lang.Throwable) mathException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException68);
        java.lang.String str71 = convergenceException70.getPattern();
        java.lang.String str72 = convergenceException70.getPattern();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException" + "'", str71, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException" + "'", str72, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18391");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, (double) (byte) 1, (double) (byte) 1, (double) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray10 = new double[] { 35.0d, 52.0d };
        double[] doubleArray13 = new double[] { 35.0d, 52.0d };
        double[] doubleArray16 = new double[] { 35.0d, 52.0d };
        double[][] doubleArray17 = new double[][] { doubleArray10, doubleArray13, doubleArray16 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair20 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, doubleArray17, 100, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[35.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[35.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[35.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test18392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18392");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(52.0d, 0.0d, 0.0d, 35.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (-1), 'a', (byte) 0, 32.0d };
        double[] doubleArray17 = new double[] { (-1), 'a', (byte) 0, 32.0d };
        double[] doubleArray22 = new double[] { (-1), 'a', (byte) 0, 32.0d };
        double[] doubleArray27 = new double[] { (-1), 'a', (byte) 0, 32.0d };
        double[] doubleArray32 = new double[] { (-1), 'a', (byte) 0, 32.0d };
        double[][] doubleArray33 = new double[][] { doubleArray12, doubleArray17, doubleArray22, doubleArray27, doubleArray32 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair36 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray33, 0, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 97.0, 0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 97.0, 0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 97.0, 0.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test18393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18393");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray26 = convergenceException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray26);
        java.lang.Object[] objArray28 = convergenceException27.getArguments();
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", objArray49, (java.lang.Throwable) mathException58);
        costException45.addSuppressed((java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException45);
        java.lang.Throwable[] throwableArray62 = convergenceException61.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray28, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray28);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray14, (java.lang.Throwable) mathException64);
        java.lang.String str66 = mathException65.getPattern();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: " + "'", str66, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18394");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 100, (double) (byte) -1, (double) 100L, (-1.0d));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray11 = new double[] { 100.0d, (-1.0f), 1.0f };
        double[] doubleArray15 = new double[] { 100.0d, (-1.0f), 1.0f };
        double[] doubleArray19 = new double[] { 100.0d, (-1.0f), 1.0f };
        double[][] doubleArray20 = new double[][] { doubleArray11, doubleArray15, doubleArray19 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair23 = nelderMead4.minimize(costFunction5, (int) (byte) 0, convergenceChecker7, doubleArray20, (int) '4', (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test18395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18395");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray7, (java.lang.Throwable) mathException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException16);
        java.lang.Object[] objArray19 = mathException16.getArguments();
        java.lang.Object[] objArray20 = mathException16.getArguments();
        org.apache.commons.math.optimization.CostException costException21 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray20);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException23 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray24 = notPositiveDefiniteMatrixException23.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notPositiveDefiniteMatrixException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException25);
        java.lang.String str27 = convergenceException26.getPattern();
        java.lang.Throwable[] throwableArray28 = convergenceException26.getSuppressed();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray20, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException26);
        java.lang.Object[] objArray31 = costException30.getArguments();
        java.lang.Object[] objArray32 = costException30.getArguments();
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: not positive definite matrix", objArray32);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test18396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18396");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException5);
        java.lang.Throwable[] throwableArray7 = convergenceException5.getSuppressed();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.optimization.CostException costException9 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException(throwable11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException12);
        java.lang.Object[] objArray14 = costException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", throwableArray29 };
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException35);
        mathException21.addSuppressed((java.lang.Throwable) convergenceException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException36);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, []]");
    }

    @Test
    public void test18397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18397");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(0.0d, (double) (short) 100, (double) 'a', (double) 0);
    }

    @Test
    public void test18398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18398");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(35.0d, (double) (-1L), (double) (byte) 10, (double) (byte) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        double double19 = pointCostPair18.getCost();
        double double20 = pointCostPair18.getCost();
        double[] doubleArray21 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) ' ');
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (short) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) 0L);
        double[] doubleArray34 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, 0.0d);
        double[] doubleArray37 = pointCostPair36.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair38 = nelderMead4.minimize(costFunction5, 10, convergenceChecker7, doubleArray21, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18399");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        mathException17.addSuppressed((java.lang.Throwable) costException30);
        java.lang.Object[] objArray32 = mathException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException34);
        java.lang.Object[] objArray36 = convergenceException35.getArguments();
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray36);
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException38);
        java.lang.Throwable throwable40 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathException38.addSuppressed(throwable40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test18400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18400");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        java.lang.String str26 = mathException25.getPattern();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException25);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray29 = mathException27.getSuppressed();
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray29);
        java.lang.Throwable[] throwableArray31 = costException30.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray31);
        java.lang.Object[] objArray33 = convergenceException32.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.optimization.CostException costException47 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray43);
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", throwableArray43 };
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException50);
        java.lang.Throwable[] throwableArray52 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray33, (java.lang.Throwable) mathException59);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test18401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18401");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray27);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) costException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException32);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test18402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18402");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        java.lang.Object[] objArray46 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray46);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray46);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException50);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 10]");
    }

    @Test
    public void test18403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18403");
        java.lang.Object[] objArray12 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray12, (java.lang.Throwable) mathException21);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", throwableArray29 };
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException35);
        java.lang.Throwable[] throwableArray37 = costException35.getSuppressed();
        convergenceException22.addSuppressed((java.lang.Throwable) costException35);
        java.lang.String str39 = convergenceException22.getPattern();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException42);
        java.lang.Object[] objArray44 = mathException43.getArguments();
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray51 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.optimization.CostException costException65 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray61);
        java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", throwableArray61 };
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException("", objArray66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) costException67);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray51);
        java.lang.String str71 = mathException70.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray44, (java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray44);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException74 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray75 = notPositiveDefiniteMatrixException74.getArguments();
        java.lang.String str76 = notPositiveDefiniteMatrixException74.getPattern();
        java.lang.Object[] objArray77 = notPositiveDefiniteMatrixException74.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray44, (java.lang.Throwable) notPositiveDefiniteMatrixException74);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray44);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", objArray44);
        java.lang.Throwable[] throwableArray81 = mathException80.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException82);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.commons.math.MathException: " + "'", str71, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "not positive definite matrix" + "'", str76, "not positive definite matrix");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test18404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18404");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException1 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray2 = notPositiveDefiniteMatrixException1.getArguments();
        java.lang.String str3 = notPositiveDefiniteMatrixException1.getPattern();
        org.apache.commons.math.optimization.CostException costException4 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) notPositiveDefiniteMatrixException1);
        java.lang.Throwable[] throwableArray5 = costException4.getSuppressed();
        java.lang.Object[] objArray6 = costException4.getArguments();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) costException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException8);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "not positive definite matrix" + "'", str3, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test18405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18405");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException16);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException19);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test18406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18406");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray14, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", objArray10, (java.lang.Throwable) mathException23);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Object[] objArray27 = mathException25.getArguments();
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("not positive definite matrix", (java.lang.Throwable) costException29);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException29);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) costException29);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test18407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18407");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", throwableArray10 };
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException19 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray20 = notPositiveDefiniteMatrixException19.getArguments();
        java.lang.Throwable[] throwableArray21 = notPositiveDefiniteMatrixException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray15);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", objArray15);
        java.lang.Class<?> wildcardClass29 = mathException28.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test18408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18408");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(32.0d, (double) '#', (double) (byte) 1, (double) 1.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (-1), 100L, (-1.0d), '#' };
        double[][] doubleArray13 = new double[][] { doubleArray12 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair16 = nelderMead4.minimize(costFunction5, 10, convergenceChecker7, doubleArray13, (int) (byte) -1, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, -1.0, 35.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test18409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18409");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (short) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18410");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray5, (java.lang.Throwable) mathException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException14);
        java.lang.Object[] objArray17 = mathException14.getArguments();
        java.lang.Object[] objArray18 = mathException14.getArguments();
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException20 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray21 = notPositiveDefiniteMatrixException20.getArguments();
        java.lang.Throwable[] throwableArray22 = notPositiveDefiniteMatrixException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException23);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test18411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18411");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 100, (double) (byte) -1, (double) 100L, (-1.0d));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18412");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException2 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray3 = notPositiveDefiniteMatrixException2.getArguments();
        java.lang.Throwable[] throwableArray4 = notPositiveDefiniteMatrixException2.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException8);
        java.lang.Object[] objArray16 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray16, (java.lang.Throwable) mathException25);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", throwableArray33 };
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException39);
        java.lang.Throwable[] throwableArray41 = costException39.getSuppressed();
        convergenceException26.addSuppressed((java.lang.Throwable) costException39);
        java.lang.String str43 = convergenceException26.getPattern();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException44);
        mathException8.addSuppressed((java.lang.Throwable) mathException46);
        java.lang.Throwable[] throwableArray48 = mathException8.getSuppressed();
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray48);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test18413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18413");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable[] throwableArray12 = costException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray23 = mathException22.getSuppressed();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray25);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test18414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18414");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(97.0d, (double) (-1), (double) (-1.0f), (double) (-1));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[][] doubleArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, doubleArray8, (int) (short) -1, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18415");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        double[] doubleArray9 = pointCostPair8.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair11 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, (double) (-1L));
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray9, (double) 100);
        double[] doubleArray16 = pointCostPair15.getPoint();
        double[] doubleArray17 = pointCostPair15.getPoint();
        double[] doubleArray18 = pointCostPair15.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18416");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", throwableArray11 };
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        java.lang.String str27 = mathException26.getPattern();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray37 = convergenceException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray32, (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray16, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray51 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray51);
        java.lang.Throwable[] throwableArray56 = costException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) mathException65);
        java.lang.Throwable[] throwableArray67 = mathException66.getSuppressed();
        convergenceException45.addSuppressed((java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException66);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException66);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException78);
        java.lang.Object[] objArray80 = convergenceException78.getArguments();
        org.apache.commons.math.optimization.CostException costException81 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException78);
        java.lang.Throwable[] throwableArray82 = costException81.getSuppressed();
        org.apache.commons.math.optimization.CostException costException83 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray82);
        org.apache.commons.math.optimization.CostException costException85 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray82);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray82);
        convergenceException71.addSuppressed((java.lang.Throwable) convergenceException86);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test18417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18417");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, 32.0d, (double) (-1.0f), (double) 'a');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { 52.0d, 100.0d, (-1.0d), 100L, (short) 0, 97.0d };
        double[] doubleArray21 = new double[] { 52.0d, 100.0d, (-1.0d), 100L, (short) 0, 97.0d };
        double[] doubleArray28 = new double[] { 52.0d, 100.0d, (-1.0d), 100L, (short) 0, 97.0d };
        double[] doubleArray35 = new double[] { 52.0d, 100.0d, (-1.0d), 100L, (short) 0, 97.0d };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair37 = nelderMead4.minimize(costFunction5, (-1), convergenceChecker7, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 100.0, -1.0, 100.0, 0.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 100.0, -1.0, 100.0, 0.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[52.0, 100.0, -1.0, 100.0, 0.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0, 100.0, -1.0, 100.0, 0.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test18418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18418");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) 10, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18419");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        java.lang.Object[] objArray46 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray46);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray46);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 10]");
    }

    @Test
    public void test18420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18420");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException7);
        java.lang.Object[] objArray9 = convergenceException7.getArguments();
        java.lang.Object[] objArray10 = convergenceException7.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException18);
        java.lang.String str20 = convergenceException19.getPattern();
        java.lang.Throwable[] throwableArray21 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: hi!", objArray10, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException22);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test18421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18421");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("hi!", objArray18);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray47 = convergenceException46.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.optimization.CostException costException51 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray47);
        java.lang.Object[] objArray52 = new java.lang.Object[] { "hi!", throwableArray47 };
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray52);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray52);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray63);
        java.lang.Object[] objArray65 = convergenceException64.getArguments();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray65);
        mathException57.addSuppressed((java.lang.Throwable) convergenceException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        java.lang.Throwable[] throwableArray70 = mathException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray34, (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray34);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test18422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18422");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        java.lang.Throwable[] throwableArray11 = convergenceException9.getSuppressed();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", throwableArray20 };
        org.apache.commons.math.optimization.CostException costException26 = new org.apache.commons.math.optimization.CostException("", objArray25);
        mathException13.addSuppressed((java.lang.Throwable) costException26);
        java.lang.Object[] objArray28 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException13);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException32);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
    }

    @Test
    public void test18423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18423");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException18 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        java.lang.Object[] objArray19 = notPositiveDefiniteMatrixException18.getArguments();
        java.lang.Throwable[] throwableArray20 = notPositiveDefiniteMatrixException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) mathException24);
        java.lang.Throwable[] throwableArray26 = mathException24.getSuppressed();
        java.lang.Object[] objArray27 = mathException24.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray36);
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", throwableArray36 };
        org.apache.commons.math.optimization.CostException costException42 = new org.apache.commons.math.optimization.CostException("", objArray41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", objArray41);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray52 = convergenceException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray47, (java.lang.Throwable) mathException56);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray64 = convergenceException63.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray64, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.optimization.CostException costException68 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray64);
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", throwableArray64 };
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", objArray69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException70);
        java.lang.Throwable[] throwableArray72 = costException70.getSuppressed();
        convergenceException57.addSuppressed((java.lang.Throwable) costException70);
        java.lang.Throwable[] throwableArray74 = costException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray41, (java.lang.Throwable) costException70);
        java.lang.Object[] objArray76 = costException70.getArguments();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) costException70);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, []]");
    }

    @Test
    public void test18424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18424");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray18);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray18);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", throwableArray33 };
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", objArray38);
        mathException26.addSuppressed((java.lang.Throwable) costException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException26);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray18, (java.lang.Throwable) mathException26);
        java.lang.Throwable[] throwableArray43 = mathException26.getSuppressed();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray54 = convergenceException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", objArray49, (java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.optimization.CostException costException70 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray66);
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", throwableArray66 };
        org.apache.commons.math.optimization.CostException costException72 = new org.apache.commons.math.optimization.CostException("", objArray71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException72);
        java.lang.Throwable[] throwableArray74 = costException72.getSuppressed();
        convergenceException59.addSuppressed((java.lang.Throwable) costException72);
        java.lang.String str76 = convergenceException59.getPattern();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.optimization.CostException costException83 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException82);
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException83);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException83);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test18425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18425");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10, (-1.0d), 1.0d, 0.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, randomVectorGenerator8, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18426");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str4 = convergenceException3.getPattern();
        java.lang.Throwable[] throwableArray5 = convergenceException3.getSuppressed();
        org.apache.commons.math.optimization.CostException costException6 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        java.lang.Throwable[] throwableArray16 = convergenceException14.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray25);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", throwableArray25 };
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", objArray30);
        mathException18.addSuppressed((java.lang.Throwable) costException31);
        java.lang.Object[] objArray33 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray40);
        java.lang.Object[] objArray42 = convergenceException41.getArguments();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray51 = convergenceException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray46, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", objArray42, (java.lang.Throwable) mathException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        java.lang.Object[] objArray59 = mathException57.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException57);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray71 = convergenceException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray71, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray71);
        java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", throwableArray71 };
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", objArray76);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray82 = convergenceException81.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray82, (java.lang.Throwable) convergenceException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException85);
        java.lang.String str87 = mathException86.getPattern();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("", objArray76, (java.lang.Throwable) mathException86);
        org.apache.commons.math.optimization.CostException costException89 = new org.apache.commons.math.optimization.CostException("hi!", objArray76);
        java.lang.Object[] objArray90 = costException89.getArguments();
        org.apache.commons.math.optimization.CostException costException91 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException89);
        java.lang.Throwable[] throwableArray92 = costException89.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) costException89);
        convergenceException61.addSuppressed((java.lang.Throwable) convergenceException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException93);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test18427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18427");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", throwableArray7 };
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", objArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException13);
        java.lang.Throwable[] throwableArray15 = costException13.getSuppressed();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        java.lang.Class<?> wildcardClass22 = convergenceException21.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test18428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18428");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, (double) 100.0f, (double) 0, (double) (-1.0f));
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        double[] doubleArray15 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, 1.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) 10L);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair28 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray26, (double) (byte) -1);
        double[] doubleArray33 = pointCostPair32.getPoint();
        double[] doubleArray34 = pointCostPair32.getPoint();
        double double35 = pointCostPair32.getCost();
        double[] doubleArray36 = pointCostPair32.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair37 = nelderMead4.minimize(costFunction5, (int) (short) 10, convergenceChecker7, doubleArray15, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18429");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(1.0d, (double) (byte) -1, (-1.0d), (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18430");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((-1.0d), (double) (byte) 10, (double) (short) 10, (double) '4');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, randomVectorGenerator8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18431");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: not positive definite matrix", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.optimization.CostException costException37 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray33);
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", throwableArray33 };
        org.apache.commons.math.optimization.CostException costException39 = new org.apache.commons.math.optimization.CostException("", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        java.lang.String str49 = mathException48.getPattern();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", objArray38, (java.lang.Throwable) mathException48);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray56, (java.lang.Throwable) mathException65);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray73 = convergenceException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { "hi!", throwableArray73 };
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", objArray78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException79);
        java.lang.Throwable[] throwableArray81 = costException79.getSuppressed();
        convergenceException66.addSuppressed((java.lang.Throwable) costException79);
        java.lang.String str83 = convergenceException66.getPattern();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException84);
        org.apache.commons.math.optimization.CostException costException87 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException86);
        java.lang.Object[] objArray88 = costException87.getArguments();
        java.lang.Object[] objArray89 = costException87.getArguments();
        org.apache.commons.math.optimization.CostException costException90 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix", objArray11, (java.lang.Throwable) costException90);
        org.apache.commons.math.optimization.CostException costException92 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray11);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
    }

    @Test
    public void test18432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18432");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray6, (java.lang.Throwable) mathException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException15);
        java.lang.Throwable[] throwableArray18 = costException17.getSuppressed();
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray28);
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", throwableArray28 };
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException("", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.optimization.CostException costException36 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray33);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) costException36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException37);
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException38);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test18433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18433");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = new java.lang.Object[] { 0L, "", '#', mathException15 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException19);
        java.lang.Throwable[] throwableArray23 = convergenceException19.getSuppressed();
        java.lang.String str24 = convergenceException19.getPattern();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) convergenceException19);
        java.lang.Throwable[] throwableArray26 = convergenceException19.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test18434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18434");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", throwable1);
        java.lang.Class<?> wildcardClass3 = mathException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test18435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18435");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(52.0d, (double) 10, (double) '#', (double) (byte) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (-1L), (-1L), (-1), 100L, ' ', (short) -1 };
        double[] doubleArray21 = new double[] { (-1L), (-1L), (-1), 100L, ' ', (short) -1 };
        double[] doubleArray28 = new double[] { (-1L), (-1L), (-1), 100L, ' ', (short) -1 };
        double[] doubleArray35 = new double[] { (-1L), (-1L), (-1), 100L, ' ', (short) -1 };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair37 = nelderMead4.minimize(costFunction5, (int) (short) -1, convergenceChecker7, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 100.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 100.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 100.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 100.0, 32.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test18436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18436");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray25 = convergenceException24.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray25);
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", throwableArray25 };
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) costException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) mathException33);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException48);
        convergenceException34.addSuppressed((java.lang.Throwable) mathException48);
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException34);
        java.lang.Throwable[] throwableArray53 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray53);
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray61 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray61, (java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException72);
        org.apache.commons.math.optimization.CostException costException74 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException73);
        convergenceException54.addSuppressed((java.lang.Throwable) mathException73);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test18437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18437");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray22 = convergenceException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray17, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", objArray13, (java.lang.Throwable) mathException26);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        java.lang.Object[] objArray30 = mathException28.getArguments();
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", objArray30);
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", objArray30);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException", objArray30);
        java.lang.Object[] objArray36 = costException35.getArguments();
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException37 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException37);
        java.lang.String str39 = convergenceException38.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray46 = convergenceException45.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException49);
        java.lang.String str51 = mathException50.getPattern();
        java.lang.Throwable[] throwableArray52 = mathException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray52);
        convergenceException38.addSuppressed((java.lang.Throwable) costException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray36, (java.lang.Throwable) convergenceException38);
        java.lang.Throwable[] throwableArray57 = convergenceException56.getSuppressed();
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "not positive definite matrix" + "'", str39, "not positive definite matrix");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test18438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18438");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray14);
        java.lang.String str17 = mathException16.getPattern();
        java.lang.Object[] objArray18 = mathException16.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        java.lang.Object[] objArray22 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException23);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str17, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, []]");
    }

    @Test
    public void test18439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18439");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1.0f, (double) (-1.0f), 0.0d, (double) ' ');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (byte) -1);
        double[] doubleArray26 = pointCostPair25.getPoint();
        double[] doubleArray27 = pointCostPair25.getPoint();
        double double28 = pointCostPair25.getCost();
        double[] doubleArray29 = pointCostPair25.getPoint();
        double[] doubleArray30 = pointCostPair25.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (-1L));
        double[] doubleArray37 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) (short) 1);
        double[] doubleArray40 = pointCostPair39.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray30, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18440");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException2);
        org.apache.commons.math.optimization.CostException costException4 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException2);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray13);
        convergenceException2.addSuppressed((java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException16);
        java.lang.String str19 = mathException16.getPattern();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: " + "'", str19, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test18441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18441");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100.0f, 32.0d, 10.0d, (double) (short) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) '#');
        double[] doubleArray23 = pointCostPair22.getPoint();
        double double24 = pointCostPair22.getCost();
        double[] doubleArray25 = pointCostPair22.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray25, (double) 1);
        double[] doubleArray28 = pointCostPair27.getPoint();
        double[] doubleArray29 = pointCostPair27.getPoint();
        double[] doubleArray30 = pointCostPair27.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) 10L);
        double[] doubleArray37 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) (short) 1);
        double[] doubleArray40 = pointCostPair39.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, 0, convergenceChecker7, doubleArray30, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 35.0d + "'", double24 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18442");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (short) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 10.0f);
        double[] doubleArray16 = pointCostPair15.getPoint();
        double double17 = pointCostPair15.getCost();
        double[] doubleArray18 = pointCostPair15.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18443");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) (short) 1, (double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { '4' };
        double[] doubleArray11 = new double[] { '4' };
        double[][] doubleArray12 = new double[][] { doubleArray9, doubleArray11 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair15 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray12, (int) (short) 100, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test18444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18444");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException16);
        java.lang.Throwable[] throwableArray18 = costException17.getSuppressed();
        java.lang.Object[] objArray19 = costException17.getArguments();
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", objArray19);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException21);
        java.lang.String str23 = mathException21.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str23, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18445");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException20);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException(throwable23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException30);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException30);
        java.lang.String str33 = costException32.getPattern();
        java.lang.String str34 = costException32.getPattern();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test18446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18446");
        double[] doubleArray4 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair6 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (double) (short) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, 0.0d);
        double double9 = pointCostPair8.getCost();
        double[] doubleArray10 = pointCostPair8.getPoint();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18447");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100, (double) 0.0f, (double) (-1), 10.0d);
    }

    @Test
    public void test18448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18448");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str6 = convergenceException5.getPattern();
        java.lang.Throwable[] throwableArray7 = convergenceException5.getSuppressed();
        org.apache.commons.math.optimization.CostException costException8 = new org.apache.commons.math.optimization.CostException("hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException32);
        java.lang.String str34 = mathException33.getPattern();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("", objArray23, (java.lang.Throwable) mathException33);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) mathException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", objArray23, (java.lang.Throwable) convergenceException49);
        java.lang.Object[] objArray51 = convergenceException49.getArguments();
        org.apache.commons.math.optimization.CostException costException52 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) costException52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) costException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException56);
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) costException58);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[10, 10]");
    }

    @Test
    public void test18449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18449");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ");
        java.lang.String str4 = convergenceException3.getPattern();
        java.lang.Throwable[] throwableArray5 = convergenceException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = convergenceException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.optimization.CostException costException8 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray6);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: " + "'", str4, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test18450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18450");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, 1.0d, (double) 10, (double) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (short) 0);
        double[] doubleArray31 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (byte) 1);
        double[] doubleArray38 = pointCostPair37.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair43 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, doubleArray14, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18451");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray34, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray18, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray49 = convergenceException48.getArguments();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: ", objArray49);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray58, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.optimization.CostException costException62 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray58);
        java.lang.Object[] objArray63 = new java.lang.Object[] { "hi!", throwableArray58 };
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!", objArray63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        mathException50.addSuppressed((java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: not positive definite matrix", (java.lang.Throwable) mathException50);
        java.lang.String str70 = mathException50.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.optimization.CostException: " + "'", str70, "org.apache.commons.math.optimization.CostException: ");
    }

    @Test
    public void test18452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18452");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(1.0d, (double) 0.0f, (double) (-1.0f), (double) 100);
    }

    @Test
    public void test18453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18453");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, (double) (short) -1, 52.0d, (double) 1);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { 97.0d };
        double[] doubleArray11 = new double[] { 97.0d };
        double[] doubleArray13 = new double[] { 97.0d };
        double[] doubleArray15 = new double[] { 97.0d };
        double[][] doubleArray16 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair17 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, doubleArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test18454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18454");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) -1, 0.0d, (double) 1.0f, (double) (-1));
    }

    @Test
    public void test18455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18455");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException22);
        java.lang.Class<?> wildcardClass24 = mathException23.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test18456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18456");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("not positive definite matrix", objArray18);
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.optimization.CostException costException38 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray34);
        java.lang.Object[] objArray39 = new java.lang.Object[] { "hi!", throwableArray34 };
        org.apache.commons.math.optimization.CostException costException40 = new org.apache.commons.math.optimization.CostException("", objArray39);
        mathException27.addSuppressed((java.lang.Throwable) costException40);
        java.lang.String str42 = mathException27.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException27);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray49);
        org.apache.commons.math.optimization.CostException costException54 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray49);
        mathException27.addSuppressed((java.lang.Throwable) costException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) costException54);
        java.lang.Throwable[] throwableArray57 = costException54.getSuppressed();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) costException54);
        java.lang.Throwable[] throwableArray59 = costException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray72 = convergenceException71.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray72, (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.optimization.CostException costException76 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray72);
        java.lang.Object[] objArray77 = new java.lang.Object[] { "hi!", throwableArray72 };
        org.apache.commons.math.optimization.CostException costException78 = new org.apache.commons.math.optimization.CostException("", objArray77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("", objArray77);
        org.apache.commons.math.optimization.CostException costException80 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray77);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException83);
        java.lang.Object[] objArray85 = convergenceException83.getArguments();
        org.apache.commons.math.optimization.CostException costException86 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException83);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray77, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("", objArray77);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("", objArray77);
        org.apache.commons.math.optimization.CostException costException90 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray77);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) costException90);
        java.lang.Class<?> wildcardClass92 = convergenceException91.getClass();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test18457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18457");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        java.lang.Throwable[] throwableArray9 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException11);
        java.lang.Throwable[] throwableArray13 = mathException11.getSuppressed();
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException11);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray22, (java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException45);
        java.lang.Throwable[] throwableArray47 = costException45.getSuppressed();
        convergenceException32.addSuppressed((java.lang.Throwable) costException45);
        java.lang.String str49 = convergenceException32.getPattern();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException52);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray54);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: not positive definite matrix", objArray54);
        mathException11.addSuppressed((java.lang.Throwable) costException56);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
    }

    @Test
    public void test18458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18458");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(52.0d, 35.0d, (double) 10, 52.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray12 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray12, (double) (short) 1);
        double[] doubleArray15 = pointCostPair14.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (double) '4');
        double[] doubleArray22 = pointCostPair21.getPoint();
        double[] doubleArray29 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray29, 0.0d);
        double double32 = pointCostPair31.getCost();
        double[] doubleArray33 = pointCostPair31.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) 10L);
        double double36 = pointCostPair35.getCost();
        double[] doubleArray37 = pointCostPair35.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray37, (double) (short) -1);
        double[] doubleArray42 = pointCostPair41.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 0L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray42, (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair49 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, doubleArray22, doubleArray42, (int) (short) 10, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18459");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException8);
        org.apache.commons.math.optimization.CostException costException10 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException37);
        java.lang.String str39 = mathException38.getPattern();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", objArray28, (java.lang.Throwable) mathException38);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray44, (java.lang.Throwable) mathException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", objArray28, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray28);
        java.lang.Throwable[] throwableArray57 = mathException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray65);
        java.lang.Object[] objArray67 = convergenceException66.getArguments();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray76 = convergenceException75.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray76, (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("", objArray71, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", objArray67, (java.lang.Throwable) mathException80);
        java.lang.Throwable[] throwableArray83 = mathException80.getSuppressed();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray83, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray83);
        java.lang.String str88 = mathException87.getPattern();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException87);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException87);
        java.lang.Object[] objArray91 = convergenceException90.getArguments();
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray57, (java.lang.Throwable) convergenceException90);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray57);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) mathException93);
        java.lang.Class<?> wildcardClass95 = mathException93.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!" + "'", str88, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test18460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18460");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18461");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", objArray11, (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        java.lang.Object[] objArray28 = mathException26.getArguments();
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", objArray28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray28);
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException", objArray28);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Throwable) costException32);
        java.lang.Throwable[] throwableArray34 = mathException33.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18462");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (-1L), 35.0d, (double) (byte) -1, 97.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 10, convergenceChecker7, randomVectorGenerator8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18463");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray11, (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray7, (java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray23 = mathException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray28 = convergenceException27.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) mathException32);
        java.lang.Throwable[] throwableArray34 = mathException32.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test18464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18464");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10L, 52.0d, (double) (short) -1, (double) 1L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) ' ');
        double[] doubleArray31 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray31, (double) (byte) -1);
        double[] doubleArray38 = pointCostPair37.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, 10.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) (-1));
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 0);
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 0.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair48 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 10);
        org.apache.commons.math.optimization.PointCostPair pointCostPair50 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair53 = nelderMead4.minimize(costFunction5, (int) 'a', convergenceChecker7, doubleArray14, doubleArray38, 0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18465");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1, (double) (short) 100, 0.0d, 100.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, 10, convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18466");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10.0f, (double) (-1), (double) (byte) 100, (double) 10L);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray9 = new double[] { 100.0d };
        double[][] doubleArray10 = new double[][] { doubleArray9 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair11 = nelderMead4.minimize(costFunction5, (int) (byte) -1, convergenceChecker7, doubleArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
    }

    @Test
    public void test18467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18467");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray19);
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", throwableArray19 };
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) costException25);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray9);
        java.lang.String str30 = convergenceException29.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException32);
        java.lang.String str34 = mathException32.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str30, "org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix" + "'", str34, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: not positive definite matrix");
    }

    @Test
    public void test18468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18468");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(32.0d, (double) 1, 0.0d, (double) 'a');
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 1);
        double[] doubleArray21 = pointCostPair20.getPoint();
        double double22 = pointCostPair20.getCost();
        double[] doubleArray23 = pointCostPair20.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) 100.0f);
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, 100.0d);
        double[] doubleArray28 = pointCostPair27.getPoint();
        double[] doubleArray29 = pointCostPair27.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray29, (double) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray29, (double) 1L);
        double[] doubleArray40 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair44 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray40, (double) (byte) 1);
        double[] doubleArray47 = pointCostPair46.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair49 = new org.apache.commons.math.optimization.PointCostPair(doubleArray47, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair51 = new org.apache.commons.math.optimization.PointCostPair(doubleArray47, (double) (short) -1);
        double double52 = pointCostPair51.getCost();
        double[] doubleArray53 = pointCostPair51.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair56 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray29, doubleArray53, (int) '#', (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1.0d) + "'", double52 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18469");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18470");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException26);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test18471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18471");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, (double) 0L, (double) 10.0f, (double) 1.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double17 = pointCostPair16.getCost();
        double[] doubleArray18 = pointCostPair16.getPoint();
        double[] doubleArray19 = pointCostPair16.getPoint();
        double[] doubleArray20 = pointCostPair16.getPoint();
        double double21 = pointCostPair16.getCost();
        double double22 = pointCostPair16.getCost();
        double[] doubleArray23 = pointCostPair16.getPoint();
        double[] doubleArray30 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (-1.0d));
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair43 = nelderMead4.minimize(costFunction5, 1, convergenceChecker7, doubleArray23, doubleArray30, 1, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18472");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) -1, 32.0d, (double) (byte) 100, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (-1.0f));
        double double19 = pointCostPair18.getCost();
        double[] doubleArray20 = pointCostPair18.getPoint();
        double[] doubleArray21 = pointCostPair18.getPoint();
        double[] doubleArray28 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair30 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray28, (double) (byte) -1);
        double[] doubleArray35 = pointCostPair34.getPoint();
        double double36 = pointCostPair34.getCost();
        double double37 = pointCostPair34.getCost();
        double[] doubleArray38 = pointCostPair34.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair43 = nelderMead4.minimize(costFunction5, (int) '#', convergenceChecker7, doubleArray21, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18473");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) costException11);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray23);
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", throwableArray23 };
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException37);
        java.lang.String str39 = mathException38.getPattern();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("", objArray28, (java.lang.Throwable) mathException38);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray49 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray44, (java.lang.Throwable) mathException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", objArray28, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", objArray28);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) costException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray7);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray7);
        java.lang.String str62 = mathException61.getPattern();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException" + "'", str62, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException");
    }

    @Test
    public void test18474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18474");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("");
        java.lang.Object[] objArray3 = mathException2.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray21 = convergenceException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray21);
        java.lang.Object[] objArray26 = new java.lang.Object[] { "hi!", throwableArray21 };
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException("", objArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) costException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray42);
        java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", throwableArray42 };
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException("", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException53);
        java.lang.Object[] objArray55 = convergenceException53.getArguments();
        org.apache.commons.math.optimization.CostException costException56 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray47, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray3, (java.lang.Throwable) convergenceException60);
        java.lang.Throwable[] throwableArray63 = convergenceException60.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test18475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18475");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", objArray17);
        java.lang.String str20 = mathException19.getPattern();
        java.lang.Object[] objArray21 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: hi!", (java.lang.Throwable) mathException22);
        java.lang.Object[] objArray24 = mathException22.getArguments();
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray24);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str20, "org.apache.commons.math.ConvergenceException: ");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, []]");
    }

    @Test
    public void test18476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18476");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", throwableArray9 };
        org.apache.commons.math.optimization.CostException costException15 = new org.apache.commons.math.optimization.CostException("", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) mathException42);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException(throwable45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.optimization.CostException costException49 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray62 = convergenceException61.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray62, (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException66);
        java.lang.Object[] objArray68 = new java.lang.Object[] { 0L, "", '#', mathException67 };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", objArray68, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: ", objArray68);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException74);
        mathException18.addSuppressed((java.lang.Throwable) convergenceException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: not positive definite matrix", (java.lang.Throwable) mathException18);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException77);
        java.lang.Class<?> wildcardClass80 = convergenceException77.getClass();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[0, , #, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test18477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18477");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (short) 10, 0.0d, (double) (byte) -1, 97.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) (byte) 10);
        double double19 = pointCostPair18.getCost();
        double double20 = pointCostPair18.getCost();
        double[] doubleArray21 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair23 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray21, (-1.0d));
        double[] doubleArray30 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair32 = new org.apache.commons.math.optimization.PointCostPair(doubleArray30, (double) (short) 1);
        double[] doubleArray33 = pointCostPair32.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair35 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair37 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) (byte) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair39 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair41 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray33, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair44 = nelderMead4.minimize(costFunction5, 100, convergenceChecker7, doubleArray21, doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test18478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18478");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double double13 = pointCostPair12.getCost();
        double[] doubleArray14 = pointCostPair12.getPoint();
        double[] doubleArray15 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray15, (-1.0d));
        double double18 = pointCostPair17.getCost();
        double[] doubleArray19 = pointCostPair17.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray19, (double) ' ');
        double double22 = pointCostPair21.getCost();
        double[] doubleArray23 = pointCostPair21.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, 35.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 32.0d + "'", double22 == 32.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18479");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead(35.0d, (double) 1L, (double) 100.0f, (double) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18480");
        double[] doubleArray4 = new double[] { (byte) -1, 100.0f, 100.0f, (-1.0d) };
        org.apache.commons.math.optimization.PointCostPair pointCostPair6 = new org.apache.commons.math.optimization.PointCostPair(doubleArray4, (double) (short) 1);
        double[] doubleArray7 = pointCostPair6.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair9 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) '4');
        org.apache.commons.math.optimization.PointCostPair pointCostPair11 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) 100);
        org.apache.commons.math.optimization.PointCostPair pointCostPair13 = new org.apache.commons.math.optimization.PointCostPair(doubleArray7, (double) ' ');
        double[] doubleArray14 = pointCostPair13.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double double17 = pointCostPair16.getCost();
        double double18 = pointCostPair16.getCost();
        double[] doubleArray19 = pointCostPair16.getPoint();
        java.lang.Class<?> wildcardClass20 = pointCostPair16.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test18481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18481");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException23);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.optimization.CostException costException27 = new org.apache.commons.math.optimization.CostException(throwable26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.optimization.CostException costException43 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", throwableArray39 };
        org.apache.commons.math.optimization.CostException costException45 = new org.apache.commons.math.optimization.CostException("", objArray44);
        mathException32.addSuppressed((java.lang.Throwable) costException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException48);
        org.apache.commons.math.optimization.CostException costException50 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray56 = convergenceException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray56);
        java.lang.Object[] objArray58 = convergenceException57.getArguments();
        org.apache.commons.math.optimization.CostException costException59 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test18482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18482");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray7 = convergenceException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.optimization.CostException costException11 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray7);
        java.lang.Throwable[] throwableArray12 = costException11.getSuppressed();
        org.apache.commons.math.optimization.CostException costException13 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.optimization.CostException costException28 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray29 = new java.lang.Object[] { "hi!", throwableArray24 };
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray35 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException38);
        java.lang.String str40 = mathException39.getPattern();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("", objArray29, (java.lang.Throwable) mathException39);
        java.lang.Object[] objArray45 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray50 = convergenceException49.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray45, (java.lang.Throwable) mathException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", objArray29, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.optimization.CostException costException57 = new org.apache.commons.math.optimization.CostException("", objArray29);
        org.apache.commons.math.optimization.CostException costException58 = new org.apache.commons.math.optimization.CostException("", objArray29);
        costException13.addSuppressed((java.lang.Throwable) costException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) costException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test18483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18483");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray23 = convergenceException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        java.lang.String str28 = mathException27.getPattern();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) mathException27);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray38 = convergenceException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray38, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray33, (java.lang.Throwable) mathException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", objArray17, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray17, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray55);
        java.lang.Object[] objArray57 = convergenceException56.getArguments();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray66 = convergenceException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray61, (java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", objArray57, (java.lang.Throwable) mathException70);
        java.lang.Object[] objArray73 = mathException72.getArguments();
        java.lang.Object[] objArray74 = mathException72.getArguments();
        org.apache.commons.math.optimization.CostException costException75 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!", objArray74);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!", objArray74);
        convergenceException46.addSuppressed((java.lang.Throwable) convergenceException78);
        java.lang.Object[] objArray80 = convergenceException46.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray80);
        org.apache.commons.math.optimization.CostException costException82 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: not positive definite matrix", objArray80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: ", objArray80);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, []]");
    }

    @Test
    public void test18484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18484");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray9, (java.lang.Throwable) mathException18);
        org.apache.commons.math.optimization.CostException costException20 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray21 = mathException18.getArguments();
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", objArray21);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray21);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException26);
        java.lang.String str28 = convergenceException27.getPattern();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!" + "'", str28, "org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
    }

    @Test
    public void test18485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18485");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray13 = costException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.optimization.CostException: ", objArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Throwable) convergenceException17);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test18486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18486");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.optimization.CostException costException16 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray12);
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", throwableArray12 };
        org.apache.commons.math.optimization.CostException costException18 = new org.apache.commons.math.optimization.CostException("", objArray17);
        mathException5.addSuppressed((java.lang.Throwable) costException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) costException18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException20);
        java.lang.Throwable[] throwableArray23 = costException22.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray32 = convergenceException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray32);
        java.lang.Object[] objArray34 = convergenceException33.getArguments();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray43 = convergenceException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray38, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", objArray34, (java.lang.Throwable) mathException47);
        java.lang.Throwable[] throwableArray50 = mathException47.getSuppressed();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("not positive definite matrix", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) mathException56);
        java.lang.Throwable[] throwableArray58 = mathException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException", (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test18487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18487");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 1, (double) 100L, 0.0d, (double) 0);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) '4', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18488");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray8 = convergenceException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.optimization.CostException costException12 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", throwableArray8 };
        org.apache.commons.math.optimization.CostException costException14 = new org.apache.commons.math.optimization.CostException("", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", objArray13);
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        java.lang.Object[] objArray17 = convergenceException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray29 = convergenceException28.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        org.apache.commons.math.optimization.CostException costException32 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray31);
        convergenceException20.addSuppressed((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.optimization.CostException: ", (java.lang.Throwable) mathException34);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray47 = convergenceException46.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray42, (java.lang.Throwable) mathException51);
        org.apache.commons.math.optimization.CostException costException53 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException51);
        java.lang.Object[] objArray54 = mathException51.getArguments();
        org.apache.commons.math.optimization.CostException costException55 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray54);
        mathException36.addSuppressed((java.lang.Throwable) convergenceException56);
        java.lang.Throwable[] throwableArray58 = mathException36.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException36);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test18489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18489");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) (byte) 0, 35.0d, 0.0d, 1.0d);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair9 = nelderMead4.minimize(costFunction5, (int) ' ', convergenceChecker7, randomVectorGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test18490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18490");
        org.apache.commons.math.random.NotPositiveDefiniteMatrixException notPositiveDefiniteMatrixException1 = new org.apache.commons.math.random.NotPositiveDefiniteMatrixException();
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) notPositiveDefiniteMatrixException1);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.optimization.CostException costException17 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray18 = new java.lang.Object[] { "hi!", throwableArray13 };
        org.apache.commons.math.optimization.CostException costException19 = new org.apache.commons.math.optimization.CostException("", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray24 = convergenceException23.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException27);
        java.lang.String str29 = mathException28.getPattern();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray18, (java.lang.Throwable) mathException28);
        org.apache.commons.math.optimization.CostException costException31 = new org.apache.commons.math.optimization.CostException("hi!", objArray18);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.optimization.CostException costException34 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.optimization.CostException costException35 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException34);
        notPositiveDefiniteMatrixException1.addSuppressed((java.lang.Throwable) costException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) notPositiveDefiniteMatrixException1);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException37);
        java.lang.Throwable[] throwableArray39 = convergenceException38.getSuppressed();
        java.lang.String str40 = convergenceException38.getPattern();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!" + "'", str40, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
    }

    @Test
    public void test18491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18491");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray9 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray20 = convergenceException19.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray15, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", objArray11, (java.lang.Throwable) mathException24);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        java.lang.Object[] objArray28 = mathException26.getArguments();
        org.apache.commons.math.optimization.CostException costException29 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray28);
        org.apache.commons.math.optimization.CostException costException30 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray28);
        java.lang.Object[] objArray32 = convergenceException31.getArguments();
        org.apache.commons.math.optimization.CostException costException33 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray44 = convergenceException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray44);
        java.lang.Object[] objArray46 = convergenceException45.getArguments();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray55 = convergenceException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("", objArray50, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", objArray46, (java.lang.Throwable) mathException59);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        java.lang.Object[] objArray63 = mathException61.getArguments();
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: ", objArray63);
        org.apache.commons.math.optimization.CostException costException65 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: ", objArray63);
        java.lang.Throwable throwable67 = null;
        org.apache.commons.math.optimization.CostException costException68 = new org.apache.commons.math.optimization.CostException(throwable67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) costException68);
        java.lang.Object[] objArray70 = costException68.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("");
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray70, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", objArray63, (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray63);
        org.apache.commons.math.optimization.CostException costException76 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.ConvergenceException: ", objArray63);
        org.apache.commons.math.optimization.CostException costException77 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) costException77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException78);
        java.lang.Object[] objArray80 = convergenceException78.getArguments();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test18492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18492");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) ' ', (double) (byte) 10, 10.0d, (double) 100.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double[] doubleArray19 = pointCostPair18.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair21 = new org.apache.commons.math.optimization.PointCostPair(doubleArray19, (double) (byte) 10);
        double[] doubleArray22 = pointCostPair21.getPoint();
        double[] doubleArray23 = pointCostPair21.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) (byte) 100);
        double[] doubleArray32 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair34 = new org.apache.commons.math.optimization.PointCostPair(doubleArray32, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray32, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray32, (double) (byte) 1);
        double[] doubleArray39 = pointCostPair38.getPoint();
        double double40 = pointCostPair38.getCost();
        double[] doubleArray41 = pointCostPair38.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair43 = new org.apache.commons.math.optimization.PointCostPair(doubleArray41, (double) 100.0f);
        double[] doubleArray44 = pointCostPair43.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair45 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, doubleArray23, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18493");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException4);
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException6);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("not positive definite matrix");
        costException7.addSuppressed((java.lang.Throwable) mathException9);
        java.lang.String str11 = costException7.getPattern();
        java.lang.Object[] objArray12 = costException7.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: ", objArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray12);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test18494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18494");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray5 = convergenceException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) convergenceException7);
        java.lang.Throwable[] throwableArray9 = convergenceException7.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.optimization.CostException costException22 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray18);
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", throwableArray18 };
        org.apache.commons.math.optimization.CostException costException24 = new org.apache.commons.math.optimization.CostException("", objArray23);
        mathException11.addSuppressed((java.lang.Throwable) costException24);
        java.lang.Object[] objArray26 = mathException11.getArguments();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) mathException11);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("");
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray42 = convergenceException41.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.optimization.CostException costException46 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray42);
        java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", throwableArray42 };
        org.apache.commons.math.optimization.CostException costException48 = new org.apache.commons.math.optimization.CostException("", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray53 = convergenceException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException56);
        java.lang.String str58 = mathException57.getPattern();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray47, (java.lang.Throwable) mathException57);
        org.apache.commons.math.optimization.CostException costException60 = new org.apache.commons.math.optimization.CostException("hi!", objArray47);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.optimization.CostException: org.apache.commons.math.ConvergenceException: hi!", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.optimization.CostException costException63 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException62);
        org.apache.commons.math.optimization.CostException costException64 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException63);
        convergenceException31.addSuppressed((java.lang.Throwable) costException64);
        org.apache.commons.math.optimization.CostException costException66 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException64);
        org.apache.commons.math.optimization.CostException costException67 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) costException64);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray75 = convergenceException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray75, (java.lang.Throwable) convergenceException77);
        org.apache.commons.math.optimization.CostException costException79 = new org.apache.commons.math.optimization.CostException("", (java.lang.Object[]) throwableArray75);
        java.lang.Object[] objArray80 = new java.lang.Object[] { "hi!", throwableArray75 };
        org.apache.commons.math.optimization.CostException costException81 = new org.apache.commons.math.optimization.CostException("", objArray80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("", objArray80);
        java.lang.Throwable[] throwableArray83 = convergenceException82.getSuppressed();
        org.apache.commons.math.optimization.CostException costException84 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) convergenceException82);
        costException67.addSuppressed((java.lang.Throwable) convergenceException82);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, []]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, []]");
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test18495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18495");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.optimization.CostException costException5 = new org.apache.commons.math.optimization.CostException(throwable4);
        java.lang.Object[] objArray6 = costException5.getArguments();
        org.apache.commons.math.optimization.CostException costException7 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: org.apache.commons.math.optimization.CostException: hi!", objArray6);
        java.lang.Object[] objArray12 = new java.lang.Object[] { 10, (byte) 10 };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray17 = convergenceException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray12, (java.lang.Throwable) mathException21);
        org.apache.commons.math.optimization.CostException costException23 = new org.apache.commons.math.optimization.CostException((java.lang.Throwable) mathException21);
        java.lang.Throwable[] throwableArray24 = costException23.getSuppressed();
        org.apache.commons.math.optimization.CostException costException25 = new org.apache.commons.math.optimization.CostException("org.apache.commons.math.MathException: not positive definite matrix", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray6, (java.lang.Throwable) costException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.random.NotPositiveDefiniteMatrixException: not positive definite matrix", objArray6);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", objArray6);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[10, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[10, 10]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test18496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18496");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 10.0f, (double) (byte) 10, (double) 10, (double) 0.0f);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        double[] doubleArray17 = pointCostPair16.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray17, (double) (short) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair22 = new org.apache.commons.math.optimization.PointCostPair(doubleArray20, (double) 100);
        double[] doubleArray23 = pointCostPair22.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair25 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair27 = new org.apache.commons.math.optimization.PointCostPair(doubleArray23, (double) (-1));
        double[] doubleArray34 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair38 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) 100L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) (short) 10);
        double[] doubleArray43 = pointCostPair42.getPoint();
        double[] doubleArray44 = pointCostPair42.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair46 = new org.apache.commons.math.optimization.PointCostPair(doubleArray44, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair47 = nelderMead4.minimize(costFunction5, (int) (short) 0, convergenceChecker7, doubleArray23, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18497");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) 1);
        double[] doubleArray13 = pointCostPair12.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair15 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair17 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) (short) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair19 = new org.apache.commons.math.optimization.PointCostPair(doubleArray13, (double) 1);
        double[] doubleArray20 = pointCostPair19.getPoint();
        double[] doubleArray21 = pointCostPair19.getPoint();
        double[] doubleArray22 = pointCostPair19.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair24 = new org.apache.commons.math.optimization.PointCostPair(doubleArray22, 0.0d);
        double[] doubleArray25 = pointCostPair24.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18498");
        double[] doubleArray6 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair8 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair10 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair12 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) (byte) -1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair14 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray6, (double) ' ');
        double double17 = pointCostPair16.getCost();
        double double18 = pointCostPair16.getCost();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
    }

    @Test
    public void test18499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18499");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 1L, (double) (byte) -1, (double) 100L, (double) (short) 10);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        double[] doubleArray14 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair16 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair18 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 1);
        org.apache.commons.math.optimization.PointCostPair pointCostPair20 = new org.apache.commons.math.optimization.PointCostPair(doubleArray14, (double) 100L);
        double[] doubleArray27 = new double[] { (byte) -1, (byte) -1, (-1), (short) 1, 1.0d, (short) 10 };
        org.apache.commons.math.optimization.PointCostPair pointCostPair29 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, 0.0d);
        org.apache.commons.math.optimization.PointCostPair pointCostPair31 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, (double) (-1.0f));
        org.apache.commons.math.optimization.PointCostPair pointCostPair33 = new org.apache.commons.math.optimization.PointCostPair(doubleArray27, (double) (short) 1);
        double[] doubleArray34 = pointCostPair33.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair36 = new org.apache.commons.math.optimization.PointCostPair(doubleArray34, (double) 10.0f);
        double[] doubleArray37 = pointCostPair36.getPoint();
        double[] doubleArray38 = pointCostPair36.getPoint();
        org.apache.commons.math.optimization.PointCostPair pointCostPair40 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) 1L);
        org.apache.commons.math.optimization.PointCostPair pointCostPair42 = new org.apache.commons.math.optimization.PointCostPair(doubleArray38, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair45 = nelderMead4.minimize(costFunction5, (int) (short) 1, convergenceChecker7, doubleArray14, doubleArray38, (int) (short) 100, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, -1.0, -1.0, 1.0, 1.0, 10.0]");
    }

    @Test
    public void test18500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest36.test18500");
        org.apache.commons.math.optimization.NelderMead nelderMead4 = new org.apache.commons.math.optimization.NelderMead((double) 100L, (double) (byte) 10, (double) (short) -1, (double) (short) 100);
        org.apache.commons.math.optimization.CostFunction costFunction5 = null;
        org.apache.commons.math.optimization.ConvergenceChecker convergenceChecker7 = null;
        org.apache.commons.math.random.RandomVectorGenerator randomVectorGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.PointCostPair pointCostPair10 = nelderMead4.minimize(costFunction5, (int) (byte) 1, convergenceChecker7, randomVectorGenerator8, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }
}

