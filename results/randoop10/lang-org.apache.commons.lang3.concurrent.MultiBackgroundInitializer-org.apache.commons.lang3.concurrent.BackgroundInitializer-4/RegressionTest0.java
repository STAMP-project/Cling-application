import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer1.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        boolean boolean2 = multiBackgroundInitializer1.start();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer1.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = multiBackgroundInitializerResults2.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer4 = multiBackgroundInitializerResults2.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.lang.Class<?> wildcardClass3 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        boolean boolean2 = multiBackgroundInitializer1.isStarted();
        java.lang.Class<?> wildcardClass3 = multiBackgroundInitializer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.lang.Class<?> wildcardClass2 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass8 = multiBackgroundInitializer7.getClass();
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService9);
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        java.lang.Class<?> wildcardClass12 = multiBackgroundInitializer10.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        java.lang.Class<?> wildcardClass16 = multiBackgroundInitializer13.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        java.lang.Class<?> wildcardClass19 = multiBackgroundInitializer17.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        boolean boolean22 = multiBackgroundInitializer20.start();
        java.lang.Class<?> wildcardClass23 = multiBackgroundInitializer20.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass8, wildcardClass12, wildcardClass16, wildcardClass19, wildcardClass23 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[] annotatedElementArray25 = strSet3.toArray(annotatedElementArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.util.Collection<java.lang.String> strCollection19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = strSet16.addAll(strCollection19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = strSet5.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException5 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        java.util.Collection<java.lang.String> strCollection7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = strSet5.addAll(strCollection7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = strSet16.addAll((java.util.Collection<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = multiBackgroundInitializerResults2.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.lang.Class<?> wildcardClass12 = strStream11.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        boolean boolean10 = strSet8.isEmpty();
        java.lang.Object[] objArray11 = strSet8.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        boolean boolean14 = multiBackgroundInitializer12.start();
        boolean boolean15 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer12.get();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults16.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream18 = strSet17.stream();
        boolean boolean19 = strSet8.containsAll((java.util.Collection<java.lang.String>) strSet17);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = strSet4.addAll((java.util.Collection<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture1 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        boolean boolean16 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer13.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean19 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet18);
        java.util.stream.Stream<java.lang.String> strStream20 = strSet11.stream();
        java.lang.Class<?> wildcardClass21 = strStream20.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass23 = multiBackgroundInitializer22.getClass();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        boolean boolean30 = multiBackgroundInitializer28.start();
        boolean boolean31 = multiBackgroundInitializer28.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer28.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.stream.Stream<java.lang.String> strStream35 = strSet26.stream();
        java.lang.Class<?> wildcardClass36 = strStream35.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass21, wildcardClass23, wildcardClass36 };
        java.lang.reflect.Type[] typeArray38 = strSet3.toArray(typeArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream45 = strSet44.stream();
        boolean boolean46 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet44);
        java.lang.Class<?> wildcardClass47 = strSet44.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults4.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults4.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        boolean boolean16 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer13.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean19 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet18);
        java.util.stream.Stream<java.lang.String> strStream20 = strSet11.stream();
        java.lang.Class<?> wildcardClass21 = strStream20.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass23 = multiBackgroundInitializer22.getClass();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        boolean boolean30 = multiBackgroundInitializer28.start();
        boolean boolean31 = multiBackgroundInitializer28.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer28.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.stream.Stream<java.lang.String> strStream35 = strSet26.stream();
        java.lang.Class<?> wildcardClass36 = strStream35.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass21, wildcardClass23, wildcardClass36 };
        java.lang.reflect.Type[] typeArray38 = strSet3.toArray(typeArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream45 = strSet44.stream();
        boolean boolean46 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet44);
        // The following exception was thrown during execution in test generation
        try {
            strSet44.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass7 = multiBackgroundInitializer6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = strSet5.remove((java.lang.Object) multiBackgroundInitializer6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer5 = multiBackgroundInitializerResults3.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults8.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.isStarted();
        boolean boolean8 = multiBackgroundInitializer6.start();
        boolean boolean9 = multiBackgroundInitializer6.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer6.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        java.util.Iterator<java.lang.String> strItor12 = strSet11.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = strSet5.retainAll((java.util.Collection<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strItor12);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = strSet12.contains(obj14);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        boolean boolean22 = multiBackgroundInitializer20.start();
        boolean boolean23 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer20.get();
        java.util.Set<java.lang.String> strSet25 = multiBackgroundInitializerResults24.initializerNames();
        boolean boolean26 = strSet18.removeAll((java.util.Collection<java.lang.String>) strSet25);
        boolean boolean27 = strSet12.removeAll((java.util.Collection<java.lang.String>) strSet25);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.util.stream.Stream<java.lang.String> strStream39 = strSet30.stream();
        boolean boolean40 = strSet12.containsAll((java.util.Collection<java.lang.String>) strSet30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = strSet5.remove((java.lang.Object) boolean40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults7.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults4.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults4.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        boolean boolean11 = multiBackgroundInitializer9.start();
        boolean boolean12 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer9.get();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults13.initializerNames();
        boolean boolean15 = strSet7.removeAll((java.util.Collection<java.lang.String>) strSet14);
        java.util.stream.Stream<java.lang.String> strStream16 = strSet7.stream();
        java.util.Iterator<java.lang.String> strItor17 = strSet7.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = strSet4.removeAll((java.util.Collection<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strItor17);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(executorService2);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture3.cancel(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture3.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = strSet5.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults3.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        boolean boolean11 = multiBackgroundInitializer9.start();
        boolean boolean12 = multiBackgroundInitializer9.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer8 = multiBackgroundInitializerResults3.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults3.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        boolean boolean25 = strSet18.remove((java.lang.Object) 0L);
        boolean boolean27 = strSet18.add("");
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService28);
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer29.getExternalExecutor();
        boolean boolean31 = multiBackgroundInitializer29.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer29.getFuture();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer29.getExternalExecutor();
        boolean boolean34 = strSet18.equals((java.lang.Object) multiBackgroundInitializer29);
        java.util.concurrent.ExecutorService executorService35 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer29.setExternalExecutor(executorService35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService6);
        boolean boolean8 = multiBackgroundInitializer7.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.lang.Object[] objArray6 = strSet5.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = strSet5.retainAll((java.util.Collection<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException7 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        strSet3.clear();
        java.util.stream.Stream<java.lang.String> strStream8 = strSet3.parallelStream();
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        boolean boolean14 = strSet12.isEmpty();
        java.lang.Object[] objArray15 = strSet12.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        boolean boolean18 = multiBackgroundInitializer16.start();
        boolean boolean19 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer16.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream22 = strSet21.stream();
        boolean boolean23 = strSet12.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = strSet27.contains(obj29);
        int int31 = strSet27.size();
        boolean boolean32 = strSet12.retainAll((java.util.Collection<java.lang.String>) strSet27);
        strSet12.clear();
        boolean boolean34 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.Class<?> wildcardClass35 = strSet12.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = multiBackgroundInitializerResults11.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = multiBackgroundInitializerResults3.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        boolean boolean30 = multiBackgroundInitializer28.start();
        boolean boolean31 = multiBackgroundInitializer28.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer28.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.start();
        boolean boolean37 = multiBackgroundInitializer35.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer35.get();
        java.util.Set<java.lang.String> strSet39 = multiBackgroundInitializerResults38.initializerNames();
        boolean boolean40 = strSet26.retainAll((java.util.Collection<java.lang.String>) strSet39);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        boolean boolean43 = multiBackgroundInitializer41.start();
        boolean boolean44 = multiBackgroundInitializer41.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        java.util.Set<java.lang.String> strSet46 = multiBackgroundInitializerResults45.initializerNames();
        boolean boolean47 = strSet39.contains((java.lang.Object) multiBackgroundInitializerResults45);
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults45.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = strSet15.removeAll((java.util.Collection<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.lang.Class<?> wildcardClass7 = strSet5.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        boolean boolean5 = multiBackgroundInitializerResults4.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = multiBackgroundInitializerResults4.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        boolean boolean10 = strSet8.isEmpty();
        java.lang.Object[] objArray11 = strSet8.toArray();
        strSet8.clear();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet8.parallelStream();
        java.util.Iterator<java.lang.String> strItor14 = strSet8.iterator();
        boolean boolean16 = strSet8.remove((java.lang.Object) 1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = strSet4.addAll((java.util.Collection<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = multiBackgroundInitializerResults6.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults5.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get((long) '#', timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet11.spliterator();
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        boolean boolean21 = strSet19.isEmpty();
        java.lang.Object[] objArray22 = strSet19.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator23 = strSet19.spliterator();
        strSet19.clear();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        boolean boolean31 = multiBackgroundInitializer29.start();
        boolean boolean32 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet34 = multiBackgroundInitializerResults33.initializerNames();
        boolean boolean35 = strSet27.removeAll((java.util.Collection<java.lang.String>) strSet34);
        java.util.stream.Stream<java.lang.String> strStream36 = strSet27.stream();
        java.lang.Class<?> wildcardClass37 = strStream36.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass39 = multiBackgroundInitializer38.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        java.lang.Class<?> wildcardClass52 = strStream51.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass52 };
        java.lang.reflect.Type[] typeArray54 = strSet19.toArray(typeArray53);
        boolean boolean55 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer56 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean57 = multiBackgroundInitializer56.isStarted();
        java.util.concurrent.ExecutorService executorService58 = multiBackgroundInitializer56.getExternalExecutor();
        boolean boolean59 = multiBackgroundInitializer56.isStarted();
        boolean boolean60 = strSet19.remove((java.lang.Object) boolean59);
        java.lang.Object[] objArray61 = strSet19.toArray();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer66 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean67 = multiBackgroundInitializer66.isStarted();
        boolean boolean68 = multiBackgroundInitializer66.start();
        boolean boolean69 = multiBackgroundInitializer66.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults70 = multiBackgroundInitializer66.get();
        java.util.Set<java.lang.String> strSet71 = multiBackgroundInitializerResults70.initializerNames();
        boolean boolean72 = strSet64.removeAll((java.util.Collection<java.lang.String>) strSet71);
        java.util.stream.Stream<java.lang.String> strStream73 = strSet64.stream();
        java.util.Iterator<java.lang.String> strItor74 = strSet64.iterator();
        boolean boolean75 = strSet19.addAll((java.util.Collection<java.lang.String>) strSet64);
        java.lang.Object[] objArray76 = strSet64.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = strSet5.removeAll((java.util.Collection<java.lang.String>) strSet64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(executorService58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!]");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture3.get((long) (-1), timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer1.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = multiBackgroundInitializerResults3.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get((long) (short) 0, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = strSet5.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.concurrent.ExecutorService executorService12 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer7.setExternalExecutor(executorService12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        boolean boolean67 = strSet59.removeAll((java.util.Collection<java.lang.String>) strSet66);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer68 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean69 = multiBackgroundInitializer68.start();
        boolean boolean70 = multiBackgroundInitializer68.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults71 = multiBackgroundInitializer68.get();
        java.util.Set<java.lang.String> strSet72 = multiBackgroundInitializerResults71.initializerNames();
        boolean boolean73 = strSet59.retainAll((java.util.Collection<java.lang.String>) strSet72);
        int int74 = strSet72.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = strSet33.retainAll((java.util.Collection<java.lang.String>) strSet72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer1.getExternalExecutor();
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        java.util.stream.Stream<java.lang.String> strStream9 = strSet5.stream();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = strSet13.contains(obj15);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        boolean boolean23 = multiBackgroundInitializer21.start();
        boolean boolean24 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer21.get();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults25.initializerNames();
        boolean boolean27 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet26);
        boolean boolean28 = strSet13.removeAll((java.util.Collection<java.lang.String>) strSet26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer33 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean34 = multiBackgroundInitializer33.isStarted();
        boolean boolean35 = multiBackgroundInitializer33.start();
        boolean boolean36 = multiBackgroundInitializer33.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer33.get();
        java.util.Set<java.lang.String> strSet38 = multiBackgroundInitializerResults37.initializerNames();
        boolean boolean39 = strSet31.removeAll((java.util.Collection<java.lang.String>) strSet38);
        java.util.stream.Stream<java.lang.String> strStream40 = strSet31.stream();
        boolean boolean41 = strSet13.containsAll((java.util.Collection<java.lang.String>) strSet31);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = strSet45.contains(obj47);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer53 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean54 = multiBackgroundInitializer53.isStarted();
        boolean boolean55 = multiBackgroundInitializer53.start();
        boolean boolean56 = multiBackgroundInitializer53.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer53.get();
        java.util.Set<java.lang.String> strSet58 = multiBackgroundInitializerResults57.initializerNames();
        boolean boolean59 = strSet51.removeAll((java.util.Collection<java.lang.String>) strSet58);
        boolean boolean60 = strSet45.removeAll((java.util.Collection<java.lang.String>) strSet58);
        boolean boolean61 = strSet31.removeAll((java.util.Collection<java.lang.String>) strSet45);
        java.util.Spliterator<java.lang.String> strSpliterator62 = strSet31.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = strSet5.retainAll((java.util.Collection<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strSpliterator62);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = multiBackgroundInitializerResults3.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(true);
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture4.get((long) 100, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer13.get();
        boolean boolean17 = multiBackgroundInitializer13.isStarted();
        boolean boolean18 = strSet3.contains((java.lang.Object) multiBackgroundInitializer13);
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer13.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            strSet4.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer11 = multiBackgroundInitializerResults8.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(false);
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture5.get((long) (byte) 10, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(true);
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture5.get((long) 'a', timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.Iterator<java.lang.String> strItor12 = strSet2.iterator();
        strSet2.clear();
        boolean boolean15 = strSet2.remove((java.lang.Object) 10.0f);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        boolean boolean21 = strSet19.isEmpty();
        java.lang.Object[] objArray22 = strSet19.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator23 = strSet19.spliterator();
        boolean boolean24 = strSet2.remove((java.lang.Object) strSet19);
        java.util.Spliterator<java.lang.String> strSpliterator25 = strSet19.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSpliterator25);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults21.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer26 = multiBackgroundInitializerResults21.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        boolean boolean24 = strSet22.isEmpty();
        java.lang.Object[] objArray25 = strSet22.toArray();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = strSet29.contains(obj31);
        int int33 = strSet29.size();
        java.util.stream.Stream<java.lang.String> strStream34 = strSet29.stream();
        boolean boolean35 = strSet22.addAll((java.util.Collection<java.lang.String>) strSet29);
        java.util.stream.Stream<java.lang.String> strStream36 = strSet29.stream();
        boolean boolean37 = strSet16.equals((java.lang.Object) strStream36);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = strSet16.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            strSet4.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        boolean boolean2 = multiBackgroundInitializer1.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer1.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults3.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        boolean boolean62 = strSet60.isEmpty();
        java.lang.Object[] objArray63 = strSet60.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator64 = strSet60.spliterator();
        strSet60.clear();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer70 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean71 = multiBackgroundInitializer70.isStarted();
        boolean boolean72 = multiBackgroundInitializer70.start();
        boolean boolean73 = multiBackgroundInitializer70.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults74 = multiBackgroundInitializer70.get();
        java.util.Set<java.lang.String> strSet75 = multiBackgroundInitializerResults74.initializerNames();
        boolean boolean76 = strSet68.removeAll((java.util.Collection<java.lang.String>) strSet75);
        java.util.stream.Stream<java.lang.String> strStream77 = strSet68.stream();
        java.lang.Class<?> wildcardClass78 = strStream77.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer79 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass80 = multiBackgroundInitializer79.getClass();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer85 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean86 = multiBackgroundInitializer85.isStarted();
        boolean boolean87 = multiBackgroundInitializer85.start();
        boolean boolean88 = multiBackgroundInitializer85.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults89 = multiBackgroundInitializer85.get();
        java.util.Set<java.lang.String> strSet90 = multiBackgroundInitializerResults89.initializerNames();
        boolean boolean91 = strSet83.removeAll((java.util.Collection<java.lang.String>) strSet90);
        java.util.stream.Stream<java.lang.String> strStream92 = strSet83.stream();
        java.lang.Class<?> wildcardClass93 = strStream92.getClass();
        java.lang.reflect.Type[] typeArray94 = new java.lang.reflect.Type[] { wildcardClass78, wildcardClass80, wildcardClass93 };
        java.lang.reflect.Type[] typeArray95 = strSet60.toArray(typeArray94);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = strSet33.remove((java.lang.Object) typeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults89);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strStream92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertNotNull(typeArray95);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer13.get();
        boolean boolean17 = multiBackgroundInitializer13.isStarted();
        boolean boolean18 = strSet3.contains((java.lang.Object) multiBackgroundInitializer13);
        boolean boolean19 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer13.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = multiBackgroundInitializerResults20.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.isStarted();
        boolean boolean8 = multiBackgroundInitializer6.start();
        boolean boolean9 = multiBackgroundInitializer6.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer6.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator19 = strSet15.spliterator();
        strSet15.clear();
        java.util.Collection[] collectionArray22 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray23 = (java.util.Collection<java.lang.String>[]) collectionArray22;
        java.util.Collection<java.lang.String>[] strCollectionArray24 = strSet15.toArray((java.util.Collection<java.lang.String>[]) collectionArray22);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        boolean boolean27 = multiBackgroundInitializer25.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer25.get();
        boolean boolean29 = multiBackgroundInitializer25.isStarted();
        boolean boolean30 = strSet15.contains((java.lang.Object) multiBackgroundInitializer25);
        boolean boolean31 = strSet11.equals((java.lang.Object) strSet15);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = strSet5.addAll((java.util.Collection<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(collectionArray22);
        org.junit.Assert.assertNotNull(strCollectionArray23);
        org.junit.Assert.assertNotNull(strCollectionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture4.get(0L, timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.start();
        boolean boolean10 = multiBackgroundInitializer8.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer8.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer8.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer8.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService13);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        int int7 = strSet3.size();
        java.util.stream.Stream<java.lang.String> strStream8 = strSet3.stream();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        boolean boolean16 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer13.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean19 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet18);
        java.util.stream.Stream<java.lang.String> strStream20 = strSet11.stream();
        boolean boolean21 = strSet11.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream22 = strSet11.parallelStream();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        boolean boolean28 = strSet26.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream29 = strSet26.stream();
        java.util.stream.BaseStream[] baseStreamArray31 = new java.util.stream.BaseStream[2];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray32 = (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) baseStreamArray31;
        strBaseStreamArray32[0] = strStream22;
        strBaseStreamArray32[1] = strStream29;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray37 = strSet3.toArray(strBaseStreamArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(baseStreamArray31);
        org.junit.Assert.assertNotNull(strBaseStreamArray32);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        java.util.Spliterator<java.lang.String> strSpliterator9 = strSet3.spliterator();
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        boolean boolean15 = strSet13.isEmpty();
        java.lang.Object[] objArray16 = strSet13.toArray();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = strSet20.contains(obj22);
        int int24 = strSet20.size();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet20.stream();
        boolean boolean26 = strSet13.addAll((java.util.Collection<java.lang.String>) strSet20);
        boolean boolean27 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.util.stream.Stream<java.lang.String> strStream39 = strSet30.stream();
        boolean boolean41 = strSet30.contains((java.lang.Object) (short) 0);
        boolean boolean42 = strSet20.remove((java.lang.Object) boolean41);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        boolean boolean48 = strSet46.isEmpty();
        java.lang.Object[] objArray49 = strSet46.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator50 = strSet46.spliterator();
        strSet46.clear();
        java.util.stream.Stream<java.lang.String> strStream52 = strSet46.parallelStream();
        java.util.stream.BaseStream[] baseStreamArray54 = new java.util.stream.BaseStream[1];
        @SuppressWarnings("unchecked")
        java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray55 = (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) baseStreamArray54;
        strBaseStreamArray55[0] = strStream52;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray58 = strSet20.toArray(strBaseStreamArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(baseStreamArray54);
        org.junit.Assert.assertNotNull(strBaseStreamArray55);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        boolean boolean2 = multiBackgroundInitializer1.isStarted();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer5 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean6 = multiBackgroundInitializer5.start();
        boolean boolean7 = multiBackgroundInitializer5.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer5.get();
        boolean boolean9 = multiBackgroundInitializer5.start();
        boolean boolean10 = multiBackgroundInitializer5.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException5 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults7.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer5 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean6 = multiBackgroundInitializer5.isStarted();
        boolean boolean7 = multiBackgroundInitializer5.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer5.get();
        boolean boolean9 = multiBackgroundInitializer5.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer1.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer8.setExternalExecutor(executorService10);
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        boolean boolean11 = strSet9.isEmpty();
        java.lang.Object[] objArray12 = strSet9.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator13 = strSet9.spliterator();
        strSet9.clear();
        java.util.Collection[] collectionArray16 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray17 = (java.util.Collection<java.lang.String>[]) collectionArray16;
        java.util.Collection<java.lang.String>[] strCollectionArray18 = strSet9.toArray((java.util.Collection<java.lang.String>[]) collectionArray16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer19.get();
        boolean boolean23 = multiBackgroundInitializer19.isStarted();
        boolean boolean24 = strSet9.contains((java.lang.Object) multiBackgroundInitializer19);
        boolean boolean25 = strSet5.equals((java.lang.Object) strSet9);
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator13);
        org.junit.Assert.assertNotNull(collectionArray16);
        org.junit.Assert.assertNotNull(strCollectionArray17);
        org.junit.Assert.assertNotNull(strCollectionArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture3.get((long) 1, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = multiBackgroundInitializerResults3.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializerResultsFuture29.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException33 = multiBackgroundInitializerResults31.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = multiBackgroundInitializerResults6.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture5.get(1L, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        // The following exception was thrown during execution in test generation
        try {
            strSet15.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.Iterator<java.lang.String> strItor12 = strSet2.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        boolean boolean16 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer13.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer13.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer13.getExternalExecutor();
        boolean boolean20 = strSet2.equals((java.lang.Object) executorService19);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer7.getFuture();
        boolean boolean11 = multiBackgroundInitializer7.start();
        boolean boolean12 = multiBackgroundInitializer7.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults21.initializerNames();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = strSet28.contains(obj30);
        java.lang.Object obj32 = null;
        boolean boolean33 = strSet28.equals(obj32);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strSet28.spliterator();
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        boolean boolean40 = strSet38.isEmpty();
        java.lang.Object[] objArray41 = strSet38.toArray();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = strSet45.contains(obj47);
        int int49 = strSet45.size();
        java.util.stream.Stream<java.lang.String> strStream50 = strSet45.stream();
        boolean boolean51 = strSet38.addAll((java.util.Collection<java.lang.String>) strSet45);
        boolean boolean52 = strSet28.retainAll((java.util.Collection<java.lang.String>) strSet45);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = strSet24.addAll((java.util.Collection<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet24.stream();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strSet24.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean31 = strSet15.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean33 = strSet15.add("");
        boolean boolean34 = strSet3.contains((java.lang.Object) "");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        boolean boolean45 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet44);
        java.util.stream.Stream<java.lang.String> strStream46 = strSet37.stream();
        java.util.Iterator<java.lang.String> strItor47 = strSet37.iterator();
        strSet37.clear();
        boolean boolean49 = strSet3.equals((java.lang.Object) strSet37);
        java.lang.Class<?> wildcardClass50 = strSet37.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.cancel(false);
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture4.get(0L, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture6.get((long) (short) 100, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isCancelled();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture5.get((long) 100, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        boolean boolean29 = strSet27.isEmpty();
        java.lang.Object[] objArray30 = strSet27.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        boolean boolean33 = multiBackgroundInitializer31.start();
        boolean boolean34 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer31.get();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults35.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream37 = strSet36.stream();
        boolean boolean38 = strSet27.containsAll((java.util.Collection<java.lang.String>) strSet36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = strSet42.contains(obj44);
        int int46 = strSet42.size();
        boolean boolean47 = strSet27.retainAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean48 = strSet18.containsAll((java.util.Collection<java.lang.String>) strSet27);
        boolean boolean50 = strSet27.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream51 = strSet27.parallelStream();
        java.lang.Class<?> wildcardClass52 = strStream51.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.util.Iterator<java.lang.String> strItor32 = strSet21.iterator();
        java.util.LinkedHashSet[] linkedHashSetArray34 = new java.util.LinkedHashSet[0];
        @SuppressWarnings("unchecked")
        java.util.LinkedHashSet<java.lang.String>[] strSetArray35 = (java.util.LinkedHashSet<java.lang.String>[]) linkedHashSetArray34;
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.String>[] strSetArray36 = strSet21.toArray((java.util.LinkedHashSet<java.lang.String>[]) linkedHashSetArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(linkedHashSetArray34);
        org.junit.Assert.assertNotNull(strSetArray35);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        java.lang.Class<?> wildcardClass9 = multiBackgroundInitializerResults6.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture4.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture3.cancel(false);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture3.get((long) 100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.start();
        boolean boolean33 = multiBackgroundInitializer31.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer31.get();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer31.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer31.get();
        boolean boolean37 = strSet3.remove((java.lang.Object) multiBackgroundInitializer31);
        java.lang.Class<?> wildcardClass38 = strSet3.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.lang.Class<?> wildcardClass6 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer13.get();
        boolean boolean17 = multiBackgroundInitializer13.isStarted();
        boolean boolean18 = strSet3.contains((java.lang.Object) multiBackgroundInitializer13);
        java.lang.Class<?> wildcardClass19 = multiBackgroundInitializer13.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException7 = multiBackgroundInitializerResults5.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean10 = multiBackgroundInitializerResultsFuture3.cancel(true);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture3.get((long) (byte) 100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults21.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = multiBackgroundInitializerResults21.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean37 = strSet10.isEmpty();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        boolean boolean40 = multiBackgroundInitializer38.start();
        boolean boolean41 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer38.get();
        boolean boolean43 = strSet10.contains((java.lang.Object) multiBackgroundInitializer38);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        boolean boolean49 = strSet47.isEmpty();
        java.lang.Object[] objArray50 = strSet47.toArray();
        strSet47.clear();
        java.util.stream.Stream<java.lang.String> strStream52 = strSet47.parallelStream();
        java.lang.Class<?> wildcardClass53 = strStream52.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer54 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass55 = multiBackgroundInitializer54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[2];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass53;
        wildcardClassArray58[1] = wildcardClass55;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?>[] wildcardClassArray63 = strSet10.toArray(wildcardClassArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        boolean boolean12 = strSet10.isEmpty();
        java.lang.Object[] objArray13 = strSet10.toArray();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = strSet17.contains(obj19);
        int int21 = strSet17.size();
        java.util.stream.Stream<java.lang.String> strStream22 = strSet17.stream();
        boolean boolean23 = strSet10.addAll((java.util.Collection<java.lang.String>) strSet17);
        java.util.stream.Stream<java.lang.String> strStream24 = strSet17.parallelStream();
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        boolean boolean30 = strSet28.isEmpty();
        java.lang.Object[] objArray31 = strSet28.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator32 = strSet28.spliterator();
        strSet28.clear();
        boolean boolean34 = strSet17.removeAll((java.util.Collection<java.lang.String>) strSet28);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = strSet5.addAll((java.util.Collection<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService11);
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer12.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.start();
        boolean boolean17 = multiBackgroundInitializer15.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer15.get();
        boolean boolean19 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer12.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = strSet5.remove((java.lang.Object) executorService21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService21);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        boolean boolean14 = strSet12.isEmpty();
        java.lang.Object[] objArray15 = strSet12.toArray();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = strSet19.contains(obj21);
        int int23 = strSet19.size();
        java.util.stream.Stream<java.lang.String> strStream24 = strSet19.stream();
        boolean boolean25 = strSet12.addAll((java.util.Collection<java.lang.String>) strSet19);
        java.util.stream.Stream<java.lang.String> strStream26 = strSet19.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        boolean boolean33 = multiBackgroundInitializer31.start();
        boolean boolean34 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer31.get();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults35.initializerNames();
        boolean boolean37 = strSet29.removeAll((java.util.Collection<java.lang.String>) strSet36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.start();
        boolean boolean40 = multiBackgroundInitializer38.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer38.get();
        java.util.Set<java.lang.String> strSet42 = multiBackgroundInitializerResults41.initializerNames();
        boolean boolean43 = strSet29.retainAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.Iterator<java.lang.String> strItor44 = strSet42.iterator();
        boolean boolean45 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean46 = strSet19.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator47 = strSet19.spliterator();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        boolean boolean55 = multiBackgroundInitializer52.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer52.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet50.removeAll((java.util.Collection<java.lang.String>) strSet57);
        java.util.stream.Stream<java.lang.String> strStream59 = strSet50.stream();
        boolean boolean60 = strSet19.containsAll((java.util.Collection<java.lang.String>) strSet50);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = strSet5.addAll((java.util.Collection<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture4.get((long) (short) 100, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = strSet60.contains(obj62);
        int int64 = strSet60.size();
        java.util.stream.Stream<java.lang.String> strStream65 = strSet60.stream();
        boolean boolean66 = strSet60.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = strSet33.removeAll((java.util.Collection<java.lang.String>) strSet60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = strSet11.contains(obj13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        boolean boolean25 = strSet17.removeAll((java.util.Collection<java.lang.String>) strSet24);
        boolean boolean26 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet24);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        boolean boolean33 = multiBackgroundInitializer31.start();
        boolean boolean34 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer31.get();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults35.initializerNames();
        boolean boolean37 = strSet29.removeAll((java.util.Collection<java.lang.String>) strSet36);
        java.util.stream.Stream<java.lang.String> strStream38 = strSet29.stream();
        boolean boolean39 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet29);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        boolean boolean45 = strSet43.isEmpty();
        java.lang.Object[] objArray46 = strSet43.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator47 = strSet43.spliterator();
        strSet43.clear();
        int int49 = strSet43.size();
        boolean boolean50 = strSet11.addAll((java.util.Collection<java.lang.String>) strSet43);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strSet43.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = strSet7.removeAll((java.util.Collection<java.lang.String>) strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSpliterator51);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService8);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer9.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.start();
        boolean boolean14 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer12.get();
        boolean boolean16 = multiBackgroundInitializer12.start();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        boolean boolean18 = multiBackgroundInitializer12.isStarted();
        boolean boolean19 = multiBackgroundInitializer12.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.lang.Class<?> wildcardClass7 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet24.stream();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strSet24.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean31 = strSet15.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean33 = strSet15.add("");
        boolean boolean34 = strSet3.contains((java.lang.Object) "");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        boolean boolean45 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet44);
        java.util.stream.Stream<java.lang.String> strStream46 = strSet37.stream();
        java.util.Iterator<java.lang.String> strItor47 = strSet37.iterator();
        strSet37.clear();
        boolean boolean49 = strSet3.equals((java.lang.Object) strSet37);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = strSet53.contains(obj55);
        java.lang.Object obj57 = null;
        boolean boolean58 = strSet53.equals(obj57);
        boolean boolean60 = strSet53.add("");
        java.util.Spliterator<java.lang.String> strSpliterator61 = strSet53.spliterator();
        java.lang.String[] strArray64 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet65 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet65, strArray64);
        boolean boolean67 = strSet65.isEmpty();
        java.lang.Object[] objArray68 = strSet65.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer69 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean70 = multiBackgroundInitializer69.isStarted();
        boolean boolean71 = multiBackgroundInitializer69.start();
        boolean boolean72 = multiBackgroundInitializer69.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults73 = multiBackgroundInitializer69.get();
        java.util.Set<java.lang.String> strSet74 = multiBackgroundInitializerResults73.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream75 = strSet74.stream();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        boolean boolean80 = strSet74.containsAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean81 = strSet65.containsAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean83 = strSet65.add("");
        boolean boolean84 = strSet53.contains((java.lang.Object) "");
        java.util.Iterator<java.lang.String> strItor85 = strSet53.iterator();
        java.lang.Cloneable[] cloneableArray86 = new java.lang.Cloneable[] { strSet53 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Cloneable[] cloneableArray87 = strSet3.toArray(cloneableArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults73);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertNotNull(cloneableArray86);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults8.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults8.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults3.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        java.util.Spliterator<java.lang.String> strSpliterator9 = strSet3.spliterator();
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        boolean boolean15 = strSet13.isEmpty();
        java.lang.Object[] objArray16 = strSet13.toArray();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = strSet20.contains(obj22);
        int int24 = strSet20.size();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet20.stream();
        boolean boolean26 = strSet13.addAll((java.util.Collection<java.lang.String>) strSet20);
        boolean boolean27 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet20);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        boolean boolean33 = strSet31.isEmpty();
        java.lang.Object[] objArray34 = strSet31.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator35 = strSet31.spliterator();
        strSet31.clear();
        java.util.Collection[] collectionArray38 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray39 = (java.util.Collection<java.lang.String>[]) collectionArray38;
        java.util.Collection<java.lang.String>[] strCollectionArray40 = strSet31.toArray((java.util.Collection<java.lang.String>[]) collectionArray38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        boolean boolean45 = multiBackgroundInitializer41.isStarted();
        boolean boolean46 = strSet31.contains((java.lang.Object) multiBackgroundInitializer41);
        boolean boolean47 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet31);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        boolean boolean55 = multiBackgroundInitializer52.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer52.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet50.removeAll((java.util.Collection<java.lang.String>) strSet57);
        java.util.stream.Stream<java.lang.String> strStream59 = strSet50.stream();
        boolean boolean61 = strSet50.contains((java.lang.Object) (short) 0);
        boolean boolean62 = strSet3.contains((java.lang.Object) strSet50);
        java.lang.Class<?> wildcardClass63 = strSet50.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertNotNull(collectionArray38);
        org.junit.Assert.assertNotNull(strCollectionArray39);
        org.junit.Assert.assertNotNull(strCollectionArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        boolean boolean16 = strSet14.isEmpty();
        java.lang.Object[] objArray17 = strSet14.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator18 = strSet14.spliterator();
        strSet14.clear();
        java.util.Collection[] collectionArray21 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray22 = (java.util.Collection<java.lang.String>[]) collectionArray21;
        java.util.Collection<java.lang.String>[] strCollectionArray23 = strSet14.toArray((java.util.Collection<java.lang.String>[]) collectionArray21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        boolean boolean26 = multiBackgroundInitializer24.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer24.get();
        boolean boolean28 = multiBackgroundInitializer24.isStarted();
        boolean boolean29 = strSet14.contains((java.lang.Object) multiBackgroundInitializer24);
        boolean boolean30 = multiBackgroundInitializer24.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator18);
        org.junit.Assert.assertNotNull(collectionArray21);
        org.junit.Assert.assertNotNull(strCollectionArray22);
        org.junit.Assert.assertNotNull(strCollectionArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture3.get((long) 10, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = executorService2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(executorService2);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        boolean boolean17 = multiBackgroundInitializer15.start();
        boolean boolean18 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer15.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream21 = strSet20.stream();
        boolean boolean22 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = strSet26.contains(obj28);
        int int30 = strSet26.size();
        boolean boolean31 = strSet11.retainAll((java.util.Collection<java.lang.String>) strSet26);
        strSet11.clear();
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService33);
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer34.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer34.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer34.getFuture();
        boolean boolean38 = strSet11.remove((java.lang.Object) multiBackgroundInitializerResultsFuture37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.start();
        boolean boolean41 = multiBackgroundInitializer39.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer39.get();
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer39.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer39.get();
        boolean boolean45 = strSet11.remove((java.lang.Object) multiBackgroundInitializer39);
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNull(executorService43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults21.initializerNames();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = strSet24.remove((java.lang.Object) multiBackgroundInitializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        boolean boolean29 = strSet27.isEmpty();
        java.lang.Object[] objArray30 = strSet27.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        boolean boolean33 = multiBackgroundInitializer31.start();
        boolean boolean34 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer31.get();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults35.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream37 = strSet36.stream();
        boolean boolean38 = strSet27.containsAll((java.util.Collection<java.lang.String>) strSet36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = strSet42.contains(obj44);
        int int46 = strSet42.size();
        boolean boolean47 = strSet27.retainAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean48 = strSet18.containsAll((java.util.Collection<java.lang.String>) strSet27);
        boolean boolean50 = strSet27.add("hi!");
        java.lang.String[] strArray53 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        boolean boolean56 = strSet54.isEmpty();
        java.lang.Object[] objArray57 = strSet54.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer58 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean59 = multiBackgroundInitializer58.isStarted();
        boolean boolean60 = multiBackgroundInitializer58.start();
        boolean boolean61 = multiBackgroundInitializer58.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer58.get();
        java.util.Set<java.lang.String> strSet63 = multiBackgroundInitializerResults62.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream64 = strSet63.stream();
        boolean boolean65 = strSet54.containsAll((java.util.Collection<java.lang.String>) strSet63);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = strSet69.contains(obj71);
        int int73 = strSet69.size();
        boolean boolean74 = strSet54.retainAll((java.util.Collection<java.lang.String>) strSet69);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer75 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean76 = multiBackgroundInitializer75.isStarted();
        boolean boolean77 = multiBackgroundInitializer75.start();
        boolean boolean78 = multiBackgroundInitializer75.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults79 = multiBackgroundInitializer75.get();
        java.util.Set<java.lang.String> strSet80 = multiBackgroundInitializerResults79.initializerNames();
        java.util.Iterator<java.lang.String> strItor81 = strSet80.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator82 = strSet80.spliterator();
        boolean boolean83 = strSet69.removeAll((java.util.Collection<java.lang.String>) strSet80);
        boolean boolean84 = strSet27.equals((java.lang.Object) strSet69);
        java.util.Spliterator<java.lang.String> strSpliterator85 = strSet27.spliterator();
        java.util.stream.Stream<java.lang.String> strStream86 = strSet27.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strSpliterator85);
        org.junit.Assert.assertNotNull(strStream86);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture6.get((long) 'a', timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        boolean boolean36 = multiBackgroundInitializer32.start();
        boolean boolean37 = multiBackgroundInitializer32.isStarted();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer32.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer32.getFuture();
        boolean boolean40 = strSet21.remove((java.lang.Object) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer41.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializerResultsFuture44.get();
        java.util.Set<java.lang.String> strSet46 = multiBackgroundInitializerResults45.initializerNames();
        java.lang.Object[] objArray47 = strSet46.toArray();
        int int48 = strSet46.size();
        boolean boolean49 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet46);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = strSet46.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer13 = multiBackgroundInitializerResults11.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer4.getFuture();
        boolean boolean8 = multiBackgroundInitializer4.start();
        boolean boolean9 = multiBackgroundInitializer4.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer4.getFuture();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get(100L, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException9 = multiBackgroundInitializerResults7.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = multiBackgroundInitializerResults11.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.lang.Class<?> wildcardClass9 = multiBackgroundInitializerResults8.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get(0L, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        boolean boolean37 = strSet35.isEmpty();
        java.lang.Object[] objArray38 = strSet35.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strSet35.spliterator();
        strSet35.clear();
        int int41 = strSet35.size();
        boolean boolean42 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet35);
        java.lang.Class<?> wildcardClass43 = strSet35.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isDone();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture4.get((long) 10, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        boolean boolean55 = multiBackgroundInitializer52.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer52.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet21.equals((java.lang.Object) strSet57);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer59 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean60 = multiBackgroundInitializer59.start();
        java.util.concurrent.ExecutorService executorService61 = multiBackgroundInitializer59.getExternalExecutor();
        boolean boolean62 = strSet57.contains((java.lang.Object) multiBackgroundInitializer59);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults63 = multiBackgroundInitializer59.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = multiBackgroundInitializerResults63.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(executorService61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults63);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer13.get();
        boolean boolean17 = multiBackgroundInitializer13.isStarted();
        boolean boolean18 = strSet3.contains((java.lang.Object) multiBackgroundInitializer13);
        boolean boolean19 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer13.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = multiBackgroundInitializerResults20.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        boolean boolean26 = multiBackgroundInitializer24.start();
        boolean boolean27 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer24.get();
        java.util.Set<java.lang.String> strSet29 = multiBackgroundInitializerResults28.initializerNames();
        java.util.Iterator<java.lang.String> strItor30 = strSet29.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator31 = strSet29.spliterator();
        boolean boolean32 = strSet18.removeAll((java.util.Collection<java.lang.String>) strSet29);
        int int33 = strSet29.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = strSet29.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get(100L, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isDone();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture4.get(100L, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer7.getFuture();
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture12.get((long) 100, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults7.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet11.spliterator();
        strSet11.clear();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        boolean boolean23 = multiBackgroundInitializer21.start();
        boolean boolean24 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer21.get();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults25.initializerNames();
        boolean boolean27 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet26);
        java.util.stream.Stream<java.lang.String> strStream28 = strSet19.stream();
        java.lang.Class<?> wildcardClass29 = strStream28.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass31 = multiBackgroundInitializer30.getClass();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        boolean boolean38 = multiBackgroundInitializer36.start();
        boolean boolean39 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults40.initializerNames();
        boolean boolean42 = strSet34.removeAll((java.util.Collection<java.lang.String>) strSet41);
        java.util.stream.Stream<java.lang.String> strStream43 = strSet34.stream();
        java.lang.Class<?> wildcardClass44 = strStream43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass44 };
        java.lang.reflect.Type[] typeArray46 = strSet11.toArray(typeArray45);
        boolean boolean47 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer48.getExternalExecutor();
        boolean boolean51 = multiBackgroundInitializer48.isStarted();
        boolean boolean52 = strSet11.remove((java.lang.Object) boolean51);
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer54 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService53);
        java.util.concurrent.ExecutorService executorService55 = multiBackgroundInitializer54.getExternalExecutor();
        boolean boolean56 = multiBackgroundInitializer54.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer54.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer54.get();
        boolean boolean59 = strSet11.contains((java.lang.Object) multiBackgroundInitializer54);
        java.util.concurrent.ExecutorService executorService60 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer54.setExternalExecutor(executorService60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(executorService55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean52 = strSet35.isEmpty();
        int int53 = strSet35.size();
        java.lang.String[] strArray56 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        boolean boolean59 = strSet57.isEmpty();
        java.lang.Object[] objArray60 = strSet57.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream67 = strSet66.stream();
        boolean boolean68 = strSet57.containsAll((java.util.Collection<java.lang.String>) strSet66);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = strSet72.contains(obj74);
        int int76 = strSet72.size();
        boolean boolean77 = strSet57.retainAll((java.util.Collection<java.lang.String>) strSet72);
        boolean boolean79 = strSet72.remove((java.lang.Object) 0L);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        java.lang.Object obj85 = null;
        boolean boolean86 = strSet83.contains(obj85);
        java.lang.Object obj87 = null;
        boolean boolean88 = strSet83.equals(obj87);
        boolean boolean89 = strSet72.equals((java.lang.Object) boolean88);
        boolean boolean90 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet72);
        java.util.Spliterator<java.lang.String> strSpliterator91 = strSet72.spliterator();
        java.util.Collection[][] collectionArray93 = new java.util.Collection[0][];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[][] strCollectionArray94 = (java.util.Collection<java.lang.String>[][]) collectionArray93;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.String>[][] strCollectionArray95 = strSet72.toArray(strCollectionArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strSpliterator91);
        org.junit.Assert.assertNotNull(collectionArray93);
        org.junit.Assert.assertNotNull(strCollectionArray94);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture5.get();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture5.get(0L, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializerResultsFuture29.get();
        java.util.concurrent.TimeUnit timeUnit33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializerResultsFuture29.get((long) (short) 0, timeUnit33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = multiBackgroundInitializerResults21.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean52 = strSet35.isEmpty();
        int int53 = strSet35.size();
        java.lang.String[] strArray56 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        boolean boolean59 = strSet57.isEmpty();
        java.lang.Object[] objArray60 = strSet57.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream67 = strSet66.stream();
        boolean boolean68 = strSet57.containsAll((java.util.Collection<java.lang.String>) strSet66);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = strSet72.contains(obj74);
        int int76 = strSet72.size();
        boolean boolean77 = strSet57.retainAll((java.util.Collection<java.lang.String>) strSet72);
        boolean boolean79 = strSet72.remove((java.lang.Object) 0L);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        java.lang.Object obj85 = null;
        boolean boolean86 = strSet83.contains(obj85);
        java.lang.Object obj87 = null;
        boolean boolean88 = strSet83.equals(obj87);
        boolean boolean89 = strSet72.equals((java.lang.Object) boolean88);
        boolean boolean90 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet72);
        boolean boolean91 = strSet35.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsBackgroundInitializer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", multiBackgroundInitializerResultsBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Child initializer must not be null!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(true);
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture4.get((long) (byte) 10, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer8 = multiBackgroundInitializerResults5.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture5.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults3.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        boolean boolean24 = strSet22.isEmpty();
        java.lang.Object[] objArray25 = strSet22.toArray();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = strSet29.contains(obj31);
        int int33 = strSet29.size();
        java.util.stream.Stream<java.lang.String> strStream34 = strSet29.stream();
        boolean boolean35 = strSet22.addAll((java.util.Collection<java.lang.String>) strSet29);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        boolean boolean42 = multiBackgroundInitializer40.start();
        boolean boolean43 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer40.get();
        java.util.Set<java.lang.String> strSet45 = multiBackgroundInitializerResults44.initializerNames();
        boolean boolean46 = strSet38.removeAll((java.util.Collection<java.lang.String>) strSet45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer47 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean48 = multiBackgroundInitializer47.start();
        boolean boolean49 = multiBackgroundInitializer47.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults50 = multiBackgroundInitializer47.get();
        java.util.Set<java.lang.String> strSet51 = multiBackgroundInitializerResults50.initializerNames();
        boolean boolean52 = strSet38.retainAll((java.util.Collection<java.lang.String>) strSet51);
        int int53 = strSet51.size();
        boolean boolean54 = strSet22.equals((java.lang.Object) int53);
        java.util.stream.Stream<java.lang.String> strStream55 = strSet22.parallelStream();
        boolean boolean56 = strSet15.contains((java.lang.Object) strStream55);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strSet15.spliterator();
        boolean boolean58 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet15);
        strSet15.clear();
        java.lang.String[] strArray62 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        boolean boolean65 = strSet63.isEmpty();
        java.lang.Object[] objArray66 = strSet63.toArray();
        strSet63.clear();
        java.util.stream.Stream<java.lang.String> strStream68 = strSet63.parallelStream();
        java.util.Iterator<java.lang.String> strItor69 = strSet63.iterator();
        boolean boolean71 = strSet63.remove((java.lang.Object) 1);
        java.lang.Object[] objArray72 = strSet63.toArray();
        int int73 = strSet63.size();
        boolean boolean74 = strSet15.addAll((java.util.Collection<java.lang.String>) strSet63);
        boolean boolean76 = strSet63.add("hi!");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.start();
        boolean boolean10 = multiBackgroundInitializer8.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer8.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        strSet3.clear();
        java.util.stream.Stream<java.lang.String> strStream8 = strSet3.parallelStream();
        java.util.Iterator<java.lang.String> strItor9 = strSet3.iterator();
        boolean boolean11 = strSet3.remove((java.lang.Object) 1);
        java.lang.Object[] objArray12 = strSet3.toArray();
        int int13 = strSet3.size();
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        boolean boolean19 = strSet17.isEmpty();
        java.lang.Object[] objArray20 = strSet17.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strSet17.spliterator();
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        boolean boolean27 = strSet25.isEmpty();
        java.lang.Object[] objArray28 = strSet25.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator29 = strSet25.spliterator();
        strSet25.clear();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        boolean boolean37 = multiBackgroundInitializer35.start();
        boolean boolean38 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer35.get();
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults39.initializerNames();
        boolean boolean41 = strSet33.removeAll((java.util.Collection<java.lang.String>) strSet40);
        java.util.stream.Stream<java.lang.String> strStream42 = strSet33.stream();
        java.lang.Class<?> wildcardClass43 = strStream42.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass45 = multiBackgroundInitializer44.getClass();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer50 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean51 = multiBackgroundInitializer50.isStarted();
        boolean boolean52 = multiBackgroundInitializer50.start();
        boolean boolean53 = multiBackgroundInitializer50.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer50.get();
        java.util.Set<java.lang.String> strSet55 = multiBackgroundInitializerResults54.initializerNames();
        boolean boolean56 = strSet48.removeAll((java.util.Collection<java.lang.String>) strSet55);
        java.util.stream.Stream<java.lang.String> strStream57 = strSet48.stream();
        java.lang.Class<?> wildcardClass58 = strStream57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass58 };
        java.lang.reflect.Type[] typeArray60 = strSet25.toArray(typeArray59);
        boolean boolean61 = strSet17.containsAll((java.util.Collection<java.lang.String>) strSet25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer62 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean63 = multiBackgroundInitializer62.isStarted();
        java.util.concurrent.ExecutorService executorService64 = multiBackgroundInitializer62.getExternalExecutor();
        boolean boolean65 = multiBackgroundInitializer62.isStarted();
        boolean boolean66 = strSet25.remove((java.lang.Object) boolean65);
        java.lang.Object[] objArray67 = strSet25.toArray();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer72 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean73 = multiBackgroundInitializer72.isStarted();
        boolean boolean74 = multiBackgroundInitializer72.start();
        boolean boolean75 = multiBackgroundInitializer72.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults76 = multiBackgroundInitializer72.get();
        java.util.Set<java.lang.String> strSet77 = multiBackgroundInitializerResults76.initializerNames();
        boolean boolean78 = strSet70.removeAll((java.util.Collection<java.lang.String>) strSet77);
        java.util.stream.Stream<java.lang.String> strStream79 = strSet70.stream();
        java.util.Iterator<java.lang.String> strItor80 = strSet70.iterator();
        boolean boolean81 = strSet25.addAll((java.util.Collection<java.lang.String>) strSet70);
        boolean boolean82 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet25);
        java.util.stream.Stream<java.lang.String> strStream83 = strSet3.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strItor9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(executorService64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strStream83);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer5 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean6 = multiBackgroundInitializer5.isStarted();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer5.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer5.isStarted();
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer5.setExternalExecutor(executorService9);
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        int int24 = strSet3.size();
        int int25 = strSet3.size();
        java.lang.Class<?> wildcardClass26 = strSet3.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer4.get();
        boolean boolean8 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer1.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults4.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean37 = strSet10.isEmpty();
        java.util.Iterator<java.lang.String> strItor38 = strSet10.iterator();
        java.util.stream.Stream<java.lang.String> strStream39 = strSet10.parallelStream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strStream39);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException7 = multiBackgroundInitializerResults5.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        // The following exception was thrown during execution in test generation
        try {
            strSet5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executorService7);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture3.cancel(true);
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture3.isCancelled();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture6.cancel(false);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture6.get((long) 100, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream5 = strSet4.parallelStream();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.isStarted();
        boolean boolean8 = multiBackgroundInitializer6.start();
        boolean boolean9 = multiBackgroundInitializer6.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer6.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults10.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = strSet4.retainAll((java.util.Collection<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        boolean boolean31 = strSet3.isEmpty();
        java.lang.Class<?> wildcardClass32 = strSet3.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults8.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.start();
        boolean boolean8 = multiBackgroundInitializer6.start();
        boolean boolean9 = multiBackgroundInitializer6.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer6.getFuture();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer6.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNull(executorService11);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsBackgroundInitializer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", multiBackgroundInitializerResultsBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Child initializer must not be null!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertNull(executorService3);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        boolean boolean12 = strSet10.isEmpty();
        java.lang.Object[] objArray13 = strSet10.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        boolean boolean16 = multiBackgroundInitializer14.start();
        boolean boolean17 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer14.get();
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults18.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream20 = strSet19.stream();
        boolean boolean21 = strSet10.containsAll((java.util.Collection<java.lang.String>) strSet19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = strSet25.contains(obj27);
        int int29 = strSet25.size();
        boolean boolean30 = strSet10.retainAll((java.util.Collection<java.lang.String>) strSet25);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        boolean boolean36 = strSet34.isEmpty();
        java.lang.Object[] objArray37 = strSet34.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        boolean boolean40 = multiBackgroundInitializer38.start();
        boolean boolean41 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer38.get();
        java.util.Set<java.lang.String> strSet43 = multiBackgroundInitializerResults42.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream44 = strSet43.stream();
        boolean boolean45 = strSet34.containsAll((java.util.Collection<java.lang.String>) strSet43);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = strSet49.contains(obj51);
        int int53 = strSet49.size();
        boolean boolean54 = strSet34.retainAll((java.util.Collection<java.lang.String>) strSet49);
        boolean boolean55 = strSet25.containsAll((java.util.Collection<java.lang.String>) strSet34);
        boolean boolean57 = strSet34.add("hi!");
        java.util.Iterator<java.lang.String> strItor58 = strSet34.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = strSet6.remove((java.lang.Object) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = multiBackgroundInitializerResults5.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = strSet33.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean10 = multiBackgroundInitializerResultsFuture3.cancel(false);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture3.get((long) (short) 1, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults8.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException11 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults21.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = multiBackgroundInitializerResults21.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer4.get();
        boolean boolean8 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer1.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer1.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer1.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer1.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer1.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNull(executorService12);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults7.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.start();
        boolean boolean11 = multiBackgroundInitializer7.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults5.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults5.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        boolean boolean17 = strSet15.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream18 = strSet15.stream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.util.Iterator<java.lang.String> strItor19 = strSet3.iterator();
        java.lang.Class<?> wildcardClass20 = strItor19.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService2);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet24.stream();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strSet24.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean31 = strSet15.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean33 = strSet15.add("");
        boolean boolean34 = strSet3.contains((java.lang.Object) "");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        boolean boolean45 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet44);
        java.util.stream.Stream<java.lang.String> strStream46 = strSet37.stream();
        java.util.Iterator<java.lang.String> strItor47 = strSet37.iterator();
        strSet37.clear();
        boolean boolean49 = strSet3.equals((java.lang.Object) strSet37);
        java.util.stream.Stream<java.lang.String> strStream50 = strSet37.stream();
        java.lang.Class<?> wildcardClass51 = strStream50.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.lang.Class<?> wildcardClass8 = multiBackgroundInitializerResults7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService4 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService4);
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        boolean boolean24 = strSet22.isEmpty();
        java.lang.Object[] objArray25 = strSet22.toArray();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = strSet29.contains(obj31);
        int int33 = strSet29.size();
        java.util.stream.Stream<java.lang.String> strStream34 = strSet29.stream();
        boolean boolean35 = strSet22.addAll((java.util.Collection<java.lang.String>) strSet29);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        boolean boolean42 = multiBackgroundInitializer40.start();
        boolean boolean43 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer40.get();
        java.util.Set<java.lang.String> strSet45 = multiBackgroundInitializerResults44.initializerNames();
        boolean boolean46 = strSet38.removeAll((java.util.Collection<java.lang.String>) strSet45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer47 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean48 = multiBackgroundInitializer47.start();
        boolean boolean49 = multiBackgroundInitializer47.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults50 = multiBackgroundInitializer47.get();
        java.util.Set<java.lang.String> strSet51 = multiBackgroundInitializerResults50.initializerNames();
        boolean boolean52 = strSet38.retainAll((java.util.Collection<java.lang.String>) strSet51);
        int int53 = strSet51.size();
        boolean boolean54 = strSet22.equals((java.lang.Object) int53);
        java.util.stream.Stream<java.lang.String> strStream55 = strSet22.parallelStream();
        boolean boolean56 = strSet15.contains((java.lang.Object) strStream55);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strSet15.spliterator();
        boolean boolean58 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet15);
        strSet15.clear();
        java.lang.String[] strArray62 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        boolean boolean65 = strSet63.isEmpty();
        java.lang.Object[] objArray66 = strSet63.toArray();
        strSet63.clear();
        java.util.stream.Stream<java.lang.String> strStream68 = strSet63.parallelStream();
        java.util.Iterator<java.lang.String> strItor69 = strSet63.iterator();
        boolean boolean71 = strSet63.remove((java.lang.Object) 1);
        java.lang.Object[] objArray72 = strSet63.toArray();
        int int73 = strSet63.size();
        boolean boolean74 = strSet15.addAll((java.util.Collection<java.lang.String>) strSet63);
        int int75 = strSet15.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults5.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.start();
        boolean boolean11 = multiBackgroundInitializer9.start();
        boolean boolean12 = multiBackgroundInitializer9.start();
        boolean boolean13 = multiBackgroundInitializer9.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer9.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        java.lang.Class<?> wildcardClass37 = strSet33.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        boolean boolean22 = strSet20.isEmpty();
        java.lang.Object[] objArray23 = strSet20.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strSet20.spliterator();
        strSet20.clear();
        java.util.Collection[] collectionArray27 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray28 = (java.util.Collection<java.lang.String>[]) collectionArray27;
        java.util.Collection<java.lang.String>[] strCollectionArray29 = strSet20.toArray((java.util.Collection<java.lang.String>[]) collectionArray27);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = strSet33.contains(obj35);
        boolean boolean37 = strSet20.remove(obj35);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = strSet41.contains(obj43);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        boolean boolean51 = multiBackgroundInitializer49.start();
        boolean boolean52 = multiBackgroundInitializer49.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults53 = multiBackgroundInitializer49.get();
        java.util.Set<java.lang.String> strSet54 = multiBackgroundInitializerResults53.initializerNames();
        boolean boolean55 = strSet47.removeAll((java.util.Collection<java.lang.String>) strSet54);
        boolean boolean56 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet54);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        boolean boolean67 = strSet59.removeAll((java.util.Collection<java.lang.String>) strSet66);
        java.util.stream.Stream<java.lang.String> strStream68 = strSet59.stream();
        boolean boolean69 = strSet41.containsAll((java.util.Collection<java.lang.String>) strSet59);
        java.util.stream.Stream<java.lang.String> strStream70 = strSet59.parallelStream();
        boolean boolean71 = strSet20.addAll((java.util.Collection<java.lang.String>) strSet59);
        boolean boolean73 = strSet20.add("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = strSet15.retainAll((java.util.Collection<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertNotNull(collectionArray27);
        org.junit.Assert.assertNotNull(strCollectionArray28);
        org.junit.Assert.assertNotNull(strCollectionArray29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService4 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService4);
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.lang.Class<?> wildcardClass7 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        java.util.stream.Stream<java.lang.String> strStream9 = strSet5.stream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = strSet5.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strStream9);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException9 = multiBackgroundInitializerResults7.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        boolean boolean4 = strSet2.isEmpty();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray9 = strSet2.toArray(charSequenceArray8);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = strSet13.contains(obj15);
        java.lang.Object obj17 = null;
        boolean boolean18 = strSet13.equals(obj17);
        boolean boolean20 = strSet13.add("");
        java.util.Spliterator<java.lang.String> strSpliterator21 = strSet13.spliterator();
        boolean boolean22 = strSet2.addAll((java.util.Collection<java.lang.String>) strSet13);
        java.lang.Object[] objArray23 = strSet2.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[, hi!]");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture3.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream5 = strList2.parallelStream();
        java.lang.Class<?> wildcardClass6 = strList2.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            strSet6.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer8 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        java.util.concurrent.ExecutorService executorService11 = null;
        multiBackgroundInitializer9.setExternalExecutor(executorService11);
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer9.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer9.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer9.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer57 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean58 = multiBackgroundInitializer57.isStarted();
        boolean boolean59 = multiBackgroundInitializer57.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults60 = multiBackgroundInitializer57.get();
        boolean boolean61 = multiBackgroundInitializer57.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer57.get();
        boolean boolean63 = strSet33.contains((java.lang.Object) multiBackgroundInitializerResults62);
        boolean boolean64 = multiBackgroundInitializerResults62.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer66 = multiBackgroundInitializerResults62.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet5.spliterator();
        int int8 = strSet5.size();
        java.util.stream.Stream<java.lang.String> strStream9 = strSet5.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = strSet5.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strStream9);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = multiBackgroundInitializerResults3.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults5.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer1.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = multiBackgroundInitializerResults7.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults5.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        boolean boolean2 = multiBackgroundInitializer1.isStarted();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.lang.Class<?> wildcardClass7 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture8.get((long) (short) 1, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException7 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer25 = multiBackgroundInitializerResults21.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService8);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer9.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer9.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer9.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer9.get();
        boolean boolean14 = multiBackgroundInitializer9.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        boolean boolean6 = multiBackgroundInitializer1.start();
        boolean boolean7 = multiBackgroundInitializer1.start();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.start();
        boolean boolean11 = multiBackgroundInitializer7.isStarted();
        boolean boolean12 = multiBackgroundInitializer7.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer7.get();
        boolean boolean14 = multiBackgroundInitializer7.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get(10L, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.Iterator<java.lang.String> strItor12 = strSet2.iterator();
        java.util.Iterator<java.lang.String> strItor13 = strSet2.iterator();
        boolean boolean15 = strSet2.add("");
        java.lang.Class<?> wildcardClass16 = strSet2.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture3.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture3.isCancelled();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture3.get((long) 2, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture6.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture6.get();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture6.get(0L, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet11.spliterator();
        strSet11.clear();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        boolean boolean23 = multiBackgroundInitializer21.start();
        boolean boolean24 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer21.get();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults25.initializerNames();
        boolean boolean27 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet26);
        java.util.stream.Stream<java.lang.String> strStream28 = strSet19.stream();
        java.lang.Class<?> wildcardClass29 = strStream28.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass31 = multiBackgroundInitializer30.getClass();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        boolean boolean38 = multiBackgroundInitializer36.start();
        boolean boolean39 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults40.initializerNames();
        boolean boolean42 = strSet34.removeAll((java.util.Collection<java.lang.String>) strSet41);
        java.util.stream.Stream<java.lang.String> strStream43 = strSet34.stream();
        java.lang.Class<?> wildcardClass44 = strStream43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass44 };
        java.lang.reflect.Type[] typeArray46 = strSet11.toArray(typeArray45);
        boolean boolean47 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer48.getExternalExecutor();
        boolean boolean51 = multiBackgroundInitializer48.isStarted();
        boolean boolean52 = strSet11.remove((java.lang.Object) boolean51);
        java.lang.Object[] objArray53 = strSet11.toArray();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer58 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean59 = multiBackgroundInitializer58.isStarted();
        boolean boolean60 = multiBackgroundInitializer58.start();
        boolean boolean61 = multiBackgroundInitializer58.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer58.get();
        java.util.Set<java.lang.String> strSet63 = multiBackgroundInitializerResults62.initializerNames();
        boolean boolean64 = strSet56.removeAll((java.util.Collection<java.lang.String>) strSet63);
        java.util.stream.Stream<java.lang.String> strStream65 = strSet56.stream();
        java.util.Iterator<java.lang.String> strItor66 = strSet56.iterator();
        boolean boolean67 = strSet11.addAll((java.util.Collection<java.lang.String>) strSet56);
        strSet56.clear();
        boolean boolean70 = strSet56.add("");
        java.util.Spliterator<java.lang.String> strSpliterator71 = strSet56.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strSpliterator71);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer57 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean58 = multiBackgroundInitializer57.isStarted();
        boolean boolean59 = multiBackgroundInitializer57.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults60 = multiBackgroundInitializer57.get();
        boolean boolean61 = multiBackgroundInitializer57.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer57.get();
        boolean boolean63 = strSet33.contains((java.lang.Object) multiBackgroundInitializerResults62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer65 = multiBackgroundInitializerResults62.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        boolean boolean12 = strSet2.isEmpty();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        boolean boolean18 = strSet16.isEmpty();
        java.lang.Object[] objArray19 = strSet16.toArray();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = strSet23.contains(obj25);
        int int27 = strSet23.size();
        java.util.stream.Stream<java.lang.String> strStream28 = strSet23.stream();
        boolean boolean29 = strSet16.addAll((java.util.Collection<java.lang.String>) strSet23);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet23.parallelStream();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        boolean boolean37 = multiBackgroundInitializer35.start();
        boolean boolean38 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer35.get();
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults39.initializerNames();
        boolean boolean41 = strSet33.removeAll((java.util.Collection<java.lang.String>) strSet40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.start();
        boolean boolean44 = multiBackgroundInitializer42.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer42.get();
        java.util.Set<java.lang.String> strSet46 = multiBackgroundInitializerResults45.initializerNames();
        boolean boolean47 = strSet33.retainAll((java.util.Collection<java.lang.String>) strSet46);
        java.util.Iterator<java.lang.String> strItor48 = strSet46.iterator();
        boolean boolean49 = strSet23.removeAll((java.util.Collection<java.lang.String>) strSet46);
        boolean boolean50 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet23);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean56 = multiBackgroundInitializer55.isStarted();
        boolean boolean57 = multiBackgroundInitializer55.start();
        boolean boolean58 = multiBackgroundInitializer55.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults59 = multiBackgroundInitializer55.get();
        java.util.Set<java.lang.String> strSet60 = multiBackgroundInitializerResults59.initializerNames();
        boolean boolean61 = strSet53.removeAll((java.util.Collection<java.lang.String>) strSet60);
        java.util.stream.Stream<java.lang.String> strStream62 = strSet53.stream();
        java.util.Iterator<java.lang.String> strItor63 = strSet53.iterator();
        strSet53.clear();
        boolean boolean66 = strSet53.remove((java.lang.Object) 10.0f);
        boolean boolean67 = strSet23.contains((java.lang.Object) boolean66);
        boolean boolean69 = strSet23.remove((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass70 = strSet23.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass8 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults3.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.start();
        boolean boolean11 = multiBackgroundInitializer9.isStarted();
        boolean boolean12 = multiBackgroundInitializer9.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer9.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.util.stream.Stream<java.lang.String> strStream52 = strSet35.parallelStream();
        java.util.Collection<java.lang.String> strCollection53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = strSet35.removeAll(strCollection53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = multiBackgroundInitializerResults3.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture3.cancel(true);
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = multiBackgroundInitializerResults3.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults3.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.contains((java.lang.Object) multiBackgroundInitializerResults21);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = multiBackgroundInitializerResults21.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.isStarted();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        boolean boolean11 = multiBackgroundInitializer7.isStarted();
        boolean boolean12 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer7.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException7 = multiBackgroundInitializerResults3.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        boolean boolean6 = multiBackgroundInitializer1.start();
        java.lang.Class<?> wildcardClass7 = multiBackgroundInitializer1.getClass();
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = multiBackgroundInitializerResults7.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture7.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults8.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        boolean boolean36 = multiBackgroundInitializer32.start();
        boolean boolean37 = multiBackgroundInitializer32.isStarted();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer32.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer32.getFuture();
        boolean boolean40 = strSet21.remove((java.lang.Object) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer41.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializerResultsFuture44.get();
        java.util.Set<java.lang.String> strSet46 = multiBackgroundInitializerResults45.initializerNames();
        java.lang.Object[] objArray47 = strSet46.toArray();
        int int48 = strSet46.size();
        boolean boolean49 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet46);
        strSet21.clear();
        int int51 = strSet21.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults5.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = multiBackgroundInitializerResults7.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults4.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults7.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults7.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        boolean boolean9 = strSet3.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream10 = strSet3.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        boolean boolean17 = multiBackgroundInitializer15.start();
        boolean boolean18 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer15.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        boolean boolean21 = strSet13.removeAll((java.util.Collection<java.lang.String>) strSet20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream28 = strSet27.stream();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strSet27.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean34 = strSet13.addAll((java.util.Collection<java.lang.String>) strList31);
        int int35 = strSet13.size();
        java.util.stream.Stream<java.lang.String> strStream36 = strSet13.stream();
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.Comparable<java.lang.String>[] strComparableArray38 = strSet13.toArray((java.lang.Comparable<java.lang.String>[]) strArray37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer50 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean51 = multiBackgroundInitializer50.isStarted();
        boolean boolean52 = multiBackgroundInitializer50.start();
        boolean boolean53 = multiBackgroundInitializer50.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer50.get();
        java.util.Set<java.lang.String> strSet55 = multiBackgroundInitializerResults54.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream56 = strSet55.stream();
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strSet55.containsAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strSet41.addAll((java.util.Collection<java.lang.String>) strList59);
        int int63 = strSet41.size();
        java.util.stream.Stream<java.lang.String> strStream64 = strSet41.stream();
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.Comparable<java.lang.String>[] strComparableArray66 = strSet41.toArray((java.lang.Comparable<java.lang.String>[]) strArray65);
        java.lang.String[] strArray67 = strSet13.toArray(strArray65);
        java.util.stream.Stream<java.lang.String> strStream68 = strSet13.stream();
        java.util.Set[] setArray70 = new java.util.Set[1];
        @SuppressWarnings("unchecked")
        java.util.Set<java.lang.String>[] strSetArray71 = (java.util.Set<java.lang.String>[]) setArray70;
        strSetArray71[0] = strSet13;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String>[] strSetArray74 = strSet3.toArray(strSetArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strStream10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strComparableArray38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strComparableArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(setArray70);
        org.junit.Assert.assertNotNull(strSetArray71);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults5.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        boolean boolean11 = strSet5.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator19 = strSet15.spliterator();
        strSet15.clear();
        java.util.Collection[] collectionArray22 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray23 = (java.util.Collection<java.lang.String>[]) collectionArray22;
        java.util.Collection<java.lang.String>[] strCollectionArray24 = strSet15.toArray((java.util.Collection<java.lang.String>[]) collectionArray22);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        boolean boolean27 = multiBackgroundInitializer25.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer25.get();
        boolean boolean29 = multiBackgroundInitializer25.isStarted();
        boolean boolean30 = strSet15.contains((java.lang.Object) multiBackgroundInitializer25);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        boolean boolean36 = strSet34.isEmpty();
        java.lang.Object[] objArray37 = strSet34.toArray();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = strSet41.contains(obj43);
        int int45 = strSet41.size();
        java.util.stream.Stream<java.lang.String> strStream46 = strSet41.stream();
        boolean boolean47 = strSet34.addAll((java.util.Collection<java.lang.String>) strSet41);
        boolean boolean49 = strSet41.add("hi!");
        boolean boolean50 = strSet15.removeAll((java.util.Collection<java.lang.String>) strSet41);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = strSet5.retainAll((java.util.Collection<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(collectionArray22);
        org.junit.Assert.assertNotNull(strCollectionArray23);
        org.junit.Assert.assertNotNull(strCollectionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults5.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults5.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService9);
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer7.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.Iterator<java.lang.String> strItor12 = strSet2.iterator();
        strSet2.clear();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        boolean boolean16 = multiBackgroundInitializer14.start();
        boolean boolean17 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer14.get();
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults18.initializerNames();
        java.util.Iterator<java.lang.String> strItor20 = strSet19.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strSet19.spliterator();
        int int22 = strSet19.size();
        java.util.stream.Stream<java.lang.String> strStream23 = strSet19.parallelStream();
        boolean boolean24 = strSet2.containsAll((java.util.Collection<java.lang.String>) strSet19);
        java.lang.Object[] objArray25 = strSet19.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        boolean boolean11 = strSet5.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Class<?> wildcardClass12 = strSet5.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults8.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNull(executorService6);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults7.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream5 = strSet4.parallelStream();
        java.util.Iterator<java.lang.String> strItor6 = strSet4.iterator();
        java.util.Iterator<java.lang.String> strItor7 = strSet4.iterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        java.util.stream.Stream<java.lang.String> strStream23 = strSet18.stream();
        boolean boolean24 = strSet11.addAll((java.util.Collection<java.lang.String>) strSet18);
        java.util.stream.Stream<java.lang.String> strStream25 = strSet18.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        boolean boolean31 = strSet29.isEmpty();
        java.lang.Object[] objArray32 = strSet29.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator33 = strSet29.spliterator();
        strSet29.clear();
        boolean boolean35 = strSet18.removeAll((java.util.Collection<java.lang.String>) strSet29);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        boolean boolean42 = multiBackgroundInitializer40.start();
        boolean boolean43 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer40.get();
        java.util.Set<java.lang.String> strSet45 = multiBackgroundInitializerResults44.initializerNames();
        boolean boolean46 = strSet38.removeAll((java.util.Collection<java.lang.String>) strSet45);
        java.util.stream.Stream<java.lang.String> strStream47 = strSet38.stream();
        java.util.Iterator<java.lang.String> strItor48 = strSet38.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        boolean boolean51 = multiBackgroundInitializer49.start();
        boolean boolean52 = multiBackgroundInitializer49.isStarted();
        boolean boolean53 = multiBackgroundInitializer49.start();
        boolean boolean54 = multiBackgroundInitializer49.isStarted();
        boolean boolean55 = multiBackgroundInitializer49.start();
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer49.getExternalExecutor();
        boolean boolean57 = strSet38.equals((java.lang.Object) executorService56);
        boolean boolean58 = strSet29.removeAll((java.util.Collection<java.lang.String>) strSet38);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = strSet4.removeAll((java.util.Collection<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(strStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults5.initializerNames();
        java.lang.Class<?> wildcardClass7 = strSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService3 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture8.get((long) (short) 100, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        boolean boolean10 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = strSet9.contains(obj11);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        boolean boolean19 = multiBackgroundInitializer17.start();
        boolean boolean20 = multiBackgroundInitializer17.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer17.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        boolean boolean23 = strSet15.removeAll((java.util.Collection<java.lang.String>) strSet22);
        boolean boolean24 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet22);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        boolean boolean31 = multiBackgroundInitializer29.start();
        boolean boolean32 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet34 = multiBackgroundInitializerResults33.initializerNames();
        boolean boolean35 = strSet27.removeAll((java.util.Collection<java.lang.String>) strSet34);
        java.util.stream.Stream<java.lang.String> strStream36 = strSet27.stream();
        boolean boolean37 = strSet9.containsAll((java.util.Collection<java.lang.String>) strSet27);
        int int38 = strSet27.size();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strSet27.spliterator();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        java.util.Iterator<java.lang.String> strItor52 = strSet42.iterator();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "hi!" };
        java.lang.CharSequence[] charSequenceArray56 = strSet42.toArray(charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray57 = strSet27.toArray(charSequenceArray55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = strSet5.addAll((java.util.Collection<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertNotNull(charSequenceArray57);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults7.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture3.isCancelled();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture3.get((long) (short) -1, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService4 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService4);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        boolean boolean26 = multiBackgroundInitializer24.start();
        boolean boolean27 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer24.get();
        java.util.Set<java.lang.String> strSet29 = multiBackgroundInitializerResults28.initializerNames();
        java.util.Iterator<java.lang.String> strItor30 = strSet29.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator31 = strSet29.spliterator();
        boolean boolean32 = strSet18.removeAll((java.util.Collection<java.lang.String>) strSet29);
        int int33 = strSet29.size();
        java.util.Spliterator<java.lang.String> strSpliterator34 = strSet29.spliterator();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        boolean boolean45 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet44);
        java.util.stream.Stream<java.lang.String> strStream46 = strSet37.stream();
        boolean boolean47 = strSet37.isEmpty();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.start();
        boolean boolean50 = multiBackgroundInitializer48.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture51 = multiBackgroundInitializer48.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializerResultsFuture51.get();
        java.util.Set<java.lang.String> strSet53 = multiBackgroundInitializerResults52.initializerNames();
        java.lang.Object[] objArray54 = strSet53.toArray();
        java.lang.Object[] objArray55 = strSet37.toArray(objArray54);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = strSet29.remove((java.lang.Object) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture51);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        boolean boolean55 = multiBackgroundInitializer52.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer52.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet21.equals((java.lang.Object) strSet57);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer59 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean60 = multiBackgroundInitializer59.start();
        java.util.concurrent.ExecutorService executorService61 = multiBackgroundInitializer59.getExternalExecutor();
        boolean boolean62 = strSet57.contains((java.lang.Object) multiBackgroundInitializer59);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults63 = multiBackgroundInitializer59.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer65 = multiBackgroundInitializerResults63.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(executorService61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults63);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        boolean boolean7 = strSet3.isEmpty();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        boolean boolean17 = multiBackgroundInitializer15.start();
        boolean boolean18 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer15.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream21 = strSet20.stream();
        boolean boolean22 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = strSet26.contains(obj28);
        int int30 = strSet26.size();
        boolean boolean31 = strSet11.retainAll((java.util.Collection<java.lang.String>) strSet26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        java.util.Iterator<java.lang.String> strItor38 = strSet37.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strSet37.spliterator();
        boolean boolean40 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet37);
        int int41 = strSet37.size();
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        boolean boolean47 = strSet45.isEmpty();
        java.lang.Object[] objArray48 = strSet45.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        boolean boolean51 = multiBackgroundInitializer49.start();
        boolean boolean52 = multiBackgroundInitializer49.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults53 = multiBackgroundInitializer49.get();
        java.util.Set<java.lang.String> strSet54 = multiBackgroundInitializerResults53.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream55 = strSet54.stream();
        boolean boolean56 = strSet45.containsAll((java.util.Collection<java.lang.String>) strSet54);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = strSet60.contains(obj62);
        int int64 = strSet60.size();
        boolean boolean65 = strSet45.retainAll((java.util.Collection<java.lang.String>) strSet60);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        boolean boolean71 = strSet69.isEmpty();
        java.lang.Object[] objArray72 = strSet69.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer73 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean74 = multiBackgroundInitializer73.isStarted();
        boolean boolean75 = multiBackgroundInitializer73.start();
        boolean boolean76 = multiBackgroundInitializer73.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults77 = multiBackgroundInitializer73.get();
        java.util.Set<java.lang.String> strSet78 = multiBackgroundInitializerResults77.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream79 = strSet78.stream();
        boolean boolean80 = strSet69.containsAll((java.util.Collection<java.lang.String>) strSet78);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet84 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet84, strArray83);
        java.lang.Object obj86 = null;
        boolean boolean87 = strSet84.contains(obj86);
        int int88 = strSet84.size();
        boolean boolean89 = strSet69.retainAll((java.util.Collection<java.lang.String>) strSet84);
        boolean boolean90 = strSet60.containsAll((java.util.Collection<java.lang.String>) strSet69);
        boolean boolean92 = strSet69.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream93 = strSet69.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream94 = strSet69.stream();
        boolean boolean95 = strSet37.equals((java.lang.Object) strStream94);
        java.util.stream.Stream<java.lang.String> strStream96 = strSet37.parallelStream();
        boolean boolean97 = strSet3.contains((java.lang.Object) strSet37);
        java.util.stream.Stream<java.lang.String> strStream98 = strSet37.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator99 = strSet37.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strStream93);
        org.junit.Assert.assertNotNull(strStream94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(strStream98);
        org.junit.Assert.assertNotNull(strSpliterator99);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults4.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = strSet16.contains(obj18);
        boolean boolean20 = strSet3.remove(obj18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = strSet24.contains(obj26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        boolean boolean39 = strSet24.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        boolean boolean52 = strSet24.containsAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.stream.Stream<java.lang.String> strStream53 = strSet42.parallelStream();
        boolean boolean54 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.stream.Stream<java.lang.String> strStream55 = strSet42.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture8.get((long) 2, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean37 = strSet10.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator38 = strSet10.spliterator();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        java.util.stream.Stream<java.lang.String> strStream50 = strSet41.stream();
        boolean boolean51 = strSet10.containsAll((java.util.Collection<java.lang.String>) strSet41);
        java.lang.CharSequence[] charSequenceArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[] charSequenceArray53 = strSet41.toArray(charSequenceArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSpliterator38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer13.get();
        boolean boolean17 = multiBackgroundInitializer13.isStarted();
        boolean boolean18 = strSet3.contains((java.lang.Object) multiBackgroundInitializer13);
        boolean boolean19 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer13.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer13.get();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer13.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService23 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer13.setExternalExecutor(executorService23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNull(executorService22);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer5 = multiBackgroundInitializerResults3.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer4.getFuture();
        boolean boolean8 = multiBackgroundInitializer4.start();
        boolean boolean9 = multiBackgroundInitializer4.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer4.getFuture();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer4.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer4.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = multiBackgroundInitializerResults13.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        boolean boolean15 = multiBackgroundInitializer13.start();
        boolean boolean16 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer13.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean19 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet18);
        java.util.stream.Stream<java.lang.String> strStream20 = strSet11.stream();
        java.lang.Class<?> wildcardClass21 = strStream20.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass23 = multiBackgroundInitializer22.getClass();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        boolean boolean30 = multiBackgroundInitializer28.start();
        boolean boolean31 = multiBackgroundInitializer28.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer28.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.stream.Stream<java.lang.String> strStream35 = strSet26.stream();
        java.lang.Class<?> wildcardClass36 = strStream35.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass21, wildcardClass23, wildcardClass36 };
        java.lang.reflect.Type[] typeArray38 = strSet3.toArray(typeArray37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.start();
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer39.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer39.get();
        boolean boolean43 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResults42);
        java.util.stream.Stream<java.lang.String> strStream44 = strSet3.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strStream44);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException11 = multiBackgroundInitializerResults8.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture4.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException9 = multiBackgroundInitializerResults6.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.Object obj7 = null;
        boolean boolean8 = strSet3.equals(obj7);
        boolean boolean10 = strSet3.add("");
        java.util.Spliterator<java.lang.String> strSpliterator11 = strSet3.spliterator();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        boolean boolean17 = strSet15.isEmpty();
        java.lang.Object[] objArray18 = strSet15.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet24.stream();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strSet24.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean31 = strSet15.containsAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean33 = strSet15.add("");
        boolean boolean34 = strSet3.contains((java.lang.Object) "");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        boolean boolean45 = strSet37.removeAll((java.util.Collection<java.lang.String>) strSet44);
        java.util.stream.Stream<java.lang.String> strStream46 = strSet37.stream();
        java.util.Iterator<java.lang.String> strItor47 = strSet37.iterator();
        strSet37.clear();
        boolean boolean49 = strSet3.equals((java.lang.Object) strSet37);
        strSet3.clear();
        java.lang.String[] strArray53 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        boolean boolean56 = strSet54.isEmpty();
        java.lang.Object[] objArray57 = strSet54.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator58 = strSet54.spliterator();
        strSet54.clear();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer64 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean65 = multiBackgroundInitializer64.isStarted();
        boolean boolean66 = multiBackgroundInitializer64.start();
        boolean boolean67 = multiBackgroundInitializer64.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults68 = multiBackgroundInitializer64.get();
        java.util.Set<java.lang.String> strSet69 = multiBackgroundInitializerResults68.initializerNames();
        boolean boolean70 = strSet62.removeAll((java.util.Collection<java.lang.String>) strSet69);
        java.util.stream.Stream<java.lang.String> strStream71 = strSet62.stream();
        java.lang.Class<?> wildcardClass72 = strStream71.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer73 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass74 = multiBackgroundInitializer73.getClass();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer79 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean80 = multiBackgroundInitializer79.isStarted();
        boolean boolean81 = multiBackgroundInitializer79.start();
        boolean boolean82 = multiBackgroundInitializer79.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults83 = multiBackgroundInitializer79.get();
        java.util.Set<java.lang.String> strSet84 = multiBackgroundInitializerResults83.initializerNames();
        boolean boolean85 = strSet77.removeAll((java.util.Collection<java.lang.String>) strSet84);
        java.util.stream.Stream<java.lang.String> strStream86 = strSet77.stream();
        java.lang.Class<?> wildcardClass87 = strStream86.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass72, wildcardClass74, wildcardClass87 };
        java.lang.reflect.Type[] typeArray89 = strSet54.toArray(typeArray88);
        java.lang.reflect.Type[] typeArray90 = strSet3.toArray(typeArray88);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strStream86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertNotNull(typeArray90);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        boolean boolean15 = strSet12.isEmpty();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.start();
        boolean boolean18 = multiBackgroundInitializer16.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer16.getFuture();
        boolean boolean20 = multiBackgroundInitializer16.start();
        boolean boolean21 = multiBackgroundInitializer16.isStarted();
        boolean boolean22 = multiBackgroundInitializer16.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer16.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = strSet12.remove((java.lang.Object) multiBackgroundInitializerResultsFuture23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.start();
        boolean boolean14 = multiBackgroundInitializer12.start();
        boolean boolean15 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer12.get();
        boolean boolean17 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer12.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        java.util.Iterator<java.lang.String> strItor17 = strSet15.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        boolean boolean20 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer18.get();
        java.util.Set<java.lang.String> strSet22 = multiBackgroundInitializerResults21.initializerNames();
        java.util.Set<java.lang.String> strSet23 = multiBackgroundInitializerResults21.initializerNames();
        java.lang.Class<?> wildcardClass24 = multiBackgroundInitializerResults21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = strSet15.remove((java.lang.Object) multiBackgroundInitializerResults21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = strSet9.contains(obj11);
        java.lang.Object obj13 = null;
        boolean boolean14 = strSet9.equals(obj13);
        boolean boolean16 = strSet9.add("");
        java.util.Spliterator<java.lang.String> strSpliterator17 = strSet9.spliterator();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        boolean boolean23 = strSet21.isEmpty();
        java.lang.Object[] objArray24 = strSet21.toArray();
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        boolean boolean30 = strSet28.isEmpty();
        java.lang.Object[] objArray31 = strSet28.toArray();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        int int39 = strSet35.size();
        java.util.stream.Stream<java.lang.String> strStream40 = strSet35.stream();
        boolean boolean41 = strSet28.addAll((java.util.Collection<java.lang.String>) strSet35);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        boolean boolean48 = multiBackgroundInitializer46.start();
        boolean boolean49 = multiBackgroundInitializer46.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults50 = multiBackgroundInitializer46.get();
        java.util.Set<java.lang.String> strSet51 = multiBackgroundInitializerResults50.initializerNames();
        boolean boolean52 = strSet44.removeAll((java.util.Collection<java.lang.String>) strSet51);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer53 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean54 = multiBackgroundInitializer53.start();
        boolean boolean55 = multiBackgroundInitializer53.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer53.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet44.retainAll((java.util.Collection<java.lang.String>) strSet57);
        int int59 = strSet57.size();
        boolean boolean60 = strSet28.equals((java.lang.Object) int59);
        java.util.stream.Stream<java.lang.String> strStream61 = strSet28.parallelStream();
        boolean boolean62 = strSet21.contains((java.lang.Object) strStream61);
        java.util.Spliterator<java.lang.String> strSpliterator63 = strSet21.spliterator();
        boolean boolean64 = strSet9.addAll((java.util.Collection<java.lang.String>) strSet21);
        strSet21.clear();
        java.lang.String[] strArray68 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        boolean boolean71 = strSet69.isEmpty();
        java.lang.Object[] objArray72 = strSet69.toArray();
        strSet69.clear();
        java.util.stream.Stream<java.lang.String> strStream74 = strSet69.parallelStream();
        java.util.Iterator<java.lang.String> strItor75 = strSet69.iterator();
        boolean boolean77 = strSet69.remove((java.lang.Object) 1);
        java.lang.Object[] objArray78 = strSet69.toArray();
        int int79 = strSet69.size();
        boolean boolean80 = strSet21.addAll((java.util.Collection<java.lang.String>) strSet69);
        java.util.Spliterator<java.lang.String> strSpliterator81 = strSet21.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = strSet5.addAll((java.util.Collection<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strSpliterator81);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet11.spliterator();
        strSet11.clear();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        boolean boolean23 = multiBackgroundInitializer21.start();
        boolean boolean24 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer21.get();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults25.initializerNames();
        boolean boolean27 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet26);
        java.util.stream.Stream<java.lang.String> strStream28 = strSet19.stream();
        java.lang.Class<?> wildcardClass29 = strStream28.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass31 = multiBackgroundInitializer30.getClass();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        boolean boolean38 = multiBackgroundInitializer36.start();
        boolean boolean39 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults40.initializerNames();
        boolean boolean42 = strSet34.removeAll((java.util.Collection<java.lang.String>) strSet41);
        java.util.stream.Stream<java.lang.String> strStream43 = strSet34.stream();
        java.lang.Class<?> wildcardClass44 = strStream43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass44 };
        java.lang.reflect.Type[] typeArray46 = strSet11.toArray(typeArray45);
        boolean boolean47 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer48.getExternalExecutor();
        boolean boolean51 = multiBackgroundInitializer48.isStarted();
        boolean boolean52 = strSet11.remove((java.lang.Object) boolean51);
        java.lang.Object[] objArray53 = strSet11.toArray();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer58 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean59 = multiBackgroundInitializer58.isStarted();
        boolean boolean60 = multiBackgroundInitializer58.start();
        boolean boolean61 = multiBackgroundInitializer58.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer58.get();
        java.util.Set<java.lang.String> strSet63 = multiBackgroundInitializerResults62.initializerNames();
        boolean boolean64 = strSet56.removeAll((java.util.Collection<java.lang.String>) strSet63);
        java.util.stream.Stream<java.lang.String> strStream65 = strSet56.stream();
        java.util.Iterator<java.lang.String> strItor66 = strSet56.iterator();
        boolean boolean67 = strSet11.addAll((java.util.Collection<java.lang.String>) strSet56);
        boolean boolean68 = strSet56.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = multiBackgroundInitializerResults5.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer9.setExternalExecutor(executorService10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.start();
        boolean boolean15 = multiBackgroundInitializer13.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer13.getFuture();
        boolean boolean17 = multiBackgroundInitializer13.start();
        boolean boolean18 = multiBackgroundInitializer13.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer13.getFuture();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer13.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean37 = strSet10.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator38 = strSet10.spliterator();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        java.util.stream.Stream<java.lang.String> strStream50 = strSet41.stream();
        boolean boolean51 = strSet10.containsAll((java.util.Collection<java.lang.String>) strSet41);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        boolean boolean57 = strSet55.isEmpty();
        java.lang.Object[] objArray58 = strSet55.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer59 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean60 = multiBackgroundInitializer59.isStarted();
        boolean boolean61 = multiBackgroundInitializer59.start();
        boolean boolean62 = multiBackgroundInitializer59.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults63 = multiBackgroundInitializer59.get();
        java.util.Set<java.lang.String> strSet64 = multiBackgroundInitializerResults63.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream65 = strSet64.stream();
        boolean boolean66 = strSet55.containsAll((java.util.Collection<java.lang.String>) strSet64);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = strSet70.contains(obj72);
        int int74 = strSet70.size();
        boolean boolean75 = strSet55.retainAll((java.util.Collection<java.lang.String>) strSet70);
        strSet55.clear();
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer78 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService77);
        java.util.concurrent.ExecutorService executorService79 = multiBackgroundInitializer78.getExternalExecutor();
        boolean boolean80 = multiBackgroundInitializer78.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture81 = multiBackgroundInitializer78.getFuture();
        boolean boolean82 = strSet55.remove((java.lang.Object) multiBackgroundInitializerResultsFuture81);
        boolean boolean83 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet55);
        java.util.stream.Stream<java.lang.String> strStream84 = strSet10.stream();
        int int85 = strSet10.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSpliterator38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(executorService79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer7.getFuture();
        java.util.concurrent.ExecutorService executorService14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer7.setExternalExecutor(executorService14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strSet16.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = strSet16.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        int int32 = strSet21.size();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        boolean boolean38 = strSet36.isEmpty();
        java.lang.Object[] objArray39 = strSet36.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        boolean boolean42 = multiBackgroundInitializer40.start();
        boolean boolean43 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer40.get();
        java.util.Set<java.lang.String> strSet45 = multiBackgroundInitializerResults44.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream46 = strSet45.stream();
        boolean boolean47 = strSet36.containsAll((java.util.Collection<java.lang.String>) strSet45);
        boolean boolean48 = strSet45.isEmpty();
        boolean boolean49 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet45);
        java.lang.Object[] objArray50 = strSet21.toArray();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        boolean boolean29 = strSet27.isEmpty();
        java.lang.Object[] objArray30 = strSet27.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        boolean boolean33 = multiBackgroundInitializer31.start();
        boolean boolean34 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer31.get();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults35.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream37 = strSet36.stream();
        boolean boolean38 = strSet27.containsAll((java.util.Collection<java.lang.String>) strSet36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = strSet42.contains(obj44);
        int int46 = strSet42.size();
        boolean boolean47 = strSet27.retainAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean48 = strSet18.containsAll((java.util.Collection<java.lang.String>) strSet27);
        boolean boolean50 = strSet27.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream51 = strSet27.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream52 = strSet27.parallelStream();
        java.util.Collection<java.lang.String> strCollection53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = strSet27.removeAll(strCollection53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(strStream52);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream17 = strSet16.stream();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        boolean boolean22 = strSet16.containsAll((java.util.Collection<java.lang.String>) strList20);
        boolean boolean23 = strSet2.addAll((java.util.Collection<java.lang.String>) strList20);
        int int24 = strSet2.size();
        java.util.stream.Stream<java.lang.String> strStream25 = strSet2.stream();
        java.lang.String[] strArray26 = new java.lang.String[] {};
        java.lang.Comparable<java.lang.String>[] strComparableArray27 = strSet2.toArray((java.lang.Comparable<java.lang.String>[]) strArray26);
        java.util.stream.Stream<java.lang.String> strStream28 = strSet2.stream();
        boolean boolean29 = strSet2.isEmpty();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "", "", "", "hi!", "" };
        java.lang.CharSequence[][] charSequenceArray66 = new java.lang.CharSequence[][] { charSequenceArray35, charSequenceArray41, charSequenceArray47, charSequenceArray53, charSequenceArray59, charSequenceArray65 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[][] charSequenceArray67 = strSet2.toArray(charSequenceArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strComparableArray27);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertNotNull(charSequenceArray66);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        boolean boolean55 = multiBackgroundInitializer52.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer52.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean58 = strSet21.equals((java.lang.Object) strSet57);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer59 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean60 = multiBackgroundInitializer59.start();
        java.util.concurrent.ExecutorService executorService61 = multiBackgroundInitializer59.getExternalExecutor();
        boolean boolean62 = strSet57.contains((java.lang.Object) multiBackgroundInitializer59);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults63 = multiBackgroundInitializer59.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults64 = multiBackgroundInitializer59.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = multiBackgroundInitializerResults64.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(executorService61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults63);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults64);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer37.get();
        boolean boolean40 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        boolean boolean43 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        java.util.concurrent.ExecutorService executorService48 = null;
        multiBackgroundInitializer46.setExternalExecutor(executorService48);
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer52 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService51);
        boolean boolean53 = multiBackgroundInitializer52.isStarted();
        boolean boolean54 = multiBackgroundInitializer52.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] { multiBackgroundInitializer37, multiBackgroundInitializer41, multiBackgroundInitializer46, multiBackgroundInitializer52 };
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer[] multiBackgroundInitializerArray56 = strSet33.toArray(multiBackgroundInitializerArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer57 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean58 = multiBackgroundInitializer57.isStarted();
        boolean boolean59 = multiBackgroundInitializer57.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults60 = multiBackgroundInitializer57.get();
        boolean boolean61 = multiBackgroundInitializer57.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer57.get();
        boolean boolean63 = strSet33.contains((java.lang.Object) multiBackgroundInitializerResults62);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = multiBackgroundInitializerResults62.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = strSet16.contains(obj18);
        boolean boolean20 = strSet3.remove(obj18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = strSet24.contains(obj26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        boolean boolean39 = strSet24.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        boolean boolean52 = strSet24.containsAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.stream.Stream<java.lang.String> strStream53 = strSet42.parallelStream();
        boolean boolean54 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet42);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        boolean boolean60 = strSet58.isEmpty();
        java.lang.Object[] objArray61 = strSet58.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer62 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean63 = multiBackgroundInitializer62.isStarted();
        boolean boolean64 = multiBackgroundInitializer62.start();
        boolean boolean65 = multiBackgroundInitializer62.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults66 = multiBackgroundInitializer62.get();
        java.util.Set<java.lang.String> strSet67 = multiBackgroundInitializerResults66.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream68 = strSet67.stream();
        boolean boolean69 = strSet58.containsAll((java.util.Collection<java.lang.String>) strSet67);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet73 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet73, strArray72);
        java.lang.Object obj75 = null;
        boolean boolean76 = strSet73.contains(obj75);
        int int77 = strSet73.size();
        boolean boolean78 = strSet58.retainAll((java.util.Collection<java.lang.String>) strSet73);
        boolean boolean80 = strSet73.remove((java.lang.Object) 0L);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet84 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet84, strArray83);
        java.lang.Object obj86 = null;
        boolean boolean87 = strSet84.contains(obj86);
        java.lang.Object obj88 = null;
        boolean boolean89 = strSet84.equals(obj88);
        boolean boolean90 = strSet73.equals((java.lang.Object) boolean89);
        java.util.Spliterator<java.lang.String> strSpliterator91 = strSet73.spliterator();
        boolean boolean92 = strSet3.remove((java.lang.Object) strSet73);
        strSet73.clear();
        java.lang.Object[] objArray94 = strSet73.toArray();
        java.lang.Object[][] objArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[][] objArray96 = strSet73.toArray(objArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture5.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture5.cancel(false);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream17 = strSet16.stream();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        boolean boolean22 = strSet16.containsAll((java.util.Collection<java.lang.String>) strList20);
        boolean boolean23 = strSet2.addAll((java.util.Collection<java.lang.String>) strList20);
        int int24 = strSet2.size();
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        boolean boolean30 = strSet28.isEmpty();
        java.lang.Object[] objArray31 = strSet28.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator32 = strSet28.spliterator();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        boolean boolean38 = strSet36.isEmpty();
        java.lang.Object[] objArray39 = strSet36.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator40 = strSet36.spliterator();
        strSet36.clear();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        boolean boolean48 = multiBackgroundInitializer46.start();
        boolean boolean49 = multiBackgroundInitializer46.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults50 = multiBackgroundInitializer46.get();
        java.util.Set<java.lang.String> strSet51 = multiBackgroundInitializerResults50.initializerNames();
        boolean boolean52 = strSet44.removeAll((java.util.Collection<java.lang.String>) strSet51);
        java.util.stream.Stream<java.lang.String> strStream53 = strSet44.stream();
        java.lang.Class<?> wildcardClass54 = strStream53.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer55 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass56 = multiBackgroundInitializer55.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        boolean boolean67 = strSet59.removeAll((java.util.Collection<java.lang.String>) strSet66);
        java.util.stream.Stream<java.lang.String> strStream68 = strSet59.stream();
        java.lang.Class<?> wildcardClass69 = strStream68.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass54, wildcardClass56, wildcardClass69 };
        java.lang.reflect.Type[] typeArray71 = strSet36.toArray(typeArray70);
        boolean boolean72 = strSet28.containsAll((java.util.Collection<java.lang.String>) strSet36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer73 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean74 = multiBackgroundInitializer73.isStarted();
        java.util.concurrent.ExecutorService executorService75 = multiBackgroundInitializer73.getExternalExecutor();
        boolean boolean76 = multiBackgroundInitializer73.isStarted();
        boolean boolean77 = strSet36.remove((java.lang.Object) boolean76);
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer79 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService78);
        java.util.concurrent.ExecutorService executorService80 = multiBackgroundInitializer79.getExternalExecutor();
        boolean boolean81 = multiBackgroundInitializer79.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults82 = multiBackgroundInitializer79.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults83 = multiBackgroundInitializer79.get();
        boolean boolean84 = strSet36.contains((java.lang.Object) multiBackgroundInitializer79);
        boolean boolean85 = strSet36.isEmpty();
        boolean boolean86 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet36);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet90 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet90, strArray89);
        java.lang.Object obj92 = null;
        boolean boolean93 = strSet90.contains(obj92);
        boolean boolean94 = strSet90.isEmpty();
        boolean boolean95 = strSet36.removeAll((java.util.Collection<java.lang.String>) strSet90);
        java.lang.Class<?> wildcardClass96 = strSet90.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(executorService75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(executorService80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults82);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.stream.Stream<java.lang.String> strStream12 = strSet2.stream();
        java.util.Spliterator<java.lang.String> strSpliterator13 = strSet2.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strSpliterator13);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer4.get();
        boolean boolean8 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer1.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer1.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer1.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults1 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.util.stream.Stream<java.lang.String> strStream19 = strSet3.parallelStream();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer20.get();
        boolean boolean23 = multiBackgroundInitializer20.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer20.getFuture();
        boolean boolean25 = strSet3.equals((java.lang.Object) multiBackgroundInitializerResultsFuture24);
        java.util.concurrent.TimeUnit timeUnit27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializerResultsFuture24.get((long) 1, timeUnit27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.lang.Class<?> wildcardClass4 = multiBackgroundInitializerResults3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults8.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = strSet16.contains(obj18);
        boolean boolean20 = strSet3.remove(obj18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = strSet24.contains(obj26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        boolean boolean39 = strSet24.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        boolean boolean52 = strSet24.containsAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.stream.Stream<java.lang.String> strStream53 = strSet42.parallelStream();
        boolean boolean54 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean56 = strSet3.add("hi!");
        boolean boolean58 = strSet3.add("hi!");
        java.lang.reflect.Type[] typeArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray60 = strSet3.toArray(typeArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults5.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet12.spliterator();
        java.util.Collection<java.lang.String> strCollection16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = strSet12.retainAll(strCollection16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSpliterator15);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        boolean boolean25 = strSet18.remove((java.lang.Object) 0L);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = strSet29.contains(obj31);
        java.lang.Object obj33 = null;
        boolean boolean34 = strSet29.equals(obj33);
        boolean boolean35 = strSet18.equals((java.lang.Object) boolean34);
        java.util.stream.Stream<java.lang.String> strStream36 = strSet18.stream();
        strSet18.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.util.stream.Stream<java.lang.String> strStream52 = strSet21.parallelStream();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer53 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean54 = multiBackgroundInitializer53.start();
        boolean boolean55 = multiBackgroundInitializer53.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer53.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        java.util.Set<java.lang.String> strSet58 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean59 = strSet21.containsAll((java.util.Collection<java.lang.String>) strSet58);
        java.lang.Class<?> wildcardClass60 = strSet21.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer7.getFuture();
        boolean boolean12 = multiBackgroundInitializer7.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults5.initializerNames();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        boolean boolean17 = multiBackgroundInitializer15.start();
        boolean boolean18 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer15.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream21 = strSet20.stream();
        boolean boolean22 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = strSet26.contains(obj28);
        int int30 = strSet26.size();
        boolean boolean31 = strSet11.retainAll((java.util.Collection<java.lang.String>) strSet26);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        boolean boolean37 = strSet35.isEmpty();
        java.lang.Object[] objArray38 = strSet35.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        boolean boolean41 = multiBackgroundInitializer39.start();
        boolean boolean42 = multiBackgroundInitializer39.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults43.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream45 = strSet44.stream();
        boolean boolean46 = strSet35.containsAll((java.util.Collection<java.lang.String>) strSet44);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = strSet50.contains(obj52);
        int int54 = strSet50.size();
        boolean boolean55 = strSet35.retainAll((java.util.Collection<java.lang.String>) strSet50);
        boolean boolean56 = strSet26.containsAll((java.util.Collection<java.lang.String>) strSet35);
        boolean boolean58 = strSet35.add("hi!");
        java.lang.String[] strArray61 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        boolean boolean64 = strSet62.isEmpty();
        java.lang.Object[] objArray65 = strSet62.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer66 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean67 = multiBackgroundInitializer66.isStarted();
        boolean boolean68 = multiBackgroundInitializer66.start();
        boolean boolean69 = multiBackgroundInitializer66.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults70 = multiBackgroundInitializer66.get();
        java.util.Set<java.lang.String> strSet71 = multiBackgroundInitializerResults70.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream72 = strSet71.stream();
        boolean boolean73 = strSet62.containsAll((java.util.Collection<java.lang.String>) strSet71);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = strSet77.contains(obj79);
        int int81 = strSet77.size();
        boolean boolean82 = strSet62.retainAll((java.util.Collection<java.lang.String>) strSet77);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer83 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean84 = multiBackgroundInitializer83.isStarted();
        boolean boolean85 = multiBackgroundInitializer83.start();
        boolean boolean86 = multiBackgroundInitializer83.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults87 = multiBackgroundInitializer83.get();
        java.util.Set<java.lang.String> strSet88 = multiBackgroundInitializerResults87.initializerNames();
        java.util.Iterator<java.lang.String> strItor89 = strSet88.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator90 = strSet88.spliterator();
        boolean boolean91 = strSet77.removeAll((java.util.Collection<java.lang.String>) strSet88);
        boolean boolean92 = strSet35.equals((java.lang.Object) strSet77);
        java.util.stream.Stream<java.lang.String> strStream93 = strSet35.stream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = strSet7.addAll((java.util.Collection<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults87);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertNotNull(strSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strStream93);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        java.util.Set<java.lang.String> strSet6 = multiBackgroundInitializerResults3.initializerNames();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        boolean boolean20 = multiBackgroundInitializer18.start();
        boolean boolean21 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer18.get();
        java.util.Set<java.lang.String> strSet23 = multiBackgroundInitializerResults22.initializerNames();
        boolean boolean24 = strSet16.removeAll((java.util.Collection<java.lang.String>) strSet23);
        boolean boolean25 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet23);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        boolean boolean32 = multiBackgroundInitializer30.start();
        boolean boolean33 = multiBackgroundInitializer30.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer30.get();
        java.util.Set<java.lang.String> strSet35 = multiBackgroundInitializerResults34.initializerNames();
        boolean boolean36 = strSet28.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.util.stream.Stream<java.lang.String> strStream37 = strSet28.stream();
        boolean boolean38 = strSet10.containsAll((java.util.Collection<java.lang.String>) strSet28);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = strSet42.contains(obj44);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer50 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean51 = multiBackgroundInitializer50.isStarted();
        boolean boolean52 = multiBackgroundInitializer50.start();
        boolean boolean53 = multiBackgroundInitializer50.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer50.get();
        java.util.Set<java.lang.String> strSet55 = multiBackgroundInitializerResults54.initializerNames();
        boolean boolean56 = strSet48.removeAll((java.util.Collection<java.lang.String>) strSet55);
        boolean boolean57 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet55);
        boolean boolean58 = strSet28.removeAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.Spliterator<java.lang.String> strSpliterator59 = strSet28.spliterator();
        boolean boolean60 = strSet6.containsAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.Iterator<java.lang.String> strItor61 = strSet28.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.start();
        boolean boolean6 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer4.get();
        boolean boolean8 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer1.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer1.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer1.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.lang.Class<?> wildcardClass8 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        boolean boolean6 = multiBackgroundInitializer1.start();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.util.Iterator<java.lang.String> strItor19 = strSet3.iterator();
        boolean boolean21 = strSet3.add("hi!");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.start();
        boolean boolean24 = multiBackgroundInitializer22.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer22.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer22.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer22.getFuture();
        boolean boolean29 = strSet3.equals((java.lang.Object) multiBackgroundInitializerResultsFuture28);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializerResultsFuture28.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException32 = multiBackgroundInitializerResults30.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = multiBackgroundInitializerResults6.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        strSet3.clear();
        java.util.Collection[] collectionArray10 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.String>[] strCollectionArray11 = (java.util.Collection<java.lang.String>[]) collectionArray10;
        java.util.Collection<java.lang.String>[] strCollectionArray12 = strSet3.toArray((java.util.Collection<java.lang.String>[]) collectionArray10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = strSet16.contains(obj18);
        boolean boolean20 = strSet3.remove(obj18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = strSet24.contains(obj26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        boolean boolean34 = multiBackgroundInitializer32.start();
        boolean boolean35 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer32.get();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults36.initializerNames();
        boolean boolean38 = strSet30.removeAll((java.util.Collection<java.lang.String>) strSet37);
        boolean boolean39 = strSet24.removeAll((java.util.Collection<java.lang.String>) strSet37);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        boolean boolean46 = multiBackgroundInitializer44.start();
        boolean boolean47 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer44.get();
        java.util.Set<java.lang.String> strSet49 = multiBackgroundInitializerResults48.initializerNames();
        boolean boolean50 = strSet42.removeAll((java.util.Collection<java.lang.String>) strSet49);
        java.util.stream.Stream<java.lang.String> strStream51 = strSet42.stream();
        boolean boolean52 = strSet24.containsAll((java.util.Collection<java.lang.String>) strSet42);
        java.util.stream.Stream<java.lang.String> strStream53 = strSet42.parallelStream();
        boolean boolean54 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet42);
        boolean boolean56 = strSet3.add("hi!");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer61 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean62 = multiBackgroundInitializer61.isStarted();
        boolean boolean63 = multiBackgroundInitializer61.start();
        boolean boolean64 = multiBackgroundInitializer61.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults65 = multiBackgroundInitializer61.get();
        java.util.Set<java.lang.String> strSet66 = multiBackgroundInitializerResults65.initializerNames();
        boolean boolean67 = strSet59.removeAll((java.util.Collection<java.lang.String>) strSet66);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer68 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean69 = multiBackgroundInitializer68.start();
        boolean boolean70 = multiBackgroundInitializer68.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults71 = multiBackgroundInitializer68.get();
        java.util.Set<java.lang.String> strSet72 = multiBackgroundInitializerResults71.initializerNames();
        boolean boolean73 = strSet59.retainAll((java.util.Collection<java.lang.String>) strSet72);
        boolean boolean74 = strSet72.isEmpty();
        boolean boolean75 = strSet3.equals((java.lang.Object) strSet72);
        java.lang.Class<?> wildcardClass76 = strSet72.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(collectionArray10);
        org.junit.Assert.assertNotNull(strCollectionArray11);
        org.junit.Assert.assertNotNull(strCollectionArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer1.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture5.get((long) '4', timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer7.getFuture();
        boolean boolean14 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.start();
        boolean boolean18 = multiBackgroundInitializer16.isStarted();
        boolean boolean19 = multiBackgroundInitializer16.isStarted();
        boolean boolean20 = multiBackgroundInitializer16.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.util.stream.Stream<java.lang.String> strStream52 = strSet21.parallelStream();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer53 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean54 = multiBackgroundInitializer53.start();
        boolean boolean55 = multiBackgroundInitializer53.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer53.get();
        java.util.Set<java.lang.String> strSet57 = multiBackgroundInitializerResults56.initializerNames();
        java.util.Set<java.lang.String> strSet58 = multiBackgroundInitializerResults56.initializerNames();
        boolean boolean59 = strSet21.containsAll((java.util.Collection<java.lang.String>) strSet58);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer64 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean65 = multiBackgroundInitializer64.isStarted();
        boolean boolean66 = multiBackgroundInitializer64.start();
        boolean boolean67 = multiBackgroundInitializer64.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults68 = multiBackgroundInitializer64.get();
        java.util.Set<java.lang.String> strSet69 = multiBackgroundInitializerResults68.initializerNames();
        boolean boolean70 = strSet62.removeAll((java.util.Collection<java.lang.String>) strSet69);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer71 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean72 = multiBackgroundInitializer71.start();
        boolean boolean73 = multiBackgroundInitializer71.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults74 = multiBackgroundInitializer71.get();
        java.util.Set<java.lang.String> strSet75 = multiBackgroundInitializerResults74.initializerNames();
        boolean boolean76 = strSet62.retainAll((java.util.Collection<java.lang.String>) strSet75);
        int int77 = strSet75.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = strSet58.retainAll((java.util.Collection<java.lang.String>) strSet75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer5 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean6 = multiBackgroundInitializer5.start();
        boolean boolean7 = multiBackgroundInitializer5.start();
        boolean boolean8 = multiBackgroundInitializer5.start();
        boolean boolean9 = multiBackgroundInitializer5.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        boolean boolean18 = strSet3.add("");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        boolean boolean24 = strSet22.isEmpty();
        java.lang.Object[] objArray25 = strSet22.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        boolean boolean28 = multiBackgroundInitializer26.start();
        boolean boolean29 = multiBackgroundInitializer26.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer26.get();
        java.util.Set<java.lang.String> strSet31 = multiBackgroundInitializerResults30.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream32 = strSet31.stream();
        boolean boolean33 = strSet22.containsAll((java.util.Collection<java.lang.String>) strSet31);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = strSet37.contains(obj39);
        int int41 = strSet37.size();
        boolean boolean42 = strSet22.retainAll((java.util.Collection<java.lang.String>) strSet37);
        strSet22.clear();
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService44);
        java.util.concurrent.ExecutorService executorService46 = multiBackgroundInitializer45.getExternalExecutor();
        boolean boolean47 = multiBackgroundInitializer45.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture48 = multiBackgroundInitializer45.getFuture();
        boolean boolean49 = strSet22.remove((java.lang.Object) multiBackgroundInitializerResultsFuture48);
        boolean boolean50 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet22);
        strSet3.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(executorService46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults7.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture4.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        boolean boolean6 = multiBackgroundInitializer1.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializerResults4.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer7 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults3.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = multiBackgroundInitializerResults3.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException9 = multiBackgroundInitializerResults7.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException6 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer1.get();
        java.lang.Class<?> wildcardClass8 = multiBackgroundInitializerResults7.getClass();
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults6.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults6.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = multiBackgroundInitializerResults6.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        strSet3.clear();
        java.util.stream.Stream<java.lang.String> strStream8 = strSet3.parallelStream();
        java.util.Iterator<java.lang.String> strItor9 = strSet3.iterator();
        boolean boolean11 = strSet3.remove((java.lang.Object) 1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.start();
        boolean boolean14 = multiBackgroundInitializer12.start();
        boolean boolean15 = multiBackgroundInitializer12.start();
        boolean boolean16 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer12.getExternalExecutor();
        boolean boolean18 = strSet3.remove((java.lang.Object) multiBackgroundInitializer12);
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer12.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strItor9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService1);
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService5 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer6 = multiBackgroundInitializerResults4.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsBackgroundInitializer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", multiBackgroundInitializerResultsBackgroundInitializer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Child initializer must not be null!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        boolean boolean13 = multiBackgroundInitializer11.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        boolean boolean16 = strSet2.retainAll((java.util.Collection<java.lang.String>) strSet15);
        java.util.Iterator<java.lang.String> strItor17 = strSet15.iterator();
        int int18 = strSet15.size();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        java.util.stream.Stream<java.lang.String> strStream31 = strSet21.stream();
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        boolean boolean37 = strSet35.isEmpty();
        java.lang.Object[] objArray38 = strSet35.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strSet35.spliterator();
        strSet35.clear();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        boolean boolean47 = multiBackgroundInitializer45.start();
        boolean boolean48 = multiBackgroundInitializer45.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer45.get();
        java.util.Set<java.lang.String> strSet50 = multiBackgroundInitializerResults49.initializerNames();
        boolean boolean51 = strSet43.removeAll((java.util.Collection<java.lang.String>) strSet50);
        java.util.stream.Stream<java.lang.String> strStream52 = strSet43.stream();
        java.lang.Class<?> wildcardClass53 = strStream52.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer54 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass55 = multiBackgroundInitializer54.getClass();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer60 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean61 = multiBackgroundInitializer60.isStarted();
        boolean boolean62 = multiBackgroundInitializer60.start();
        boolean boolean63 = multiBackgroundInitializer60.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults64 = multiBackgroundInitializer60.get();
        java.util.Set<java.lang.String> strSet65 = multiBackgroundInitializerResults64.initializerNames();
        boolean boolean66 = strSet58.removeAll((java.util.Collection<java.lang.String>) strSet65);
        java.util.stream.Stream<java.lang.String> strStream67 = strSet58.stream();
        java.lang.Class<?> wildcardClass68 = strStream67.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass68 };
        java.lang.reflect.Type[] typeArray70 = strSet35.toArray(typeArray69);
        boolean boolean71 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.lang.Object[] objArray72 = strSet35.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = strSet15.retainAll((java.util.Collection<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = multiBackgroundInitializerResults10.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer6.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        java.util.Collection<java.lang.String> strCollection31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = strSet3.retainAll(strCollection31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer1.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertNull(executorService3);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get(0L, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        boolean boolean6 = multiBackgroundInitializer4.start();
        boolean boolean7 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer4.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        boolean boolean10 = strSet2.removeAll((java.util.Collection<java.lang.String>) strSet9);
        java.util.stream.Stream<java.lang.String> strStream11 = strSet2.stream();
        java.util.Iterator<java.lang.String> strItor12 = strSet2.iterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "hi!" };
        java.lang.CharSequence[] charSequenceArray16 = strSet2.toArray(charSequenceArray15);
        java.util.Collection<java.lang.String> strCollection17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = strSet2.addAll(strCollection17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertNotNull(charSequenceArray16);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = strSet35.contains(obj37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        boolean boolean45 = multiBackgroundInitializer43.start();
        boolean boolean46 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer43.get();
        java.util.Set<java.lang.String> strSet48 = multiBackgroundInitializerResults47.initializerNames();
        boolean boolean49 = strSet41.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean50 = strSet35.removeAll((java.util.Collection<java.lang.String>) strSet48);
        boolean boolean51 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet35);
        java.util.Spliterator<java.lang.String> strSpliterator52 = strSet21.spliterator();
        java.lang.String[] strArray55 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        boolean boolean58 = strSet56.isEmpty();
        java.lang.Object[] objArray59 = strSet56.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer60 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean61 = multiBackgroundInitializer60.isStarted();
        boolean boolean62 = multiBackgroundInitializer60.start();
        boolean boolean63 = multiBackgroundInitializer60.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults64 = multiBackgroundInitializer60.get();
        java.util.Set<java.lang.String> strSet65 = multiBackgroundInitializerResults64.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream66 = strSet65.stream();
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        boolean boolean71 = strSet65.containsAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean72 = strSet56.containsAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean74 = strSet56.add("");
        boolean boolean75 = strSet21.containsAll((java.util.Collection<java.lang.String>) strSet56);
        boolean boolean76 = strSet21.isEmpty();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer77 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean78 = multiBackgroundInitializer77.start();
        boolean boolean79 = multiBackgroundInitializer77.start();
        boolean boolean80 = multiBackgroundInitializer77.start();
        boolean boolean81 = multiBackgroundInitializer77.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture82 = multiBackgroundInitializer77.getFuture();
        boolean boolean83 = multiBackgroundInitializerResultsFuture82.isDone();
        boolean boolean84 = strSet21.remove((java.lang.Object) multiBackgroundInitializerResultsFuture82);
        boolean boolean85 = multiBackgroundInitializerResultsFuture82.isDone();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strSpliterator52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.Iterator<java.lang.String> strItor6 = strSet5.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.start();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = strSet5.contains((java.lang.Object) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer7.getFuture();
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture12.get((long) (byte) 1, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService6 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNull(executorService5);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = multiBackgroundInitializerResults6.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults7.isSuccessful();
        boolean boolean10 = multiBackgroundInitializerResults7.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException12 = multiBackgroundInitializerResults7.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet4 = multiBackgroundInitializerResults3.initializerNames();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = strSet8.contains(obj10);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        boolean boolean18 = multiBackgroundInitializer16.start();
        boolean boolean19 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer16.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        boolean boolean22 = strSet14.removeAll((java.util.Collection<java.lang.String>) strSet21);
        boolean boolean23 = strSet8.removeAll((java.util.Collection<java.lang.String>) strSet21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        boolean boolean30 = multiBackgroundInitializer28.start();
        boolean boolean31 = multiBackgroundInitializer28.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer28.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.stream.Stream<java.lang.String> strStream35 = strSet26.stream();
        boolean boolean36 = strSet8.containsAll((java.util.Collection<java.lang.String>) strSet26);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = strSet40.contains(obj42);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        boolean boolean50 = multiBackgroundInitializer48.start();
        boolean boolean51 = multiBackgroundInitializer48.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializer48.get();
        java.util.Set<java.lang.String> strSet53 = multiBackgroundInitializerResults52.initializerNames();
        boolean boolean54 = strSet46.removeAll((java.util.Collection<java.lang.String>) strSet53);
        boolean boolean55 = strSet40.removeAll((java.util.Collection<java.lang.String>) strSet53);
        boolean boolean56 = strSet26.removeAll((java.util.Collection<java.lang.String>) strSet40);
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer58 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService57);
        java.util.concurrent.ExecutorService executorService59 = multiBackgroundInitializer58.getExternalExecutor();
        boolean boolean60 = strSet26.remove((java.lang.Object) multiBackgroundInitializer58);
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        boolean boolean65 = strSet63.isEmpty();
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray70 = strSet63.toArray(charSequenceArray69);
        boolean boolean71 = strSet26.containsAll((java.util.Collection<java.lang.String>) strSet63);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        java.lang.Object obj77 = null;
        boolean boolean78 = strSet75.contains(obj77);
        java.lang.Object obj79 = null;
        boolean boolean80 = strSet75.equals(obj79);
        java.util.Spliterator<java.lang.String> strSpliterator81 = strSet75.spliterator();
        boolean boolean82 = strSet63.containsAll((java.util.Collection<java.lang.String>) strSet75);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = strSet4.addAll((java.util.Collection<java.lang.String>) strSet63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(executorService59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        boolean boolean11 = multiBackgroundInitializer7.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer7.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        boolean boolean6 = multiBackgroundInitializerResults4.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults4.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strSet3.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean13 = strSet11.isEmpty();
        java.lang.Object[] objArray14 = strSet11.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strSet11.spliterator();
        strSet11.clear();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        boolean boolean23 = multiBackgroundInitializer21.start();
        boolean boolean24 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer21.get();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults25.initializerNames();
        boolean boolean27 = strSet19.removeAll((java.util.Collection<java.lang.String>) strSet26);
        java.util.stream.Stream<java.lang.String> strStream28 = strSet19.stream();
        java.lang.Class<?> wildcardClass29 = strStream28.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass31 = multiBackgroundInitializer30.getClass();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        boolean boolean38 = multiBackgroundInitializer36.start();
        boolean boolean39 = multiBackgroundInitializer36.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        java.util.Set<java.lang.String> strSet41 = multiBackgroundInitializerResults40.initializerNames();
        boolean boolean42 = strSet34.removeAll((java.util.Collection<java.lang.String>) strSet41);
        java.util.stream.Stream<java.lang.String> strStream43 = strSet34.stream();
        java.lang.Class<?> wildcardClass44 = strStream43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass44 };
        java.lang.reflect.Type[] typeArray46 = strSet11.toArray(typeArray45);
        boolean boolean47 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer48.getExternalExecutor();
        boolean boolean51 = multiBackgroundInitializer48.isStarted();
        boolean boolean52 = strSet11.remove((java.lang.Object) boolean51);
        java.lang.Object[] objArray53 = strSet11.toArray();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer58 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean59 = multiBackgroundInitializer58.isStarted();
        boolean boolean60 = multiBackgroundInitializer58.start();
        boolean boolean61 = multiBackgroundInitializer58.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults62 = multiBackgroundInitializer58.get();
        java.util.Set<java.lang.String> strSet63 = multiBackgroundInitializerResults62.initializerNames();
        boolean boolean64 = strSet56.removeAll((java.util.Collection<java.lang.String>) strSet63);
        java.util.stream.Stream<java.lang.String> strStream65 = strSet56.stream();
        java.util.Iterator<java.lang.String> strItor66 = strSet56.iterator();
        boolean boolean67 = strSet11.addAll((java.util.Collection<java.lang.String>) strSet56);
        java.lang.Class<?> wildcardClass68 = strSet56.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer1.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer1.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer1.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer1.getFuture();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer1.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream6 = strSet5.stream();
        java.util.stream.Stream<java.lang.String> strStream7 = strSet5.stream();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = strSet11.contains(obj13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        boolean boolean21 = multiBackgroundInitializer19.start();
        boolean boolean22 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer19.get();
        java.util.Set<java.lang.String> strSet24 = multiBackgroundInitializerResults23.initializerNames();
        boolean boolean25 = strSet17.removeAll((java.util.Collection<java.lang.String>) strSet24);
        boolean boolean26 = strSet11.removeAll((java.util.Collection<java.lang.String>) strSet24);
        java.util.Iterator<java.lang.String> strItor27 = strSet11.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.start();
        boolean boolean30 = multiBackgroundInitializer28.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer28.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializerResultsFuture31.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        java.lang.Object[] objArray34 = strSet33.toArray();
        boolean boolean35 = strSet11.containsAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean36 = strSet5.containsAll((java.util.Collection<java.lang.String>) strSet33);
        java.lang.Object[] objArray37 = strSet33.toArray();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        strSet3.clear();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService25);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean28 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer26.getFuture();
        boolean boolean30 = strSet3.remove((java.lang.Object) multiBackgroundInitializerResultsFuture29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.start();
        boolean boolean33 = multiBackgroundInitializer31.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer31.get();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer31.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer31.get();
        boolean boolean37 = strSet3.remove((java.lang.Object) multiBackgroundInitializer31);
        boolean boolean38 = multiBackgroundInitializer31.isStarted();
        boolean boolean39 = multiBackgroundInitializer31.start();
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService41);
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer42.getExternalExecutor();
        boolean boolean44 = multiBackgroundInitializer42.start();
        boolean boolean45 = multiBackgroundInitializer42.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer42.get();
        boolean boolean47 = multiBackgroundInitializer42.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(executorService43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer1 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService0);
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer1.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer1.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer1.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture4.get();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture4.get(0L, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strSet10.contains(obj12);
        int int14 = strSet10.size();
        java.util.stream.Stream<java.lang.String> strStream15 = strSet10.stream();
        boolean boolean16 = strSet3.addAll((java.util.Collection<java.lang.String>) strSet10);
        java.util.stream.Stream<java.lang.String> strStream17 = strSet10.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        boolean boolean24 = multiBackgroundInitializer22.start();
        boolean boolean25 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer22.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        boolean boolean28 = strSet20.removeAll((java.util.Collection<java.lang.String>) strSet27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.start();
        boolean boolean31 = multiBackgroundInitializer29.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer29.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        boolean boolean34 = strSet20.retainAll((java.util.Collection<java.lang.String>) strSet33);
        java.util.Iterator<java.lang.String> strItor35 = strSet33.iterator();
        boolean boolean36 = strSet10.removeAll((java.util.Collection<java.lang.String>) strSet33);
        boolean boolean37 = strSet10.isEmpty();
        java.util.Iterator<java.lang.String> strItor38 = strSet10.iterator();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.start();
        boolean boolean41 = multiBackgroundInitializer39.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer39.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer39.get();
        boolean boolean44 = strSet10.remove((java.lang.Object) multiBackgroundInitializer39);
        java.util.concurrent.ExecutorService executorService45 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer39.setExternalExecutor(executorService45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        java.lang.Object obj5 = null;
        boolean boolean6 = strSet3.contains(obj5);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        boolean boolean13 = multiBackgroundInitializer11.start();
        boolean boolean14 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer11.get();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean17 = strSet9.removeAll((java.util.Collection<java.lang.String>) strSet16);
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.lang.String>) strSet16);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        boolean boolean25 = multiBackgroundInitializer23.start();
        boolean boolean26 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer23.get();
        java.util.Set<java.lang.String> strSet28 = multiBackgroundInitializerResults27.initializerNames();
        boolean boolean29 = strSet21.removeAll((java.util.Collection<java.lang.String>) strSet28);
        java.util.stream.Stream<java.lang.String> strStream30 = strSet21.stream();
        boolean boolean31 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet21);
        java.util.stream.Stream<java.lang.String> strStream32 = strSet21.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator33 = strSet21.spliterator();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!", "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!", "", "", "", "hi!", "" };
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!", "", "", "", "hi!", "" };
        java.lang.CharSequence[][] charSequenceArray62 = new java.lang.CharSequence[][] { charSequenceArray40, charSequenceArray47, charSequenceArray54, charSequenceArray61 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[][] charSequenceArray63 = strSet21.toArray(charSequenceArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertNotNull(charSequenceArray62);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.Object[] objArray6 = strSet3.toArray();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        boolean boolean9 = multiBackgroundInitializer7.start();
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer7.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.stream.Stream<java.lang.String> strStream13 = strSet12.stream();
        boolean boolean14 = strSet3.containsAll((java.util.Collection<java.lang.String>) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = strSet18.contains(obj20);
        int int22 = strSet18.size();
        boolean boolean23 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet18);
        boolean boolean25 = strSet18.remove((java.lang.Object) 0L);
        boolean boolean27 = strSet18.add("");
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService28);
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer29.getExternalExecutor();
        boolean boolean31 = multiBackgroundInitializer29.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer29.getFuture();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer29.getExternalExecutor();
        boolean boolean34 = strSet18.equals((java.lang.Object) multiBackgroundInitializer29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer29.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = multiBackgroundInitializerResults35.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException8 = multiBackgroundInitializerResults6.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializerResults5.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults2 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        boolean boolean5 = multiBackgroundInitializerResults4.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture3.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults8.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        boolean boolean11 = strSet9.isEmpty();
        java.lang.Object[] objArray12 = strSet9.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator13 = strSet9.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        boolean boolean19 = strSet17.isEmpty();
        java.lang.Object[] objArray20 = strSet17.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strSet17.spliterator();
        strSet17.clear();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        boolean boolean29 = multiBackgroundInitializer27.start();
        boolean boolean30 = multiBackgroundInitializer27.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer27.get();
        java.util.Set<java.lang.String> strSet32 = multiBackgroundInitializerResults31.initializerNames();
        boolean boolean33 = strSet25.removeAll((java.util.Collection<java.lang.String>) strSet32);
        java.util.stream.Stream<java.lang.String> strStream34 = strSet25.stream();
        java.lang.Class<?> wildcardClass35 = strStream34.getClass();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.lang.Class<?> wildcardClass37 = multiBackgroundInitializer36.getClass();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        boolean boolean44 = multiBackgroundInitializer42.start();
        boolean boolean45 = multiBackgroundInitializer42.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer42.get();
        java.util.Set<java.lang.String> strSet47 = multiBackgroundInitializerResults46.initializerNames();
        boolean boolean48 = strSet40.removeAll((java.util.Collection<java.lang.String>) strSet47);
        java.util.stream.Stream<java.lang.String> strStream49 = strSet40.stream();
        java.lang.Class<?> wildcardClass50 = strStream49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass50 };
        java.lang.reflect.Type[] typeArray52 = strSet17.toArray(typeArray51);
        boolean boolean53 = strSet9.containsAll((java.util.Collection<java.lang.String>) strSet17);
        boolean boolean54 = strSet3.contains((java.lang.Object) boolean53);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        boolean boolean60 = strSet58.isEmpty();
        java.util.Iterator<java.lang.String> strItor61 = strSet58.iterator();
        boolean boolean62 = strSet3.retainAll((java.util.Collection<java.lang.String>) strSet58);
        java.util.Iterator<java.lang.String> strItor63 = strSet3.iterator();
        java.util.concurrent.ExecutorService executorService64 = null;
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer65 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer(executorService64);
        java.util.concurrent.ExecutorService executorService66 = multiBackgroundInitializer65.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService67 = multiBackgroundInitializer65.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService68 = null;
        multiBackgroundInitializer65.setExternalExecutor(executorService68);
        boolean boolean70 = strSet3.equals((java.lang.Object) executorService68);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNull(executorService66);
        org.junit.Assert.assertNull(executorService67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.start();
        boolean boolean3 = multiBackgroundInitializer0.isStarted();
        boolean boolean4 = multiBackgroundInitializer0.start();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService12 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }
}

