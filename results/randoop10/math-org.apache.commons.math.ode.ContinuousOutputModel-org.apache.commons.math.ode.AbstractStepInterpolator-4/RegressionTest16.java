import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        double double13 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        continuousOutputModel7.reset();
        boolean boolean16 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean18 = continuousOutputModel7.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray19 = continuousOutputModel7.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel3.requiresDenseOutput();
        double double10 = continuousOutputModel3.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel3);
        double double12 = continuousOutputModel0.getFinalTime();
        double double13 = continuousOutputModel0.getFinalTime();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean55 = continuousOutputModel54.requiresDenseOutput();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel58);
        continuousOutputModel43.append(continuousOutputModel54);
        continuousOutputModel33.append(continuousOutputModel43);
        continuousOutputModel0.append(continuousOutputModel43);
        double double65 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime(10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        double double6 = continuousOutputModel3.getFinalTime();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        double double13 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel14);
        boolean boolean17 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        continuousOutputModel3.append(continuousOutputModel10);
        continuousOutputModel3.reset();
        continuousOutputModel0.append(continuousOutputModel3);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean26 = continuousOutputModel22.requiresDenseOutput();
        double double27 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        double double33 = continuousOutputModel28.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel34);
        continuousOutputModel22.append(continuousOutputModel34);
        continuousOutputModel22.reset();
        continuousOutputModel0.append(continuousOutputModel22);
        double double41 = continuousOutputModel22.getInitialTime();
        continuousOutputModel22.reset();
        double double43 = continuousOutputModel22.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean17 = continuousOutputModel11.requiresDenseOutput();
        double double18 = continuousOutputModel11.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel6.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        double double17 = continuousOutputModel11.getInitialTime();
        double double18 = continuousOutputModel11.getFinalTime();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel20.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        double double32 = continuousOutputModel30.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel30);
        continuousOutputModel20.append(continuousOutputModel30);
        boolean boolean35 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        double double38 = continuousOutputModel36.getInitialTime();
        double double39 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel36.append(continuousOutputModel40);
        double double44 = continuousOutputModel36.getInitialTime();
        double double45 = continuousOutputModel36.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        double double48 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        double double50 = continuousOutputModel46.getInitialTime();
        continuousOutputModel36.append(continuousOutputModel46);
        continuousOutputModel20.append(continuousOutputModel36);
        continuousOutputModel11.append(continuousOutputModel20);
        boolean boolean54 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean56 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double58 = continuousOutputModel57.getFinalTime();
        double double59 = continuousOutputModel57.getInitialTime();
        double double60 = continuousOutputModel57.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        continuousOutputModel57.append(continuousOutputModel61);
        boolean boolean65 = continuousOutputModel57.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel66.reset();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        double double72 = continuousOutputModel66.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        double double77 = continuousOutputModel73.getInitialTime();
        continuousOutputModel73.reset();
        boolean boolean79 = continuousOutputModel73.requiresDenseOutput();
        double double80 = continuousOutputModel73.getInitialTime();
        continuousOutputModel66.append(continuousOutputModel73);
        continuousOutputModel57.append(continuousOutputModel66);
        continuousOutputModel20.append(continuousOutputModel57);
        continuousOutputModel0.append(continuousOutputModel20);
        java.lang.Class<?> wildcardClass85 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        double double12 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        double double14 = continuousOutputModel0.getInitialTime();
        double double15 = continuousOutputModel0.getInitialTime();
        double double16 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel21);
        double double25 = continuousOutputModel17.getInitialTime();
        double double26 = continuousOutputModel17.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel27.reset();
        double double31 = continuousOutputModel27.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean37 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        boolean boolean44 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        continuousOutputModel33.append(continuousOutputModel42);
        continuousOutputModel27.append(continuousOutputModel42);
        continuousOutputModel42.reset();
        continuousOutputModel42.reset();
        boolean boolean50 = continuousOutputModel42.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel51.reset();
        continuousOutputModel51.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        boolean boolean59 = continuousOutputModel56.requiresDenseOutput();
        continuousOutputModel56.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean62 = continuousOutputModel61.requiresDenseOutput();
        double double63 = continuousOutputModel61.getInitialTime();
        continuousOutputModel56.append(continuousOutputModel61);
        continuousOutputModel51.append(continuousOutputModel61);
        continuousOutputModel42.append(continuousOutputModel61);
        continuousOutputModel42.reset();
        boolean boolean68 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel42);
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray10 = iOException6.getSuppressed();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", objArray21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        double double29 = continuousOutputModel25.getInitialTime();
        java.io.IOException iOException32 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        java.lang.Object[] objArray44 = new java.lang.Object[] { double29, mathException34, iOException37, false, continuousOutputModel41 };
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        java.io.IOException iOException58 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException58);
        java.lang.Object[] objArray61 = mathException60.getArguments();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21, (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", objArray21);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray75);
        java.io.IOException iOException80 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException80);
        java.lang.Object[] objArray83 = mathException82.getArguments();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray75, (java.lang.Throwable) mathException82);
        java.lang.String str86 = mathException85.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException85);
        mathException66.addSuppressed((java.lang.Throwable) derivativeException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) derivativeException87);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray10);
        java.lang.String str91 = mathException90.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str86, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.MathException: " + "'", str91, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel11);
        double double15 = continuousOutputModel7.getInitialTime();
        double double16 = continuousOutputModel7.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        double double21 = continuousOutputModel17.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel17);
        double double23 = continuousOutputModel17.getInitialTime();
        double double24 = continuousOutputModel17.getFinalTime();
        boolean boolean25 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        double double28 = continuousOutputModel17.getInitialTime();
        boolean boolean29 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel17.handleStep(stepInterpolator30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException10);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", objArray13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        java.io.IOException iOException30 = new java.io.IOException("", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        java.lang.Object[] objArray36 = new java.lang.Object[] { double21, mathException26, iOException29, false, continuousOutputModel33 };
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        java.lang.Throwable[] throwableArray61 = mathException60.getSuppressed();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("", strArray75);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: ", strArray75);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray61);
        java.io.IOException iOException88 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException88);
        java.io.IOException iOException91 = new java.io.IOException((java.lang.Throwable) mathException90);
        mathException85.addSuppressed((java.lang.Throwable) mathException90);
        java.lang.Throwable[] throwableArray93 = mathException90.getSuppressed();
        java.lang.String str94 = mathException90.getPattern();
        java.lang.String str95 = mathException90.getPattern();
        java.lang.String str96 = mathException90.toString();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str96, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        double double24 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel13.append(continuousOutputModel25);
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        continuousOutputModel13.reset();
        double double33 = continuousOutputModel13.getFinalTime();
        double double34 = continuousOutputModel13.getInitialTime();
        double double35 = continuousOutputModel13.getInitialTime();
        continuousOutputModel13.reset();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel38.append(continuousOutputModel43);
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        double double48 = continuousOutputModel43.getInitialTime();
        continuousOutputModel43.reset();
        double double50 = continuousOutputModel43.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel51.reset();
        boolean boolean55 = continuousOutputModel51.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        boolean boolean59 = continuousOutputModel56.requiresDenseOutput();
        continuousOutputModel51.append(continuousOutputModel56);
        continuousOutputModel56.reset();
        double double62 = continuousOutputModel56.getInitialTime();
        double double63 = continuousOutputModel56.getFinalTime();
        continuousOutputModel43.append(continuousOutputModel56);
        double double65 = continuousOutputModel56.getInitialTime();
        double double66 = continuousOutputModel56.getInitialTime();
        continuousOutputModel13.append(continuousOutputModel56);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        double double25 = continuousOutputModel12.getFinalTime();
        double double26 = continuousOutputModel12.getInitialTime();
        java.lang.Class<?> wildcardClass27 = continuousOutputModel12.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        double double12 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel24);
        boolean boolean27 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        double double32 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double45 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        continuousOutputModel13.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel37);
        double double49 = continuousOutputModel37.getInitialTime();
        boolean boolean50 = continuousOutputModel37.requiresDenseOutput();
        double double51 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        double double25 = continuousOutputModel6.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel30);
        continuousOutputModel30.reset();
        double double38 = continuousOutputModel30.getInitialTime();
        continuousOutputModel30.reset();
        continuousOutputModel6.append(continuousOutputModel30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel30.handleStep(stepInterpolator41, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        continuousOutputModel0.reset();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        double double19 = continuousOutputModel0.getInitialTime();
        boolean boolean20 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        double double26 = continuousOutputModel21.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel21.append(continuousOutputModel27);
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        boolean boolean33 = continuousOutputModel21.requiresDenseOutput();
        double double34 = continuousOutputModel21.getFinalTime();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        boolean boolean37 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel21);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel25);
        continuousOutputModel16.append(continuousOutputModel25);
        continuousOutputModel10.append(continuousOutputModel25);
        boolean boolean31 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = continuousOutputModel10.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean13 = continuousOutputModel7.requiresDenseOutput();
        double double14 = continuousOutputModel7.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel7);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = continuousOutputModel7.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        double double14 = continuousOutputModel11.getFinalTime();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        boolean boolean25 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        continuousOutputModel11.append(continuousOutputModel18);
        boolean boolean28 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel29);
        continuousOutputModel29.reset();
        boolean boolean35 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel29);
        boolean boolean37 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel38.append(continuousOutputModel43);
        continuousOutputModel43.reset();
        double double48 = continuousOutputModel43.getFinalTime();
        continuousOutputModel43.reset();
        continuousOutputModel43.reset();
        boolean boolean51 = continuousOutputModel43.requiresDenseOutput();
        double double52 = continuousOutputModel43.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel43);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        continuousOutputModel0.reset();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        double double11 = continuousOutputModel8.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel12);
        continuousOutputModel7.append(continuousOutputModel12);
        double double16 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        double double19 = continuousOutputModel0.getInitialTime();
        boolean boolean20 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.lang.Throwable[] throwableArray5 = mathException4.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException12);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", objArray15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException32 = new java.io.IOException("", (java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        java.lang.Object[] objArray38 = new java.lang.Object[] { double23, mathException28, iOException31, false, continuousOutputModel35 };
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException52);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) mathException58);
        java.lang.Throwable[] throwableArray60 = mathException58.getSuppressed();
        java.io.IOException iOException66 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException66);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", objArray69);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray69);
        java.io.IOException iOException73 = new java.io.IOException((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) iOException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException75);
        java.lang.Throwable[] throwableArray77 = mathException76.getSuppressed();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException76);
        java.lang.String str79 = mathException76.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.commons.math.MathException: " + "'", str79, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        boolean boolean7 = continuousOutputModel3.requiresDenseOutput();
        double double8 = continuousOutputModel3.getFinalTime();
        continuousOutputModel3.reset();
        continuousOutputModel0.append(continuousOutputModel3);
        continuousOutputModel0.reset();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        double double13 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel23);
        continuousOutputModel14.append(continuousOutputModel23);
        continuousOutputModel0.append(continuousOutputModel23);
        continuousOutputModel23.reset();
        boolean boolean30 = continuousOutputModel23.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel23.setInterpolatedTime((double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        double double12 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel9);
        continuousOutputModel0.append(continuousOutputModel9);
        double double14 = continuousOutputModel0.getFinalTime();
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double3 = continuousOutputModel2.getFinalTime();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        double double6 = continuousOutputModel2.getInitialTime();
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException("hi!");
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        java.lang.Object[] objArray21 = new java.lang.Object[] { double6, mathException11, iOException14, false, continuousOutputModel18 };
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21);
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException42);
        java.lang.Class<?> wildcardClass45 = derivativeException44.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel17);
        boolean boolean23 = continuousOutputModel9.requiresDenseOutput();
        double double24 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel9.handleStep(stepInterpolator25, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        double double22 = continuousOutputModel20.getInitialTime();
        double double23 = continuousOutputModel20.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        continuousOutputModel34.append(continuousOutputModel39);
        continuousOutputModel29.append(continuousOutputModel39);
        boolean boolean44 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel50);
        continuousOutputModel46.reset();
        double double58 = continuousOutputModel46.getInitialTime();
        continuousOutputModel29.append(continuousOutputModel46);
        continuousOutputModel25.append(continuousOutputModel46);
        continuousOutputModel20.append(continuousOutputModel46);
        continuousOutputModel5.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean64 = continuousOutputModel63.requiresDenseOutput();
        boolean boolean65 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel63.reset();
        boolean boolean67 = continuousOutputModel63.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double69 = continuousOutputModel68.getFinalTime();
        double double70 = continuousOutputModel68.getInitialTime();
        boolean boolean71 = continuousOutputModel68.requiresDenseOutput();
        continuousOutputModel63.append(continuousOutputModel68);
        double double73 = continuousOutputModel68.getInitialTime();
        double double74 = continuousOutputModel68.getFinalTime();
        continuousOutputModel68.reset();
        double double76 = continuousOutputModel68.getFinalTime();
        continuousOutputModel68.reset();
        boolean boolean78 = continuousOutputModel68.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel68);
        double double80 = continuousOutputModel5.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        boolean boolean19 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel29);
        continuousOutputModel29.reset();
        boolean boolean35 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel29.requiresDenseOutput();
        double double37 = continuousOutputModel29.getInitialTime();
        boolean boolean38 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        continuousOutputModel11.append(continuousOutputModel29);
        continuousOutputModel0.append(continuousOutputModel29);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel17);
        double double24 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        double double39 = continuousOutputModel33.getInitialTime();
        boolean boolean40 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel33.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double9 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        double double13 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        continuousOutputModel10.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        double double21 = continuousOutputModel18.getInitialTime();
        continuousOutputModel10.append(continuousOutputModel18);
        continuousOutputModel10.reset();
        double double24 = continuousOutputModel10.getFinalTime();
        continuousOutputModel6.append(continuousOutputModel10);
        continuousOutputModel10.reset();
        boolean boolean27 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        continuousOutputModel10.reset();
        continuousOutputModel10.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel10.setInterpolatedTime(1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        double double9 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        double double21 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel25);
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        boolean boolean32 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel25.handleStep(stepInterpolator33, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel15.requiresDenseOutput();
        double double22 = continuousOutputModel15.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel15);
        double double24 = continuousOutputModel12.getFinalTime();
        double double25 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean27 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        double double14 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel17);
        double double25 = continuousOutputModel17.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double26 = continuousOutputModel17.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getInitialTime();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        double double16 = continuousOutputModel11.getInitialTime();
        boolean boolean17 = continuousOutputModel11.requiresDenseOutput();
        double double18 = continuousOutputModel11.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel11);
        double double20 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean30 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        boolean boolean34 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel31);
        continuousOutputModel21.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        continuousOutputModel0.append(continuousOutputModel26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        double double11 = continuousOutputModel6.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        continuousOutputModel6.append(continuousOutputModel12);
        continuousOutputModel0.append(continuousOutputModel12);
        continuousOutputModel0.reset();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        double double19 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        double double13 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        double double17 = continuousOutputModel0.getInitialTime();
        double double18 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        double double23 = continuousOutputModel19.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean29 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel24.requiresDenseOutput();
        double double31 = continuousOutputModel24.getInitialTime();
        continuousOutputModel24.reset();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel0.append(continuousOutputModel19);
        double double35 = continuousOutputModel19.getInitialTime();
        boolean boolean36 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel19.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getFinalTime();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        boolean boolean26 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel15);
        boolean boolean28 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double30 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        double double16 = continuousOutputModel4.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel4.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel30);
        boolean boolean35 = continuousOutputModel22.requiresDenseOutput();
        double double36 = continuousOutputModel22.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        double double40 = continuousOutputModel37.getFinalTime();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel44.requiresDenseOutput();
        double double47 = continuousOutputModel44.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean49 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel44.append(continuousOutputModel48);
        boolean boolean51 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        continuousOutputModel37.append(continuousOutputModel44);
        boolean boolean54 = continuousOutputModel37.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double56 = continuousOutputModel55.getFinalTime();
        double double57 = continuousOutputModel55.getInitialTime();
        boolean boolean58 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel55);
        continuousOutputModel22.append(continuousOutputModel55);
        double double61 = continuousOutputModel55.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean63 = continuousOutputModel62.requiresDenseOutput();
        double double64 = continuousOutputModel62.getInitialTime();
        double double65 = continuousOutputModel62.getFinalTime();
        continuousOutputModel55.append(continuousOutputModel62);
        continuousOutputModel4.append(continuousOutputModel55);
        boolean boolean68 = continuousOutputModel4.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray69 = continuousOutputModel4.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!");
        java.lang.Object[] objArray4 = mathException3.getArguments();
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException8);
        mathException3.addSuppressed((java.lang.Throwable) mathException9);
        java.lang.Object[] objArray11 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: ", objArray11);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        java.io.IOException iOException30 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException30);
        java.lang.Object[] objArray33 = mathException32.getArguments();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", objArray33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        double double41 = continuousOutputModel37.getInitialTime();
        java.io.IOException iOException44 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException44);
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        java.io.IOException iOException50 = new java.io.IOException("", (java.lang.Throwable) iOException49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException49);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double54 = continuousOutputModel53.getFinalTime();
        double double55 = continuousOutputModel53.getInitialTime();
        java.lang.Object[] objArray56 = new java.lang.Object[] { double41, mathException46, iOException49, false, continuousOutputModel53 };
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray65);
        java.io.IOException iOException70 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException70);
        java.lang.Object[] objArray73 = mathException72.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray56, (java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray33, (java.lang.Throwable) mathException76);
        derivativeException24.addSuppressed((java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException76);
        java.io.IOException iOException80 = new java.io.IOException((java.lang.Throwable) mathException76);
        java.lang.String str81 = mathException76.getPattern();
        java.io.IOException iOException82 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException76);
        java.lang.Object[] objArray84 = mathException76.getArguments();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Throwable) mathException76);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", objArray11, (java.lang.Throwable) derivativeException87);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str81, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray84);
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean19 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel25);
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        double double31 = continuousOutputModel25.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel25);
        double double33 = continuousOutputModel5.getInitialTime();
        boolean boolean34 = continuousOutputModel5.requiresDenseOutput();
        double double35 = continuousOutputModel5.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double36 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        double double29 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        boolean boolean33 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        double double35 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double22 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel23);
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel5.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        continuousOutputModel31.reset();
        boolean boolean36 = continuousOutputModel31.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        double double40 = continuousOutputModel37.getFinalTime();
        boolean boolean41 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel31.append(continuousOutputModel37);
        double double43 = continuousOutputModel31.getFinalTime();
        continuousOutputModel31.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean49 = continuousOutputModel48.requiresDenseOutput();
        boolean boolean50 = continuousOutputModel48.requiresDenseOutput();
        double double51 = continuousOutputModel48.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean53 = continuousOutputModel52.requiresDenseOutput();
        continuousOutputModel48.append(continuousOutputModel52);
        continuousOutputModel47.append(continuousOutputModel52);
        boolean boolean56 = continuousOutputModel47.requiresDenseOutput();
        double double57 = continuousOutputModel47.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        double double61 = continuousOutputModel58.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        continuousOutputModel58.append(continuousOutputModel62);
        double double66 = continuousOutputModel58.getFinalTime();
        boolean boolean67 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean68 = continuousOutputModel58.requiresDenseOutput();
        double double69 = continuousOutputModel58.getFinalTime();
        boolean boolean70 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel47.append(continuousOutputModel58);
        continuousOutputModel47.reset();
        continuousOutputModel45.append(continuousOutputModel47);
        continuousOutputModel31.append(continuousOutputModel47);
        continuousOutputModel17.append(continuousOutputModel47);
        boolean boolean76 = continuousOutputModel47.requiresDenseOutput();
        boolean boolean77 = continuousOutputModel47.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException15);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", objArray18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        java.lang.Object[] objArray41 = new java.lang.Object[] { double26, mathException31, iOException34, false, continuousOutputModel38 };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) mathException61);
        derivativeException9.addSuppressed((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) mathException61);
        java.lang.String str66 = mathException61.getPattern();
        java.io.IOException iOException67 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str66, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean19 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel25);
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        double double31 = continuousOutputModel25.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel25);
        double double33 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel9);
        continuousOutputModel9.reset();
        double double15 = continuousOutputModel9.getInitialTime();
        double double16 = continuousOutputModel9.getFinalTime();
        continuousOutputModel9.reset();
        continuousOutputModel9.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        double double21 = continuousOutputModel19.getInitialTime();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        continuousOutputModel9.append(continuousOutputModel19);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        double double34 = continuousOutputModel31.getFinalTime();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel42.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        double double49 = continuousOutputModel47.getInitialTime();
        continuousOutputModel42.append(continuousOutputModel47);
        continuousOutputModel37.append(continuousOutputModel47);
        continuousOutputModel37.reset();
        boolean boolean53 = continuousOutputModel37.requiresDenseOutput();
        double double54 = continuousOutputModel37.getFinalTime();
        continuousOutputModel25.append(continuousOutputModel37);
        boolean boolean56 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel9);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel9.setInterpolatedTime(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        boolean boolean17 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel8.append(continuousOutputModel19);
        double double29 = continuousOutputModel19.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel19);
        continuousOutputModel19.reset();
        double double32 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        double double38 = continuousOutputModel34.getInitialTime();
        continuousOutputModel34.reset();
        boolean boolean40 = continuousOutputModel34.requiresDenseOutput();
        double double41 = continuousOutputModel34.getInitialTime();
        boolean boolean42 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        continuousOutputModel19.append(continuousOutputModel34);
        continuousOutputModel19.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel7.append(continuousOutputModel11);
        double double23 = continuousOutputModel11.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean25 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean28 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel11.handleStep(stepInterpolator29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getInitialTime();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        double double13 = continuousOutputModel0.getFinalTime();
        double double14 = continuousOutputModel0.getFinalTime();
        double double15 = continuousOutputModel0.getFinalTime();
        double double16 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel5.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        continuousOutputModel0.append(continuousOutputModel19);
        boolean boolean27 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        continuousOutputModel35.reset();
        continuousOutputModel29.append(continuousOutputModel35);
        double double39 = continuousOutputModel29.getInitialTime();
        boolean boolean40 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        continuousOutputModel41.append(continuousOutputModel45);
        double double49 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        double double54 = continuousOutputModel50.getInitialTime();
        continuousOutputModel50.reset();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        continuousOutputModel58.reset();
        continuousOutputModel50.append(continuousOutputModel58);
        continuousOutputModel29.append(continuousOutputModel50);
        continuousOutputModel19.append(continuousOutputModel29);
        double double73 = continuousOutputModel19.getInitialTime();
        boolean boolean74 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        boolean boolean77 = continuousOutputModel19.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        double double10 = continuousOutputModel6.getInitialTime();
        double double11 = continuousOutputModel6.getFinalTime();
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean15 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel19.requiresDenseOutput();
        double double26 = continuousOutputModel19.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel19);
        boolean boolean28 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel6.append(continuousOutputModel19);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel6.setInterpolatedTime((double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean17 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel11.append(continuousOutputModel25);
        boolean boolean32 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        double double36 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel37);
        double double41 = continuousOutputModel33.getFinalTime();
        continuousOutputModel33.reset();
        continuousOutputModel33.reset();
        boolean boolean44 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel46.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        boolean boolean52 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel49.reset();
        boolean boolean54 = continuousOutputModel49.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel49.requiresDenseOutput();
        double double56 = continuousOutputModel49.getInitialTime();
        continuousOutputModel46.append(continuousOutputModel49);
        double double58 = continuousOutputModel46.getFinalTime();
        double double59 = continuousOutputModel46.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel46);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean62 = continuousOutputModel61.requiresDenseOutput();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        boolean boolean65 = continuousOutputModel61.requiresDenseOutput();
        double double66 = continuousOutputModel61.getFinalTime();
        double double67 = continuousOutputModel61.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel61);
        continuousOutputModel61.reset();
        double double70 = continuousOutputModel61.getFinalTime();
        continuousOutputModel61.reset();
        continuousOutputModel25.append(continuousOutputModel61);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        double double77 = continuousOutputModel73.getInitialTime();
        continuousOutputModel73.reset();
        double double79 = continuousOutputModel73.getInitialTime();
        continuousOutputModel73.reset();
        continuousOutputModel73.reset();
        boolean boolean82 = continuousOutputModel73.requiresDenseOutput();
        boolean boolean83 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel61.append(continuousOutputModel73);
        continuousOutputModel61.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double3 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        double double7 = continuousOutputModel4.getFinalTime();
        double double8 = continuousOutputModel4.getInitialTime();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean11 = continuousOutputModel4.requiresDenseOutput();
        double double12 = continuousOutputModel4.getFinalTime();
        boolean boolean13 = continuousOutputModel4.requiresDenseOutput();
        double double14 = continuousOutputModel4.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        continuousOutputModel0.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean50 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel45);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        boolean boolean55 = continuousOutputModel52.requiresDenseOutput();
        continuousOutputModel52.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        double double59 = continuousOutputModel57.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel57);
        continuousOutputModel41.append(continuousOutputModel52);
        boolean boolean62 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        continuousOutputModel41.reset();
        boolean boolean65 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        continuousOutputModel0.append(continuousOutputModel41);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray68 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel17);
        double double24 = continuousOutputModel17.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel26);
        double double30 = continuousOutputModel22.getFinalTime();
        boolean boolean31 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel22.requiresDenseOutput();
        double double33 = continuousOutputModel22.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel35.reset();
        continuousOutputModel35.reset();
        boolean boolean40 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        boolean boolean45 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel41);
        boolean boolean47 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel41);
        double double49 = continuousOutputModel41.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel41.handleStep(stepInterpolator50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        double double12 = continuousOutputModel6.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel6.handleStep(stepInterpolator13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel9);
        continuousOutputModel0.append(continuousOutputModel9);
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        continuousOutputModel9.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel17);
        double double25 = continuousOutputModel9.getInitialTime();
        boolean boolean26 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        double double37 = continuousOutputModel32.getInitialTime();
        double double38 = continuousOutputModel32.getFinalTime();
        continuousOutputModel32.reset();
        double double40 = continuousOutputModel32.getFinalTime();
        continuousOutputModel32.reset();
        boolean boolean42 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        double double46 = continuousOutputModel44.getInitialTime();
        continuousOutputModel44.reset();
        continuousOutputModel44.reset();
        boolean boolean49 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel44);
        continuousOutputModel44.reset();
        continuousOutputModel9.append(continuousOutputModel44);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        java.io.IOException iOException0 = new java.io.IOException();
        java.lang.Throwable[] throwableArray1 = iOException0.getSuppressed();
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException0);
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException20);
        derivativeException18.addSuppressed((java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", objArray9, (java.lang.Throwable) derivativeException18);
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        java.io.IOException iOException27 = new java.io.IOException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray9, (java.lang.Throwable) iOException27);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", objArray39);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        double double47 = continuousOutputModel43.getInitialTime();
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        java.io.IOException iOException56 = new java.io.IOException("", (java.lang.Throwable) iOException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        java.lang.Object[] objArray62 = new java.lang.Object[] { double47, mathException52, iOException55, false, continuousOutputModel59 };
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("", strArray71);
        java.io.IOException iOException76 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException76);
        java.lang.Object[] objArray79 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray71, (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray39, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray9, (java.lang.Throwable) mathException83);
        java.lang.String str85 = mathException84.getPattern();
        mathException2.addSuppressed((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException2);
        java.lang.Object[] objArray88 = mathException2.getArguments();
        java.io.IOException iOException89 = new java.io.IOException((java.lang.Throwable) mathException2);
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "java.io.IOException: hi!" + "'", str85, "java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException55);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException59);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        double double31 = continuousOutputModel18.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double32 = continuousOutputModel18.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        double double9 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean19 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator21, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException("hi!");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) mathException4);
        java.lang.Throwable[] throwableArray6 = mathException4.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException16);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", objArray19);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        java.io.IOException iOException30 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException30);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        java.io.IOException iOException36 = new java.io.IOException("", (java.lang.Throwable) iOException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        java.lang.Object[] objArray42 = new java.lang.Object[] { double27, mathException32, iOException35, false, continuousOutputModel39 };
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        java.io.IOException iOException56 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException56);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) mathException62);
        java.io.IOException iOException66 = new java.io.IOException("hi!");
        java.io.IOException iOException67 = new java.io.IOException("", (java.lang.Throwable) iOException66);
        java.io.IOException iOException68 = new java.io.IOException((java.lang.Throwable) iOException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray19, (java.lang.Throwable) iOException68);
        java.lang.Throwable[] throwableArray70 = mathException69.getSuppressed();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("", strArray80);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray80);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray80);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray70, (java.lang.Throwable) derivativeException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) mathException84);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) mathException87);
        java.lang.Throwable[] throwableArray89 = mathException87.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray89);
        java.lang.String str91 = mathException90.getPattern();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str91, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel26);
        double double30 = continuousOutputModel22.getFinalTime();
        boolean boolean31 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel22.requiresDenseOutput();
        double double33 = continuousOutputModel22.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel22);
        double double35 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel22.handleStep(stepInterpolator36, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel3);
        continuousOutputModel3.reset();
        continuousOutputModel3.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = continuousOutputModel3.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean21 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        double double28 = continuousOutputModel22.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        double double33 = continuousOutputModel29.getInitialTime();
        continuousOutputModel29.reset();
        boolean boolean35 = continuousOutputModel29.requiresDenseOutput();
        double double36 = continuousOutputModel29.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel29);
        continuousOutputModel13.append(continuousOutputModel22);
        boolean boolean39 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel22);
        continuousOutputModel22.reset();
        double double42 = continuousOutputModel22.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel22.handleStep(stepInterpolator43, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean13 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel23);
        continuousOutputModel14.append(continuousOutputModel23);
        boolean boolean28 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        double double37 = continuousOutputModel31.getFinalTime();
        continuousOutputModel23.append(continuousOutputModel31);
        double double39 = continuousOutputModel23.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel23);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        double double29 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        double double37 = continuousOutputModel32.getFinalTime();
        continuousOutputModel32.reset();
        continuousOutputModel32.reset();
        continuousOutputModel25.append(continuousOutputModel32);
        boolean boolean41 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        double double46 = continuousOutputModel42.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double48 = continuousOutputModel47.getFinalTime();
        double double49 = continuousOutputModel47.getInitialTime();
        boolean boolean50 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel47.reset();
        boolean boolean52 = continuousOutputModel47.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel47.requiresDenseOutput();
        double double54 = continuousOutputModel47.getInitialTime();
        continuousOutputModel42.append(continuousOutputModel47);
        continuousOutputModel42.reset();
        double double57 = continuousOutputModel42.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel42);
        double double59 = continuousOutputModel42.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel42.handleStep(stepInterpolator60, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean15 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        double double22 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel23);
        continuousOutputModel18.append(continuousOutputModel23);
        boolean boolean27 = continuousOutputModel23.requiresDenseOutput();
        double double28 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        double double40 = continuousOutputModel38.getInitialTime();
        double double41 = continuousOutputModel38.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel38);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        double double46 = continuousOutputModel43.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel47.reset();
        continuousOutputModel47.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        boolean boolean55 = continuousOutputModel52.requiresDenseOutput();
        continuousOutputModel52.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        double double59 = continuousOutputModel57.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel57);
        continuousOutputModel47.append(continuousOutputModel57);
        boolean boolean62 = continuousOutputModel47.requiresDenseOutput();
        boolean boolean63 = continuousOutputModel47.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel64 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean65 = continuousOutputModel64.requiresDenseOutput();
        double double66 = continuousOutputModel64.getInitialTime();
        boolean boolean67 = continuousOutputModel64.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double69 = continuousOutputModel68.getFinalTime();
        double double70 = continuousOutputModel68.getInitialTime();
        boolean boolean71 = continuousOutputModel68.requiresDenseOutput();
        continuousOutputModel68.reset();
        boolean boolean73 = continuousOutputModel68.requiresDenseOutput();
        continuousOutputModel64.append(continuousOutputModel68);
        continuousOutputModel64.reset();
        double double76 = continuousOutputModel64.getInitialTime();
        continuousOutputModel47.append(continuousOutputModel64);
        continuousOutputModel43.append(continuousOutputModel64);
        continuousOutputModel38.append(continuousOutputModel64);
        continuousOutputModel23.append(continuousOutputModel38);
        boolean boolean81 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean82 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel0.append(continuousOutputModel38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator85 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator85, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double8 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        double double12 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        boolean boolean19 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel13);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getInitialTime();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel9.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel0.append(continuousOutputModel11);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", objArray10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        double double18 = continuousOutputModel14.getInitialTime();
        java.io.IOException iOException21 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        java.io.IOException iOException27 = new java.io.IOException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        java.lang.Object[] objArray33 = new java.lang.Object[] { double18, mathException23, iOException26, false, continuousOutputModel30 };
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        java.io.IOException iOException47 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException47);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray10, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray10);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException58);
        java.lang.Throwable[] throwableArray60 = iOException58.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10, (java.lang.Throwable) iOException58);
        java.lang.String str62 = mathException61.getPattern();
        java.lang.String str63 = mathException61.getPattern();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException65);
        mathException61.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException65);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str62, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str63, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getInitialTime();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        boolean boolean13 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean34 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel30);
        continuousOutputModel11.append(continuousOutputModel30);
        boolean boolean38 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        continuousOutputModel40.append(continuousOutputModel46);
        double double50 = continuousOutputModel40.getInitialTime();
        boolean boolean51 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        double double55 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel56);
        double double60 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        double double65 = continuousOutputModel61.getInitialTime();
        continuousOutputModel61.reset();
        boolean boolean67 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel52.append(continuousOutputModel61);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean70 = continuousOutputModel69.requiresDenseOutput();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        boolean boolean78 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel69.append(continuousOutputModel73);
        continuousOutputModel69.reset();
        continuousOutputModel61.append(continuousOutputModel69);
        continuousOutputModel40.append(continuousOutputModel61);
        continuousOutputModel30.append(continuousOutputModel40);
        boolean boolean84 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel30);
        double double86 = continuousOutputModel5.getInitialTime();
        double double87 = continuousOutputModel5.getInitialTime();
        double double88 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator89, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel20);
        continuousOutputModel5.append(continuousOutputModel16);
        boolean boolean25 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        boolean boolean34 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean36 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        continuousOutputModel38.append(continuousOutputModel42);
        double double46 = continuousOutputModel38.getFinalTime();
        boolean boolean47 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean48 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean50 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel38);
        boolean boolean52 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        double double54 = continuousOutputModel38.getFinalTime();
        continuousOutputModel38.reset();
        continuousOutputModel16.append(continuousOutputModel38);
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean63 = continuousOutputModel62.requiresDenseOutput();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel66.reset();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel62.append(continuousOutputModel66);
        continuousOutputModel58.append(continuousOutputModel62);
        boolean boolean74 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean75 = continuousOutputModel58.requiresDenseOutput();
        double double76 = continuousOutputModel58.getFinalTime();
        continuousOutputModel16.append(continuousOutputModel58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel16.handleStep(stepInterpolator78, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray61 = iOException59.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) iOException59);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) mathException62);
        java.lang.Object[] objArray64 = mathException62.getArguments();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: hi!", strArray78);
        java.io.IOException iOException85 = new java.io.IOException("hi!");
        java.io.IOException iOException86 = new java.io.IOException("", (java.lang.Throwable) iOException85);
        java.io.IOException iOException87 = new java.io.IOException((java.lang.Throwable) iOException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray78, (java.lang.Throwable) iOException87);
        java.io.IOException iOException91 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException91);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray78, (java.lang.Throwable) mathException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException93);
        java.lang.String str96 = mathException95.getPattern();
        java.io.IOException iOException97 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException97);
        org.apache.commons.math.MathException mathException99 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: ", objArray64, (java.lang.Throwable) mathException98);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        double double27 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel28);
        double double32 = continuousOutputModel24.getFinalTime();
        boolean boolean33 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel24.requiresDenseOutput();
        double double35 = continuousOutputModel24.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel42.reset();
        boolean boolean47 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        continuousOutputModel36.append(continuousOutputModel38);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel50);
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        double double58 = continuousOutputModel50.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel50);
        continuousOutputModel0.append(continuousOutputModel24);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray61 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        double double28 = continuousOutputModel22.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel22);
        double double30 = continuousOutputModel14.getFinalTime();
        boolean boolean31 = continuousOutputModel14.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double32 = continuousOutputModel14.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        double double22 = continuousOutputModel0.getInitialTime();
        double double23 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double26 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        boolean boolean37 = continuousOutputModel32.requiresDenseOutput();
        double double38 = continuousOutputModel32.getFinalTime();
        continuousOutputModel32.reset();
        double double40 = continuousOutputModel32.getInitialTime();
        double double41 = continuousOutputModel32.getFinalTime();
        boolean boolean42 = continuousOutputModel32.requiresDenseOutput();
        double double43 = continuousOutputModel32.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel32);
        double double45 = continuousOutputModel32.getFinalTime();
        boolean boolean46 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel32.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        continuousOutputModel0.reset();
        double double14 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel22.requiresDenseOutput();
        double double29 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        double double31 = continuousOutputModel17.getInitialTime();
        double double32 = continuousOutputModel17.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        boolean boolean42 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel39.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        double double46 = continuousOutputModel44.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel44);
        continuousOutputModel34.append(continuousOutputModel44);
        boolean boolean49 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean50 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        double double52 = continuousOutputModel34.getInitialTime();
        boolean boolean53 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        continuousOutputModel34.reset();
        double double56 = continuousOutputModel34.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel34);
        boolean boolean58 = continuousOutputModel34.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double59 = continuousOutputModel34.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        double double19 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean21 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        double double12 = continuousOutputModel0.getFinalTime();
        double double13 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        double double16 = continuousOutputModel10.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel22);
        double double27 = continuousOutputModel22.getInitialTime();
        boolean boolean28 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        double double32 = continuousOutputModel29.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel29.append(continuousOutputModel33);
        double double37 = continuousOutputModel29.getFinalTime();
        boolean boolean38 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel29.requiresDenseOutput();
        double double40 = continuousOutputModel29.getFinalTime();
        continuousOutputModel22.append(continuousOutputModel29);
        double double42 = continuousOutputModel29.getFinalTime();
        continuousOutputModel10.append(continuousOutputModel29);
        boolean boolean44 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        double double12 = continuousOutputModel0.getInitialTime();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel9);
        continuousOutputModel0.append(continuousOutputModel9);
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        continuousOutputModel9.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        continuousOutputModel25.reset();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        double double31 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        double double36 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel32.append(continuousOutputModel37);
        double double41 = continuousOutputModel32.getFinalTime();
        continuousOutputModel25.append(continuousOutputModel32);
        continuousOutputModel32.reset();
        double double44 = continuousOutputModel32.getInitialTime();
        double double45 = continuousOutputModel32.getInitialTime();
        double double46 = continuousOutputModel32.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel32);
        double double48 = continuousOutputModel17.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        double double7 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException5);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", objArray8);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        double double16 = continuousOutputModel12.getInitialTime();
        java.io.IOException iOException19 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        java.io.IOException iOException25 = new java.io.IOException("", (java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        java.lang.Object[] objArray31 = new java.lang.Object[] { double16, mathException21, iOException24, false, continuousOutputModel28 };
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException45);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray8, (java.lang.Throwable) mathException51);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.String str57 = mathException55.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str57, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double14 = continuousOutputModel5.getInitialTime();
        boolean boolean15 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean17 = continuousOutputModel5.requiresDenseOutput();
        double double18 = continuousOutputModel5.getFinalTime();
        boolean boolean19 = continuousOutputModel5.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel22);
        double double27 = continuousOutputModel22.getInitialTime();
        continuousOutputModel22.reset();
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel30.reset();
        continuousOutputModel30.reset();
        continuousOutputModel22.append(continuousOutputModel30);
        continuousOutputModel9.append(continuousOutputModel22);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = continuousOutputModel22.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        double double23 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean25 = continuousOutputModel0.requiresDenseOutput();
        double double26 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        double double28 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel19);
        continuousOutputModel15.reset();
        boolean boolean23 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        double double30 = continuousOutputModel25.getFinalTime();
        boolean boolean31 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel25);
        double double33 = continuousOutputModel25.getFinalTime();
        continuousOutputModel25.reset();
        continuousOutputModel4.append(continuousOutputModel25);
        double double36 = continuousOutputModel25.getInitialTime();
        double double37 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel25.setInterpolatedTime(Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        double double17 = continuousOutputModel13.getInitialTime();
        continuousOutputModel13.reset();
        boolean boolean19 = continuousOutputModel13.requiresDenseOutput();
        double double20 = continuousOutputModel13.getInitialTime();
        boolean boolean21 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        boolean boolean33 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel28);
        continuousOutputModel22.append(continuousOutputModel24);
        continuousOutputModel24.reset();
        continuousOutputModel13.append(continuousOutputModel24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        double double43 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel44.requiresDenseOutput();
        double double47 = continuousOutputModel44.getFinalTime();
        continuousOutputModel44.reset();
        boolean boolean49 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel51.requiresDenseOutput();
        double double54 = continuousOutputModel51.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel51.append(continuousOutputModel55);
        boolean boolean58 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel51.reset();
        continuousOutputModel44.append(continuousOutputModel51);
        boolean boolean61 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel44);
        boolean boolean63 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel38.reset();
        continuousOutputModel24.append(continuousOutputModel38);
        continuousOutputModel0.append(continuousOutputModel24);
        boolean boolean68 = continuousOutputModel0.requiresDenseOutput();
        double double69 = continuousOutputModel0.getFinalTime();
        boolean boolean70 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray61 = iOException59.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) iOException59);
        java.lang.Object[] objArray63 = mathException62.getArguments();
        java.lang.String str64 = mathException62.getPattern();
        java.io.IOException iOException65 = new java.io.IOException("java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException68);
        java.lang.String str70 = mathException69.getPattern();
        iOException65.addSuppressed((java.lang.Throwable) mathException69);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str64, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str70, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel30);
        double double35 = continuousOutputModel30.getInitialTime();
        double double36 = continuousOutputModel30.getFinalTime();
        continuousOutputModel30.reset();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel30.append(continuousOutputModel39);
        continuousOutputModel5.append(continuousOutputModel30);
        boolean boolean48 = continuousOutputModel5.requiresDenseOutput();
        double double49 = continuousOutputModel5.getFinalTime();
        double double50 = continuousOutputModel5.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double51 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double3 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        double double7 = continuousOutputModel4.getFinalTime();
        double double8 = continuousOutputModel4.getInitialTime();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        double double12 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel26);
        double double30 = continuousOutputModel22.getFinalTime();
        boolean boolean31 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel22.requiresDenseOutput();
        double double33 = continuousOutputModel22.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel35.reset();
        continuousOutputModel35.reset();
        boolean boolean40 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        boolean boolean45 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel41);
        boolean boolean47 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel41);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean50 = continuousOutputModel49.requiresDenseOutput();
        double double51 = continuousOutputModel49.getInitialTime();
        double double52 = continuousOutputModel49.getFinalTime();
        boolean boolean53 = continuousOutputModel49.requiresDenseOutput();
        double double54 = continuousOutputModel49.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean57 = continuousOutputModel56.requiresDenseOutput();
        boolean boolean58 = continuousOutputModel56.requiresDenseOutput();
        double double59 = continuousOutputModel56.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean61 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel56.append(continuousOutputModel60);
        continuousOutputModel55.append(continuousOutputModel60);
        boolean boolean64 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel49.append(continuousOutputModel60);
        boolean boolean66 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel60);
        boolean boolean68 = continuousOutputModel41.requiresDenseOutput();
        double double69 = continuousOutputModel41.getInitialTime();
        double double70 = continuousOutputModel41.getFinalTime();
        boolean boolean71 = continuousOutputModel41.requiresDenseOutput();
        double double72 = continuousOutputModel41.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel41.handleStep(stepInterpolator73, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel17.append(continuousOutputModel27);
        boolean boolean32 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel38);
        continuousOutputModel34.reset();
        double double46 = continuousOutputModel34.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel34);
        continuousOutputModel13.append(continuousOutputModel34);
        continuousOutputModel8.append(continuousOutputModel34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        double double54 = continuousOutputModel50.getInitialTime();
        continuousOutputModel50.reset();
        double double56 = continuousOutputModel50.getInitialTime();
        continuousOutputModel50.reset();
        continuousOutputModel50.reset();
        continuousOutputModel50.reset();
        continuousOutputModel34.append(continuousOutputModel50);
        boolean boolean61 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel34.handleStep(stepInterpolator62, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        double double18 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", strArray8);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: ", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException33);
        java.lang.Object[] objArray36 = mathException35.getArguments();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", objArray36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        double double44 = continuousOutputModel40.getInitialTime();
        java.io.IOException iOException47 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException47);
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        java.io.IOException iOException53 = new java.io.IOException("", (java.lang.Throwable) iOException52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        java.lang.Object[] objArray59 = new java.lang.Object[] { double44, mathException49, iOException52, false, continuousOutputModel56 };
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        java.io.IOException iOException73 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException73);
        java.lang.Object[] objArray76 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray68, (java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray59, (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray36, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: ", objArray26, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: java.io.IOException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException82);
        java.io.IOException iOException85 = new java.io.IOException((java.lang.Throwable) mathException82);
        java.lang.String str86 = mathException82.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, org.apache.commons.math.MathException: , hi!, org.apache.commons.math.MathException: , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, org.apache.commons.math.MathException: , hi!, org.apache.commons.math.MathException: , , ]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: " + "'", str86, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        double double32 = continuousOutputModel27.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel27.append(continuousOutputModel33);
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel0.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel45);
        boolean boolean48 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double70 = continuousOutputModel69.getFinalTime();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        continuousOutputModel69.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean75 = continuousOutputModel74.requiresDenseOutput();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel69.append(continuousOutputModel74);
        continuousOutputModel58.append(continuousOutputModel69);
        double double79 = continuousOutputModel69.getFinalTime();
        continuousOutputModel50.append(continuousOutputModel69);
        continuousOutputModel41.append(continuousOutputModel69);
        continuousOutputModel0.append(continuousOutputModel69);
        boolean boolean83 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator84, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        double double14 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double16 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        double double25 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        continuousOutputModel26.reset();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        double double35 = continuousOutputModel32.getFinalTime();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel32);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel38.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean49 = continuousOutputModel48.requiresDenseOutput();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel48);
        continuousOutputModel38.reset();
        boolean boolean54 = continuousOutputModel38.requiresDenseOutput();
        double double55 = continuousOutputModel38.getFinalTime();
        continuousOutputModel26.append(continuousOutputModel38);
        continuousOutputModel12.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        double double59 = continuousOutputModel26.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double60 = continuousOutputModel26.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double3 = continuousOutputModel2.getFinalTime();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        double double6 = continuousOutputModel2.getInitialTime();
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException("hi!");
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        java.lang.Object[] objArray21 = new java.lang.Object[] { double6, mathException11, iOException14, false, continuousOutputModel18 };
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException40);
        java.lang.String str42 = mathException41.getPattern();
        java.lang.Throwable[] throwableArray43 = mathException41.getSuppressed();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray43);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str42, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        double double26 = continuousOutputModel23.getFinalTime();
        continuousOutputModel23.reset();
        boolean boolean28 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel30.append(continuousOutputModel34);
        boolean boolean37 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        continuousOutputModel23.append(continuousOutputModel30);
        boolean boolean40 = continuousOutputModel23.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel41);
        continuousOutputModel14.append(continuousOutputModel41);
        double double47 = continuousOutputModel14.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.setInterpolatedTime((double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        boolean boolean17 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel8.append(continuousOutputModel19);
        double double29 = continuousOutputModel19.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel19);
        boolean boolean31 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        double double37 = continuousOutputModel33.getInitialTime();
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        double double39 = continuousOutputModel33.getInitialTime();
        continuousOutputModel33.reset();
        continuousOutputModel19.append(continuousOutputModel33);
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel19.handleStep(stepInterpolator43, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel19);
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        double double25 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        double double27 = continuousOutputModel19.getInitialTime();
        boolean boolean28 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        boolean boolean30 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel5.requiresDenseOutput();
        double double32 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        double double24 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel13.append(continuousOutputModel25);
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        double double32 = continuousOutputModel6.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel6.handleStep(stepInterpolator33, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getFinalTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getInitialTime();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel20.reset();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel20);
        continuousOutputModel20.reset();
        continuousOutputModel20.reset();
        boolean boolean26 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel0.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        double double32 = continuousOutputModel29.getFinalTime();
        continuousOutputModel29.reset();
        boolean boolean34 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        continuousOutputModel29.append(continuousOutputModel36);
        double double39 = continuousOutputModel36.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel36);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray41 = continuousOutputModel36.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.io.IOException iOException17 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException17);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        double double28 = continuousOutputModel24.getInitialTime();
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException37 = new java.io.IOException("", (java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        java.lang.Object[] objArray43 = new java.lang.Object[] { double28, mathException33, iOException36, false, continuousOutputModel40 };
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        java.io.IOException iOException57 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException57);
        java.lang.Object[] objArray60 = mathException59.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray52, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20, (java.lang.Throwable) mathException63);
        derivativeException11.addSuppressed((java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) derivativeException11);
        java.lang.String str67 = mathException66.getPattern();
        java.lang.String str68 = mathException66.getPattern();
        java.lang.Throwable[] throwableArray69 = mathException66.getSuppressed();
        java.io.IOException iOException72 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException72);
        java.lang.Object[] objArray74 = derivativeException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException73);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException73);
        java.io.IOException iOException77 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) derivativeException73);
        java.io.IOException iOException82 = new java.io.IOException("hi!");
        java.io.IOException iOException83 = new java.io.IOException("", (java.lang.Throwable) iOException82);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException84);
        java.io.IOException iOException86 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) derivativeException84);
        derivativeException73.addSuppressed((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) derivativeException73);
        java.io.IOException iOException89 = new java.io.IOException((java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException88);
        java.lang.String[] strArray93 = new java.lang.String[] { "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException94 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: ", strArray93);
        java.io.IOException iOException95 = new java.io.IOException((java.lang.Throwable) derivativeException94);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException95);
        org.apache.commons.math.ode.DerivativeException derivativeException97 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException95);
        mathException88.addSuppressed((java.lang.Throwable) iOException95);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str67, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str68, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: ", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: hi!", strArray6);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException15);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", objArray18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        java.lang.Object[] objArray41 = new java.lang.Object[] { double26, mathException31, iOException34, false, continuousOutputModel38 };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", objArray18);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray72);
        java.io.IOException iOException77 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException77);
        java.lang.Object[] objArray80 = mathException79.getArguments();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException79);
        java.lang.String str83 = mathException82.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException82);
        mathException63.addSuppressed((java.lang.Throwable) derivativeException84);
        java.lang.Throwable[] throwableArray86 = derivativeException84.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray6, (java.lang.Throwable) derivativeException84);
        java.io.IOException iOException88 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) derivativeException84);
        java.io.IOException iOException89 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) iOException88);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str83, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean14 = continuousOutputModel10.requiresDenseOutput();
        double double15 = continuousOutputModel10.getFinalTime();
        boolean boolean16 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel10);
        double double18 = continuousOutputModel10.getFinalTime();
        continuousOutputModel10.reset();
        boolean boolean20 = continuousOutputModel10.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        double double24 = continuousOutputModel21.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel21.append(continuousOutputModel25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        double double32 = continuousOutputModel29.getInitialTime();
        continuousOutputModel21.append(continuousOutputModel29);
        boolean boolean34 = continuousOutputModel21.requiresDenseOutput();
        double double35 = continuousOutputModel21.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        double double39 = continuousOutputModel36.getFinalTime();
        continuousOutputModel36.reset();
        boolean boolean41 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        double double46 = continuousOutputModel43.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel47);
        boolean boolean50 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        continuousOutputModel36.append(continuousOutputModel43);
        boolean boolean53 = continuousOutputModel36.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel54);
        continuousOutputModel21.append(continuousOutputModel54);
        double double60 = continuousOutputModel54.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean62 = continuousOutputModel61.requiresDenseOutput();
        double double63 = continuousOutputModel61.getInitialTime();
        double double64 = continuousOutputModel61.getFinalTime();
        continuousOutputModel54.append(continuousOutputModel61);
        continuousOutputModel10.append(continuousOutputModel61);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = continuousOutputModel10.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        double double9 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean14 = continuousOutputModel10.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel15);
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel0.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel29);
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        double double39 = continuousOutputModel37.getInitialTime();
        double double40 = continuousOutputModel37.getFinalTime();
        boolean boolean41 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        double double43 = continuousOutputModel37.getFinalTime();
        double double44 = continuousOutputModel37.getFinalTime();
        continuousOutputModel37.reset();
        continuousOutputModel29.append(continuousOutputModel37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double48 = continuousOutputModel47.getFinalTime();
        double double49 = continuousOutputModel47.getInitialTime();
        boolean boolean50 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel47.reset();
        boolean boolean52 = continuousOutputModel47.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel47.requiresDenseOutput();
        double double54 = continuousOutputModel47.getInitialTime();
        double double55 = continuousOutputModel47.getFinalTime();
        continuousOutputModel37.append(continuousOutputModel47);
        continuousOutputModel37.reset();
        continuousOutputModel0.append(continuousOutputModel37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean60 = continuousOutputModel59.requiresDenseOutput();
        double double61 = continuousOutputModel59.getInitialTime();
        boolean boolean62 = continuousOutputModel59.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double64 = continuousOutputModel63.getFinalTime();
        double double65 = continuousOutputModel63.getInitialTime();
        boolean boolean66 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel63.reset();
        boolean boolean68 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel59.append(continuousOutputModel63);
        continuousOutputModel37.append(continuousOutputModel59);
        double double71 = continuousOutputModel37.getInitialTime();
        boolean boolean72 = continuousOutputModel37.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel13.reset();
        boolean boolean21 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean23 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel5.append(continuousOutputModel13);
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.append(continuousOutputModel27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        double double14 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        double double29 = continuousOutputModel26.getFinalTime();
        boolean boolean30 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        double double36 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel37);
        boolean boolean41 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel26);
        boolean boolean44 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        double double48 = continuousOutputModel45.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean50 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel45.append(continuousOutputModel49);
        continuousOutputModel45.reset();
        boolean boolean53 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean55 = continuousOutputModel45.requiresDenseOutput();
        double double56 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        boolean boolean58 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel45);
        // The following exception was thrown during execution in test generation
        try {
            double double60 = continuousOutputModel26.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean14 = continuousOutputModel10.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel15);
        double double20 = continuousOutputModel15.getInitialTime();
        double double21 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        double double23 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean25 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel15);
        boolean boolean27 = continuousOutputModel0.requiresDenseOutput();
        double double28 = continuousOutputModel0.getFinalTime();
        double double29 = continuousOutputModel0.getFinalTime();
        double double30 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        java.lang.Class<?> wildcardClass8 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        double double19 = continuousOutputModel15.getInitialTime();
        double double20 = continuousOutputModel15.getFinalTime();
        boolean boolean21 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean34 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel29);
        continuousOutputModel23.append(continuousOutputModel25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean41 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        double double50 = continuousOutputModel45.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double52 = continuousOutputModel51.getFinalTime();
        double double53 = continuousOutputModel51.getInitialTime();
        continuousOutputModel45.append(continuousOutputModel51);
        continuousOutputModel37.append(continuousOutputModel45);
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        continuousOutputModel15.append(continuousOutputModel37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean61 = continuousOutputModel60.requiresDenseOutput();
        double double62 = continuousOutputModel60.getInitialTime();
        boolean boolean63 = continuousOutputModel60.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel64 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double65 = continuousOutputModel64.getFinalTime();
        double double66 = continuousOutputModel64.getInitialTime();
        boolean boolean67 = continuousOutputModel64.requiresDenseOutput();
        continuousOutputModel64.reset();
        boolean boolean69 = continuousOutputModel64.requiresDenseOutput();
        continuousOutputModel60.append(continuousOutputModel64);
        continuousOutputModel64.reset();
        continuousOutputModel64.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel73.reset();
        boolean boolean75 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel64.append(continuousOutputModel73);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double78 = continuousOutputModel77.getFinalTime();
        double double79 = continuousOutputModel77.getInitialTime();
        boolean boolean80 = continuousOutputModel77.requiresDenseOutput();
        continuousOutputModel77.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel82 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean83 = continuousOutputModel82.requiresDenseOutput();
        double double84 = continuousOutputModel82.getInitialTime();
        continuousOutputModel77.append(continuousOutputModel82);
        continuousOutputModel64.append(continuousOutputModel82);
        double double87 = continuousOutputModel64.getInitialTime();
        continuousOutputModel64.reset();
        double double89 = continuousOutputModel64.getFinalTime();
        boolean boolean90 = continuousOutputModel64.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel64);
        continuousOutputModel4.append(continuousOutputModel64);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray93 = continuousOutputModel4.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getFinalTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean19 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel5.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel31);
        boolean boolean37 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel23);
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        double double44 = continuousOutputModel40.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean49 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel45.append(continuousOutputModel50);
        continuousOutputModel40.append(continuousOutputModel45);
        continuousOutputModel45.reset();
        boolean boolean57 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        double double69 = continuousOutputModel62.getInitialTime();
        continuousOutputModel45.append(continuousOutputModel62);
        continuousOutputModel45.reset();
        continuousOutputModel23.append(continuousOutputModel45);
        continuousOutputModel23.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        double double14 = continuousOutputModel5.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel14.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel34);
        double double38 = continuousOutputModel30.getInitialTime();
        double double39 = continuousOutputModel30.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel40);
        continuousOutputModel14.append(continuousOutputModel30);
        continuousOutputModel5.append(continuousOutputModel14);
        boolean boolean48 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel14.requiresDenseOutput();
        double double50 = continuousOutputModel14.getFinalTime();
        boolean boolean51 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel14.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray53 = continuousOutputModel14.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        double double17 = continuousOutputModel9.getFinalTime();
        continuousOutputModel9.reset();
        double double19 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel9.handleStep(stepInterpolator20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean25 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean29 = continuousOutputModel28.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        boolean boolean32 = continuousOutputModel28.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel28.append(continuousOutputModel33);
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        double double39 = continuousOutputModel33.getFinalTime();
        continuousOutputModel33.reset();
        double double41 = continuousOutputModel33.getInitialTime();
        double double42 = continuousOutputModel33.getFinalTime();
        continuousOutputModel33.reset();
        boolean boolean44 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean49 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        double double51 = continuousOutputModel45.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel45);
        continuousOutputModel45.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        double double57 = continuousOutputModel54.getFinalTime();
        boolean boolean58 = continuousOutputModel54.requiresDenseOutput();
        boolean boolean59 = continuousOutputModel54.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        double double64 = continuousOutputModel61.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel65 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double66 = continuousOutputModel65.getFinalTime();
        double double67 = continuousOutputModel65.getInitialTime();
        continuousOutputModel61.append(continuousOutputModel65);
        boolean boolean69 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel61);
        continuousOutputModel45.append(continuousOutputModel54);
        boolean boolean72 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean74 = continuousOutputModel73.requiresDenseOutput();
        boolean boolean75 = continuousOutputModel73.requiresDenseOutput();
        double double76 = continuousOutputModel73.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean78 = continuousOutputModel77.requiresDenseOutput();
        continuousOutputModel73.append(continuousOutputModel77);
        continuousOutputModel73.reset();
        boolean boolean81 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        boolean boolean83 = continuousOutputModel73.requiresDenseOutput();
        double double84 = continuousOutputModel73.getFinalTime();
        continuousOutputModel73.reset();
        boolean boolean86 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel73);
        continuousOutputModel54.reset();
        continuousOutputModel0.append(continuousOutputModel54);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double10 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double12 = continuousOutputModel5.getFinalTime();
        double double13 = continuousOutputModel5.getFinalTime();
        double double14 = continuousOutputModel5.getInitialTime();
        double double15 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        boolean boolean30 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double43 = continuousOutputModel37.getInitialTime();
        double double44 = continuousOutputModel37.getFinalTime();
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        double double49 = continuousOutputModel47.getInitialTime();
        continuousOutputModel47.reset();
        continuousOutputModel47.reset();
        continuousOutputModel37.append(continuousOutputModel47);
        continuousOutputModel16.append(continuousOutputModel47);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        continuousOutputModel54.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean60 = continuousOutputModel59.requiresDenseOutput();
        double double61 = continuousOutputModel59.getInitialTime();
        continuousOutputModel54.append(continuousOutputModel59);
        boolean boolean63 = continuousOutputModel59.requiresDenseOutput();
        continuousOutputModel59.reset();
        continuousOutputModel59.reset();
        continuousOutputModel16.append(continuousOutputModel59);
        continuousOutputModel59.reset();
        continuousOutputModel5.append(continuousOutputModel59);
        java.lang.Class<?> wildcardClass69 = continuousOutputModel59.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        double double6 = continuousOutputModel3.getFinalTime();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        double double13 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel14);
        boolean boolean17 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        continuousOutputModel3.append(continuousOutputModel10);
        continuousOutputModel3.reset();
        continuousOutputModel0.append(continuousOutputModel3);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean26 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel27.reset();
        double double33 = continuousOutputModel27.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        boolean boolean38 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        boolean boolean42 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel39);
        boolean boolean44 = continuousOutputModel39.requiresDenseOutput();
        double double45 = continuousOutputModel39.getFinalTime();
        continuousOutputModel39.reset();
        continuousOutputModel27.append(continuousOutputModel39);
        double double48 = continuousOutputModel27.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean50 = continuousOutputModel49.requiresDenseOutput();
        boolean boolean51 = continuousOutputModel49.requiresDenseOutput();
        double double52 = continuousOutputModel49.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel49.append(continuousOutputModel53);
        boolean boolean56 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel49.reset();
        continuousOutputModel27.append(continuousOutputModel49);
        double double59 = continuousOutputModel27.getFinalTime();
        continuousOutputModel27.reset();
        continuousOutputModel3.append(continuousOutputModel27);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean34 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel30);
        continuousOutputModel11.append(continuousOutputModel30);
        boolean boolean38 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        continuousOutputModel40.append(continuousOutputModel46);
        double double50 = continuousOutputModel40.getInitialTime();
        boolean boolean51 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        double double55 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel56);
        double double60 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        double double65 = continuousOutputModel61.getInitialTime();
        continuousOutputModel61.reset();
        boolean boolean67 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel52.append(continuousOutputModel61);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean70 = continuousOutputModel69.requiresDenseOutput();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        boolean boolean78 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel69.append(continuousOutputModel73);
        continuousOutputModel69.reset();
        continuousOutputModel61.append(continuousOutputModel69);
        continuousOutputModel40.append(continuousOutputModel61);
        continuousOutputModel30.append(continuousOutputModel40);
        boolean boolean84 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel30);
        continuousOutputModel5.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        double double22 = continuousOutputModel14.getInitialTime();
        boolean boolean23 = continuousOutputModel14.requiresDenseOutput();
        double double24 = continuousOutputModel14.getInitialTime();
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = continuousOutputModel14.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel3);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel3.setInterpolatedTime((double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel12);
        boolean boolean17 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean20 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean30 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        boolean boolean34 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel31);
        continuousOutputModel21.append(continuousOutputModel26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel41);
        continuousOutputModel26.append(continuousOutputModel37);
        boolean boolean46 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        double double51 = continuousOutputModel48.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        continuousOutputModel48.append(continuousOutputModel52);
        double double56 = continuousOutputModel48.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double58 = continuousOutputModel57.getFinalTime();
        double double59 = continuousOutputModel57.getInitialTime();
        boolean boolean60 = continuousOutputModel57.requiresDenseOutput();
        double double61 = continuousOutputModel57.getInitialTime();
        continuousOutputModel57.reset();
        boolean boolean63 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel48.append(continuousOutputModel57);
        continuousOutputModel37.append(continuousOutputModel48);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean67 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean68 = continuousOutputModel66.requiresDenseOutput();
        double double69 = continuousOutputModel66.getFinalTime();
        continuousOutputModel66.reset();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        double double72 = continuousOutputModel66.getInitialTime();
        continuousOutputModel48.append(continuousOutputModel66);
        double double74 = continuousOutputModel48.getFinalTime();
        continuousOutputModel48.reset();
        double double76 = continuousOutputModel48.getFinalTime();
        boolean boolean77 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel48);
        boolean boolean79 = continuousOutputModel48.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double10 = continuousOutputModel0.getInitialTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        boolean boolean27 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel29.append(continuousOutputModel33);
        continuousOutputModel29.reset();
        continuousOutputModel21.append(continuousOutputModel29);
        continuousOutputModel0.append(continuousOutputModel21);
        boolean boolean43 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean46 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        double double10 = continuousOutputModel4.getFinalTime();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        boolean boolean14 = continuousOutputModel4.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        double double12 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        boolean boolean19 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getFinalTime();
        continuousOutputModel21.reset();
        continuousOutputModel0.append(continuousOutputModel21);
        continuousOutputModel0.reset();
        boolean boolean29 = continuousOutputModel0.requiresDenseOutput();
        double double30 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double31 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        java.io.IOException iOException12 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException12);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", objArray15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException32 = new java.io.IOException("", (java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        java.lang.Object[] objArray38 = new java.lang.Object[] { double23, mathException28, iOException31, false, continuousOutputModel35 };
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException52);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray63 = mathException62.getSuppressed();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: ", strArray77);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray63);
        java.io.IOException iOException90 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException90);
        java.io.IOException iOException93 = new java.io.IOException((java.lang.Throwable) mathException92);
        mathException87.addSuppressed((java.lang.Throwable) mathException92);
        java.io.IOException iOException95 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException92);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException96);
        java.lang.Object[] objArray98 = derivativeException96.getArguments();
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean15 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel17);
        double double24 = continuousOutputModel17.getFinalTime();
        double double25 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        double double15 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        double double27 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel28);
        double double32 = continuousOutputModel24.getInitialTime();
        double double33 = continuousOutputModel24.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel34.reset();
        double double38 = continuousOutputModel34.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel34);
        double double40 = continuousOutputModel34.getInitialTime();
        double double41 = continuousOutputModel34.getFinalTime();
        boolean boolean42 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel34);
        continuousOutputModel5.append(continuousOutputModel34);
        double double45 = continuousOutputModel5.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double46 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getFinalTime();
        double double5 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        double double11 = continuousOutputModel8.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel12);
        continuousOutputModel7.append(continuousOutputModel12);
        continuousOutputModel12.reset();
        double double17 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        continuousOutputModel0.reset();
        double double20 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double14 = continuousOutputModel5.getInitialTime();
        double double15 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double22 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel23);
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        continuousOutputModel5.append(continuousOutputModel17);
        continuousOutputModel5.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray34 = continuousOutputModel5.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean29 = continuousOutputModel28.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        boolean boolean32 = continuousOutputModel28.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel23.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        boolean boolean42 = continuousOutputModel39.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel28.append(continuousOutputModel39);
        continuousOutputModel18.append(continuousOutputModel28);
        continuousOutputModel28.reset();
        boolean boolean50 = continuousOutputModel28.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel28.handleStep(stepInterpolator51, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel13.reset();
        boolean boolean21 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        boolean boolean27 = continuousOutputModel23.requiresDenseOutput();
        double double28 = continuousOutputModel23.getFinalTime();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel23);
        continuousOutputModel13.reset();
        double double32 = continuousOutputModel13.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel13);
        boolean boolean34 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel13.requiresDenseOutput();
        double double36 = continuousOutputModel13.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel13.handleStep(stepInterpolator37, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        double double15 = continuousOutputModel9.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        double double20 = continuousOutputModel16.getInitialTime();
        continuousOutputModel16.reset();
        boolean boolean22 = continuousOutputModel16.requiresDenseOutput();
        double double23 = continuousOutputModel16.getInitialTime();
        continuousOutputModel9.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        double double30 = continuousOutputModel26.getInitialTime();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        double double32 = continuousOutputModel26.getInitialTime();
        double double33 = continuousOutputModel26.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel26);
        double double35 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        boolean boolean40 = continuousOutputModel36.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel41);
        double double46 = continuousOutputModel41.getInitialTime();
        boolean boolean47 = continuousOutputModel41.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        double double51 = continuousOutputModel48.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        continuousOutputModel48.append(continuousOutputModel52);
        double double56 = continuousOutputModel48.getFinalTime();
        boolean boolean57 = continuousOutputModel48.requiresDenseOutput();
        boolean boolean58 = continuousOutputModel48.requiresDenseOutput();
        double double59 = continuousOutputModel48.getFinalTime();
        continuousOutputModel41.append(continuousOutputModel48);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean62 = continuousOutputModel61.requiresDenseOutput();
        boolean boolean63 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel61.reset();
        boolean boolean65 = continuousOutputModel61.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel61.append(continuousOutputModel66);
        double double71 = continuousOutputModel66.getInitialTime();
        double double72 = continuousOutputModel66.getFinalTime();
        continuousOutputModel66.reset();
        continuousOutputModel66.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel75 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean76 = continuousOutputModel75.requiresDenseOutput();
        boolean boolean77 = continuousOutputModel75.requiresDenseOutput();
        double double78 = continuousOutputModel75.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel79 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean80 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel75.append(continuousOutputModel79);
        continuousOutputModel66.append(continuousOutputModel75);
        continuousOutputModel41.append(continuousOutputModel66);
        double double84 = continuousOutputModel41.getInitialTime();
        double double85 = continuousOutputModel41.getFinalTime();
        continuousOutputModel41.reset();
        continuousOutputModel0.append(continuousOutputModel41);
        double double88 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray89 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        double double15 = continuousOutputModel0.getInitialTime();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getFinalTime();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double19 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getInitialTime();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel9.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        double double29 = continuousOutputModel25.getInitialTime();
        double double30 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        double double34 = continuousOutputModel31.getFinalTime();
        continuousOutputModel31.reset();
        boolean boolean36 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        boolean boolean45 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel31.append(continuousOutputModel38);
        boolean boolean48 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel31);
        boolean boolean50 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        boolean boolean55 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel25.handleStep(stepInterpolator56, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        double double14 = continuousOutputModel11.getFinalTime();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel11.handleStep(stepInterpolator18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel30);
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel30);
        double double37 = continuousOutputModel0.getInitialTime();
        double double38 = continuousOutputModel0.getInitialTime();
        double double39 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray40 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        double double13 = continuousOutputModel6.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel6);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = continuousOutputModel6.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double15 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        double double28 = continuousOutputModel24.getInitialTime();
        continuousOutputModel24.reset();
        boolean boolean30 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel24);
        double double32 = continuousOutputModel16.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel16);
        boolean boolean34 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        double double36 = continuousOutputModel5.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double37 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.lang.Throwable[] throwableArray56 = mathException54.getSuppressed();
        java.io.IOException iOException62 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException62);
        java.lang.Object[] objArray65 = mathException64.getArguments();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", objArray65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray65);
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) iOException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray56);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("", strArray82);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray82);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray82);
        java.io.IOException iOException86 = new java.io.IOException((java.lang.Throwable) derivativeException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException86);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) iOException86);
        java.io.IOException iOException89 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) iOException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) iOException88);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException88);
        java.lang.String[] strArray94 = new java.lang.String[] { "org.apache.commons.math.MathException: org.apache.commons.math.MathException: " };
        org.apache.commons.math.ode.DerivativeException derivativeException95 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: hi!", strArray94);
        java.lang.String str96 = derivativeException95.getPattern();
        java.lang.Object[] objArray97 = derivativeException95.getArguments();
        java.io.IOException iOException98 = new java.io.IOException((java.lang.Throwable) derivativeException95);
        iOException88.addSuppressed((java.lang.Throwable) derivativeException95);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "java.io.IOException: hi!" + "'", str96, "java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[org.apache.commons.math.MathException: org.apache.commons.math.MathException: ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[org.apache.commons.math.MathException: org.apache.commons.math.MathException: ]");
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel31);
        boolean boolean37 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel23);
        continuousOutputModel23.reset();
        boolean boolean40 = continuousOutputModel23.requiresDenseOutput();
        double double41 = continuousOutputModel23.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel23.setInterpolatedTime((double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray9 = iOException5.getSuppressed();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        java.io.IOException iOException17 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException17);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException38);
        java.lang.Object[] objArray41 = mathException40.getArguments();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", objArray41);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        double double49 = continuousOutputModel45.getInitialTime();
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException52);
        java.io.IOException iOException57 = new java.io.IOException("hi!");
        java.io.IOException iOException58 = new java.io.IOException("", (java.lang.Throwable) iOException57);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException57);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        java.lang.Object[] objArray64 = new java.lang.Object[] { double49, mathException54, iOException57, false, continuousOutputModel61 };
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("", strArray73);
        java.io.IOException iOException78 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException78);
        java.lang.Object[] objArray81 = mathException80.getArguments();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray73, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray41, (java.lang.Throwable) mathException84);
        derivativeException32.addSuppressed((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException84);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException84);
        mathException10.addSuppressed((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", (java.lang.Throwable) mathException10);
        java.lang.Object[] objArray92 = mathException10.getArguments();
        java.lang.String str93 = mathException10.getPattern();
        java.lang.Object[] objArray94 = mathException10.getArguments();
        java.lang.Object[] objArray95 = mathException10.getArguments();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str93, "java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException55);
        java.lang.String str59 = mathException58.getPattern();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str59, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        double double30 = continuousOutputModel26.getInitialTime();
        continuousOutputModel26.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double43 = continuousOutputModel37.getInitialTime();
        double double44 = continuousOutputModel37.getFinalTime();
        continuousOutputModel37.reset();
        double double46 = continuousOutputModel37.getFinalTime();
        continuousOutputModel26.append(continuousOutputModel37);
        continuousOutputModel11.append(continuousOutputModel26);
        double double49 = continuousOutputModel26.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double50 = continuousOutputModel26.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        double double16 = continuousOutputModel10.getInitialTime();
        double double17 = continuousOutputModel10.getFinalTime();
        boolean boolean18 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean31 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel18.handleStep(stepInterpolator32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        double double22 = continuousOutputModel20.getInitialTime();
        double double23 = continuousOutputModel20.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        continuousOutputModel34.append(continuousOutputModel39);
        continuousOutputModel29.append(continuousOutputModel39);
        boolean boolean44 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel50);
        continuousOutputModel46.reset();
        double double58 = continuousOutputModel46.getInitialTime();
        continuousOutputModel29.append(continuousOutputModel46);
        continuousOutputModel25.append(continuousOutputModel46);
        continuousOutputModel20.append(continuousOutputModel46);
        continuousOutputModel5.append(continuousOutputModel20);
        boolean boolean63 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean64 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean65 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean66 = continuousOutputModel20.requiresDenseOutput();
        double double67 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel20.handleStep(stepInterpolator68, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean15 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean17 = continuousOutputModel10.requiresDenseOutput();
        double double18 = continuousOutputModel10.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double19 = continuousOutputModel10.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double10 = continuousOutputModel0.getInitialTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        boolean boolean27 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel29.append(continuousOutputModel33);
        continuousOutputModel29.reset();
        continuousOutputModel21.append(continuousOutputModel29);
        continuousOutputModel0.append(continuousOutputModel21);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean12 = continuousOutputModel8.requiresDenseOutput();
        double double13 = continuousOutputModel8.getFinalTime();
        boolean boolean14 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel8.requiresDenseOutput();
        double double17 = continuousOutputModel8.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean19 = continuousOutputModel8.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel8.handleStep(stepInterpolator20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        double double9 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean14 = continuousOutputModel10.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel15);
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel0.append(continuousOutputModel15);
        double double24 = continuousOutputModel15.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel29);
        double double33 = continuousOutputModel25.getInitialTime();
        boolean boolean34 = continuousOutputModel25.requiresDenseOutput();
        double double35 = continuousOutputModel25.getInitialTime();
        boolean boolean36 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        boolean boolean46 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel41);
        continuousOutputModel37.reset();
        continuousOutputModel25.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        continuousOutputModel15.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        double double54 = continuousOutputModel37.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel37.setInterpolatedTime((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel7.append(continuousOutputModel11);
        double double23 = continuousOutputModel11.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException9);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", objArray12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        double double20 = continuousOutputModel16.getInitialTime();
        java.io.IOException iOException23 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException23);
        java.io.IOException iOException28 = new java.io.IOException("hi!");
        java.io.IOException iOException29 = new java.io.IOException("", (java.lang.Throwable) iOException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        java.lang.Object[] objArray35 = new java.lang.Object[] { double20, mathException25, iOException28, false, continuousOutputModel32 };
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException49);
        java.lang.Object[] objArray52 = mathException51.getArguments();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray12, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", objArray12);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException60);
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12, (java.lang.Throwable) iOException60);
        java.lang.String str64 = mathException63.getPattern();
        java.lang.String str65 = mathException63.getPattern();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException67);
        mathException63.addSuppressed((java.lang.Throwable) mathException67);
        java.lang.Object[] objArray70 = mathException63.getArguments();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray70);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("", strArray83);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray83);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray83);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("", strArray83);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException", strArray83);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("hi!", objArray70, (java.lang.Throwable) derivativeException88);
        java.lang.String str91 = mathException90.getPattern();
        java.lang.Object[] objArray92 = mathException90.getArguments();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str64, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str65, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        double double24 = continuousOutputModel18.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel18.handleStep(stepInterpolator25, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean4 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel3);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double9 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        double double39 = continuousOutputModel33.getInitialTime();
        boolean boolean40 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        double double45 = continuousOutputModel41.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        boolean boolean48 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel46.reset();
        boolean boolean50 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double52 = continuousOutputModel51.getFinalTime();
        double double53 = continuousOutputModel51.getInitialTime();
        boolean boolean54 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel51);
        continuousOutputModel41.append(continuousOutputModel46);
        continuousOutputModel46.reset();
        continuousOutputModel46.reset();
        double double59 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        double double61 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        continuousOutputModel33.append(continuousOutputModel46);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel64 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double65 = continuousOutputModel64.getFinalTime();
        double double66 = continuousOutputModel64.getInitialTime();
        double double67 = continuousOutputModel64.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double69 = continuousOutputModel68.getFinalTime();
        double double70 = continuousOutputModel68.getInitialTime();
        continuousOutputModel64.append(continuousOutputModel68);
        double double72 = continuousOutputModel64.getInitialTime();
        boolean boolean73 = continuousOutputModel64.requiresDenseOutput();
        double double74 = continuousOutputModel64.getInitialTime();
        boolean boolean75 = continuousOutputModel64.requiresDenseOutput();
        continuousOutputModel64.reset();
        continuousOutputModel64.reset();
        double double78 = continuousOutputModel64.getFinalTime();
        continuousOutputModel33.append(continuousOutputModel64);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        boolean boolean15 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.setInterpolatedTime((double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean31 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        double double33 = continuousOutputModel18.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        double double38 = continuousOutputModel34.getInitialTime();
        continuousOutputModel34.reset();
        boolean boolean40 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel34.requiresDenseOutput();
        double double42 = continuousOutputModel34.getFinalTime();
        boolean boolean43 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double45 = continuousOutputModel44.getFinalTime();
        double double46 = continuousOutputModel44.getInitialTime();
        double double47 = continuousOutputModel44.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel44.append(continuousOutputModel48);
        double double52 = continuousOutputModel44.getInitialTime();
        double double53 = continuousOutputModel44.getFinalTime();
        continuousOutputModel44.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel55.reset();
        boolean boolean59 = continuousOutputModel55.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double61 = continuousOutputModel60.getFinalTime();
        double double62 = continuousOutputModel60.getInitialTime();
        boolean boolean63 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel55.append(continuousOutputModel60);
        continuousOutputModel60.reset();
        double double66 = continuousOutputModel60.getInitialTime();
        double double67 = continuousOutputModel60.getFinalTime();
        continuousOutputModel60.reset();
        boolean boolean69 = continuousOutputModel60.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel70 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean71 = continuousOutputModel70.requiresDenseOutput();
        double double72 = continuousOutputModel70.getInitialTime();
        boolean boolean73 = continuousOutputModel70.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double75 = continuousOutputModel74.getFinalTime();
        double double76 = continuousOutputModel74.getInitialTime();
        boolean boolean77 = continuousOutputModel74.requiresDenseOutput();
        continuousOutputModel74.reset();
        boolean boolean79 = continuousOutputModel74.requiresDenseOutput();
        continuousOutputModel70.append(continuousOutputModel74);
        continuousOutputModel74.reset();
        continuousOutputModel74.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel83 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel83.reset();
        boolean boolean85 = continuousOutputModel83.requiresDenseOutput();
        continuousOutputModel74.append(continuousOutputModel83);
        continuousOutputModel60.append(continuousOutputModel74);
        continuousOutputModel44.append(continuousOutputModel60);
        boolean boolean89 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel60);
        boolean boolean91 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel34);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = continuousOutputModel18.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        double double42 = continuousOutputModel39.getInitialTime();
        boolean boolean43 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean44 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel39);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        double double50 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        boolean boolean52 = continuousOutputModel46.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel46.requiresDenseOutput();
        double double54 = continuousOutputModel46.getFinalTime();
        boolean boolean55 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        double double59 = continuousOutputModel56.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double61 = continuousOutputModel60.getFinalTime();
        double double62 = continuousOutputModel60.getInitialTime();
        continuousOutputModel56.append(continuousOutputModel60);
        double double64 = continuousOutputModel56.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel65 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double66 = continuousOutputModel65.getFinalTime();
        double double67 = continuousOutputModel65.getInitialTime();
        boolean boolean68 = continuousOutputModel65.requiresDenseOutput();
        double double69 = continuousOutputModel65.getInitialTime();
        continuousOutputModel65.reset();
        boolean boolean71 = continuousOutputModel65.requiresDenseOutput();
        continuousOutputModel56.append(continuousOutputModel65);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean74 = continuousOutputModel73.requiresDenseOutput();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double78 = continuousOutputModel77.getFinalTime();
        double double79 = continuousOutputModel77.getInitialTime();
        boolean boolean80 = continuousOutputModel77.requiresDenseOutput();
        continuousOutputModel77.reset();
        boolean boolean82 = continuousOutputModel77.requiresDenseOutput();
        continuousOutputModel73.append(continuousOutputModel77);
        continuousOutputModel73.reset();
        continuousOutputModel65.append(continuousOutputModel73);
        double double86 = continuousOutputModel73.getInitialTime();
        continuousOutputModel46.append(continuousOutputModel73);
        continuousOutputModel46.reset();
        continuousOutputModel39.append(continuousOutputModel46);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel39.setInterpolatedTime(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        double double29 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        double double37 = continuousOutputModel32.getFinalTime();
        continuousOutputModel32.reset();
        continuousOutputModel32.reset();
        continuousOutputModel25.append(continuousOutputModel32);
        boolean boolean41 = continuousOutputModel25.requiresDenseOutput();
        double double42 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        boolean boolean48 = continuousOutputModel44.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        double double53 = continuousOutputModel51.getInitialTime();
        boolean boolean54 = continuousOutputModel51.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double56 = continuousOutputModel55.getFinalTime();
        double double57 = continuousOutputModel55.getInitialTime();
        boolean boolean58 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel55.reset();
        boolean boolean60 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel51.append(continuousOutputModel55);
        continuousOutputModel49.append(continuousOutputModel51);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean64 = continuousOutputModel63.requiresDenseOutput();
        boolean boolean65 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel63.reset();
        boolean boolean67 = continuousOutputModel63.requiresDenseOutput();
        boolean boolean68 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel49.append(continuousOutputModel63);
        continuousOutputModel44.append(continuousOutputModel63);
        boolean boolean71 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel63.reset();
        continuousOutputModel25.append(continuousOutputModel63);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        double double12 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel13);
        continuousOutputModel8.append(continuousOutputModel13);
        double double17 = continuousOutputModel8.getFinalTime();
        boolean boolean18 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        continuousOutputModel0.append(continuousOutputModel8);
        double double21 = continuousOutputModel0.getFinalTime();
        boolean boolean22 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        double double9 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel11);
        double double15 = continuousOutputModel7.getInitialTime();
        double double16 = continuousOutputModel7.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        double double21 = continuousOutputModel17.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel17);
        double double23 = continuousOutputModel17.getInitialTime();
        double double24 = continuousOutputModel17.getFinalTime();
        boolean boolean25 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        double double28 = continuousOutputModel17.getInitialTime();
        boolean boolean29 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        double double34 = continuousOutputModel30.getInitialTime();
        continuousOutputModel30.reset();
        boolean boolean36 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel30.requiresDenseOutput();
        double double38 = continuousOutputModel30.getFinalTime();
        boolean boolean39 = continuousOutputModel30.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        double double43 = continuousOutputModel40.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double45 = continuousOutputModel44.getFinalTime();
        double double46 = continuousOutputModel44.getInitialTime();
        continuousOutputModel40.append(continuousOutputModel44);
        double double48 = continuousOutputModel40.getInitialTime();
        double double49 = continuousOutputModel40.getFinalTime();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel51.reset();
        boolean boolean55 = continuousOutputModel51.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        boolean boolean59 = continuousOutputModel56.requiresDenseOutput();
        continuousOutputModel51.append(continuousOutputModel56);
        continuousOutputModel56.reset();
        double double62 = continuousOutputModel56.getInitialTime();
        double double63 = continuousOutputModel56.getFinalTime();
        continuousOutputModel56.reset();
        boolean boolean65 = continuousOutputModel56.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean67 = continuousOutputModel66.requiresDenseOutput();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel70 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double71 = continuousOutputModel70.getFinalTime();
        double double72 = continuousOutputModel70.getInitialTime();
        boolean boolean73 = continuousOutputModel70.requiresDenseOutput();
        continuousOutputModel70.reset();
        boolean boolean75 = continuousOutputModel70.requiresDenseOutput();
        continuousOutputModel66.append(continuousOutputModel70);
        continuousOutputModel70.reset();
        continuousOutputModel70.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel79 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel79.reset();
        boolean boolean81 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel70.append(continuousOutputModel79);
        continuousOutputModel56.append(continuousOutputModel70);
        continuousOutputModel40.append(continuousOutputModel56);
        boolean boolean85 = continuousOutputModel56.requiresDenseOutput();
        continuousOutputModel30.append(continuousOutputModel56);
        boolean boolean87 = continuousOutputModel56.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel17.handleStep(stepInterpolator89, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        double double12 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel0.reset();
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean13 = continuousOutputModel7.requiresDenseOutput();
        double double14 = continuousOutputModel7.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean16 = continuousOutputModel7.requiresDenseOutput();
        double double17 = continuousOutputModel7.getFinalTime();
        double double18 = continuousOutputModel7.getFinalTime();
        boolean boolean19 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel29);
        double double33 = continuousOutputModel25.getInitialTime();
        double double34 = continuousOutputModel25.getFinalTime();
        continuousOutputModel21.append(continuousOutputModel25);
        boolean boolean36 = continuousOutputModel21.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel21.requiresDenseOutput();
        double double38 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        continuousOutputModel7.append(continuousOutputModel21);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel21.setInterpolatedTime((double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        double double24 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel13.append(continuousOutputModel25);
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        continuousOutputModel13.reset();
        double double33 = continuousOutputModel13.getFinalTime();
        double double34 = continuousOutputModel13.getInitialTime();
        double double35 = continuousOutputModel13.getInitialTime();
        double double36 = continuousOutputModel13.getFinalTime();
        double double37 = continuousOutputModel13.getFinalTime();
        boolean boolean38 = continuousOutputModel13.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean12 = continuousOutputModel8.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel8.append(continuousOutputModel17);
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel29);
        double double33 = continuousOutputModel25.getFinalTime();
        boolean boolean34 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel25.handleStep(stepInterpolator36, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getInitialTime();
        double double12 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel7.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double17 = continuousOutputModel7.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        continuousOutputModel17.reset();
        continuousOutputModel9.append(continuousOutputModel17);
        double double30 = continuousOutputModel17.getInitialTime();
        double double31 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        double double12 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel24);
        boolean boolean27 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        double double32 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double45 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        continuousOutputModel13.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double50 = continuousOutputModel37.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray51 = continuousOutputModel37.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        double double10 = continuousOutputModel4.getFinalTime();
        double double11 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel13.reset();
        continuousOutputModel4.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel13.requiresDenseOutput();
        double double24 = continuousOutputModel13.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel13.setInterpolatedTime((double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        double double27 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel28);
        continuousOutputModel14.append(continuousOutputModel22);
        double double33 = continuousOutputModel14.getInitialTime();
        boolean boolean34 = continuousOutputModel14.requiresDenseOutput();
        double double35 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        double double39 = continuousOutputModel36.getFinalTime();
        continuousOutputModel36.reset();
        boolean boolean41 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        continuousOutputModel14.append(continuousOutputModel36);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel36.handleStep(stepInterpolator44, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        double double32 = continuousOutputModel27.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel27.append(continuousOutputModel33);
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel0.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel45);
        boolean boolean48 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double70 = continuousOutputModel69.getFinalTime();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        continuousOutputModel69.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean75 = continuousOutputModel74.requiresDenseOutput();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel69.append(continuousOutputModel74);
        continuousOutputModel58.append(continuousOutputModel69);
        double double79 = continuousOutputModel69.getFinalTime();
        continuousOutputModel50.append(continuousOutputModel69);
        continuousOutputModel41.append(continuousOutputModel69);
        continuousOutputModel0.append(continuousOutputModel69);
        double double83 = continuousOutputModel69.getInitialTime();
        double double84 = continuousOutputModel69.getFinalTime();
        double double85 = continuousOutputModel69.getFinalTime();
        double double86 = continuousOutputModel69.getInitialTime();
        double double87 = continuousOutputModel69.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel69.handleStep(stepInterpolator88, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getInitialTime();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double11 = continuousOutputModel0.getInitialTime();
        java.lang.Class<?> wildcardClass12 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel31);
        boolean boolean37 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        double double49 = continuousOutputModel47.getInitialTime();
        double double50 = continuousOutputModel47.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel47);
        boolean boolean52 = continuousOutputModel39.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel53.reset();
        boolean boolean57 = continuousOutputModel53.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean63 = continuousOutputModel62.requiresDenseOutput();
        boolean boolean64 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        continuousOutputModel53.append(continuousOutputModel62);
        continuousOutputModel39.append(continuousOutputModel62);
        double double68 = continuousOutputModel39.getInitialTime();
        boolean boolean69 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel39);
        boolean boolean71 = continuousOutputModel39.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel72 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double73 = continuousOutputModel72.getFinalTime();
        continuousOutputModel72.reset();
        continuousOutputModel72.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel76 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double77 = continuousOutputModel76.getFinalTime();
        double double78 = continuousOutputModel76.getInitialTime();
        double double79 = continuousOutputModel76.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel80 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double81 = continuousOutputModel80.getFinalTime();
        double double82 = continuousOutputModel80.getInitialTime();
        continuousOutputModel76.append(continuousOutputModel80);
        double double84 = continuousOutputModel76.getInitialTime();
        double double85 = continuousOutputModel76.getFinalTime();
        continuousOutputModel72.append(continuousOutputModel76);
        double double87 = continuousOutputModel72.getInitialTime();
        double double88 = continuousOutputModel72.getFinalTime();
        continuousOutputModel39.append(continuousOutputModel72);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.Throwable[] throwableArray9 = derivativeException8.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", objArray21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        double double29 = continuousOutputModel25.getInitialTime();
        java.io.IOException iOException32 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        java.lang.Object[] objArray44 = new java.lang.Object[] { double29, mathException34, iOException37, false, continuousOutputModel41 };
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        java.io.IOException iOException58 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException58);
        java.lang.Object[] objArray61 = mathException60.getArguments();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21, (java.lang.Throwable) mathException64);
        java.io.IOException iOException68 = new java.io.IOException("hi!");
        java.io.IOException iOException69 = new java.io.IOException("", (java.lang.Throwable) iOException68);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray21, (java.lang.Throwable) iOException70);
        java.lang.Object[] objArray72 = mathException71.getArguments();
        derivativeException10.addSuppressed((java.lang.Throwable) mathException71);
        java.lang.Object[] objArray74 = derivativeException10.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double16 = continuousOutputModel0.getFinalTime();
        double double17 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        double double24 = continuousOutputModel20.getInitialTime();
        continuousOutputModel20.reset();
        boolean boolean26 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel20);
        double double28 = continuousOutputModel20.getFinalTime();
        continuousOutputModel20.reset();
        double double30 = continuousOutputModel20.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel20.handleStep(stepInterpolator32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        boolean boolean24 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel25);
        continuousOutputModel15.append(continuousOutputModel20);
        continuousOutputModel6.append(continuousOutputModel15);
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean37 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel38);
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        double double44 = continuousOutputModel38.getFinalTime();
        continuousOutputModel38.reset();
        continuousOutputModel38.reset();
        continuousOutputModel6.append(continuousOutputModel38);
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        boolean boolean52 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel49.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean55 = continuousOutputModel54.requiresDenseOutput();
        double double56 = continuousOutputModel54.getInitialTime();
        continuousOutputModel49.append(continuousOutputModel54);
        boolean boolean58 = continuousOutputModel54.requiresDenseOutput();
        continuousOutputModel54.reset();
        continuousOutputModel6.append(continuousOutputModel54);
        boolean boolean61 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel54.handleStep(stepInterpolator62, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        continuousOutputModel12.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel12.append(continuousOutputModel22);
        continuousOutputModel12.reset();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        double double29 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean31 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel9);
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        double double15 = continuousOutputModel9.getFinalTime();
        continuousOutputModel9.reset();
        double double17 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        boolean boolean22 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel23);
        boolean boolean28 = continuousOutputModel23.requiresDenseOutput();
        double double29 = continuousOutputModel23.getFinalTime();
        continuousOutputModel23.reset();
        double double31 = continuousOutputModel23.getInitialTime();
        boolean boolean32 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel23);
        boolean boolean34 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        double double36 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        double double16 = continuousOutputModel4.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel4.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        double double27 = continuousOutputModel22.getFinalTime();
        continuousOutputModel4.append(continuousOutputModel22);
        continuousOutputModel22.reset();
        double double30 = continuousOutputModel22.getInitialTime();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel32.requiresDenseOutput();
        double double35 = continuousOutputModel32.getFinalTime();
        double double36 = continuousOutputModel32.getInitialTime();
        double double37 = continuousOutputModel32.getFinalTime();
        boolean boolean38 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel32);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getFinalTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel6.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getInitialTime();
        continuousOutputModel6.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        double double22 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel23.append(continuousOutputModel33);
        boolean boolean38 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel23.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double45 = continuousOutputModel44.getFinalTime();
        double double46 = continuousOutputModel44.getInitialTime();
        boolean boolean47 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        boolean boolean49 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel40.append(continuousOutputModel44);
        continuousOutputModel40.reset();
        double double52 = continuousOutputModel40.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel40);
        continuousOutputModel19.append(continuousOutputModel40);
        continuousOutputModel14.append(continuousOutputModel40);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        boolean boolean59 = continuousOutputModel56.requiresDenseOutput();
        double double60 = continuousOutputModel56.getInitialTime();
        continuousOutputModel56.reset();
        double double62 = continuousOutputModel56.getInitialTime();
        continuousOutputModel56.reset();
        continuousOutputModel56.reset();
        continuousOutputModel56.reset();
        continuousOutputModel40.append(continuousOutputModel56);
        continuousOutputModel40.reset();
        continuousOutputModel0.append(continuousOutputModel40);
        continuousOutputModel40.reset();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel7.append(continuousOutputModel11);
        double double23 = continuousOutputModel11.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel25);
        double double31 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        continuousOutputModel12.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel12.append(continuousOutputModel22);
        continuousOutputModel12.reset();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        double double29 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean31 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        double double33 = continuousOutputModel12.getFinalTime();
        boolean boolean34 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        double double37 = continuousOutputModel35.getInitialTime();
        boolean boolean38 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel39);
        boolean boolean43 = continuousOutputModel39.requiresDenseOutput();
        double double44 = continuousOutputModel39.getInitialTime();
        double double45 = continuousOutputModel39.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel46.reset();
        double double49 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        continuousOutputModel39.append(continuousOutputModel46);
        continuousOutputModel12.append(continuousOutputModel46);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel53.reset();
        boolean boolean57 = continuousOutputModel53.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel53.append(continuousOutputModel58);
        continuousOutputModel58.reset();
        double double64 = continuousOutputModel58.getInitialTime();
        double double65 = continuousOutputModel58.getFinalTime();
        continuousOutputModel58.reset();
        boolean boolean67 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean69 = continuousOutputModel68.requiresDenseOutput();
        double double70 = continuousOutputModel68.getInitialTime();
        boolean boolean71 = continuousOutputModel68.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel72 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double73 = continuousOutputModel72.getFinalTime();
        double double74 = continuousOutputModel72.getInitialTime();
        boolean boolean75 = continuousOutputModel72.requiresDenseOutput();
        continuousOutputModel72.reset();
        boolean boolean77 = continuousOutputModel72.requiresDenseOutput();
        continuousOutputModel68.append(continuousOutputModel72);
        continuousOutputModel72.reset();
        continuousOutputModel72.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel81 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel81.reset();
        boolean boolean83 = continuousOutputModel81.requiresDenseOutput();
        continuousOutputModel72.append(continuousOutputModel81);
        continuousOutputModel58.append(continuousOutputModel72);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel86 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean87 = continuousOutputModel86.requiresDenseOutput();
        boolean boolean88 = continuousOutputModel86.requiresDenseOutput();
        double double89 = continuousOutputModel86.getFinalTime();
        continuousOutputModel86.reset();
        boolean boolean91 = continuousOutputModel86.requiresDenseOutput();
        continuousOutputModel86.reset();
        double double93 = continuousOutputModel86.getInitialTime();
        continuousOutputModel72.append(continuousOutputModel86);
        continuousOutputModel72.reset();
        continuousOutputModel12.append(continuousOutputModel72);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel72.handleStep(stepInterpolator97, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        double double21 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel25);
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        boolean boolean32 = continuousOutputModel25.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = continuousOutputModel25.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel3.requiresDenseOutput();
        double double10 = continuousOutputModel3.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel3);
        double double12 = continuousOutputModel0.getFinalTime();
        double double13 = continuousOutputModel0.getFinalTime();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean55 = continuousOutputModel54.requiresDenseOutput();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel58);
        continuousOutputModel43.append(continuousOutputModel54);
        continuousOutputModel33.append(continuousOutputModel43);
        continuousOutputModel0.append(continuousOutputModel43);
        continuousOutputModel0.reset();
        double double66 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel67 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double68 = continuousOutputModel67.getFinalTime();
        double double69 = continuousOutputModel67.getInitialTime();
        double double70 = continuousOutputModel67.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel71 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double72 = continuousOutputModel71.getFinalTime();
        double double73 = continuousOutputModel71.getInitialTime();
        continuousOutputModel67.append(continuousOutputModel71);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel75 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean76 = continuousOutputModel75.requiresDenseOutput();
        double double77 = continuousOutputModel75.getInitialTime();
        double double78 = continuousOutputModel75.getInitialTime();
        continuousOutputModel67.append(continuousOutputModel75);
        continuousOutputModel67.reset();
        double double81 = continuousOutputModel67.getFinalTime();
        double double82 = continuousOutputModel67.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel67);
        boolean boolean84 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        double double17 = continuousOutputModel13.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        boolean boolean22 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel23);
        continuousOutputModel13.append(continuousOutputModel18);
        continuousOutputModel13.reset();
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel13);
        continuousOutputModel13.reset();
        boolean boolean33 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel13.handleStep(stepInterpolator34, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        double double22 = continuousOutputModel11.getFinalTime();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel0.reset();
        boolean boolean26 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        continuousOutputModel8.append(continuousOutputModel12);
        continuousOutputModel8.reset();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getFinalTime();
        double double5 = continuousOutputModel0.getInitialTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        double double13 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean15 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        double double12 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel24);
        boolean boolean27 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        double double32 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double45 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        continuousOutputModel13.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel37);
        double double49 = continuousOutputModel37.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double50 = continuousOutputModel37.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel4.append(continuousOutputModel22);
        continuousOutputModel22.reset();
        boolean boolean28 = continuousOutputModel22.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel22.setInterpolatedTime((double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        double double13 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        continuousOutputModel10.append(continuousOutputModel14);
        double double18 = continuousOutputModel10.getInitialTime();
        double double19 = continuousOutputModel10.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        continuousOutputModel20.reset();
        double double24 = continuousOutputModel20.getInitialTime();
        continuousOutputModel10.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean29 = continuousOutputModel28.requiresDenseOutput();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        boolean boolean37 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel28.append(continuousOutputModel32);
        continuousOutputModel26.append(continuousOutputModel28);
        continuousOutputModel10.append(continuousOutputModel28);
        double double41 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean43 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean44 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel10.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.io.IOException iOException19 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException19);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", objArray22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        double double30 = continuousOutputModel26.getInitialTime();
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        java.io.IOException iOException39 = new java.io.IOException("", (java.lang.Throwable) iOException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException38);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        java.lang.Object[] objArray45 = new java.lang.Object[] { double30, mathException35, iOException38, false, continuousOutputModel42 };
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        java.io.IOException iOException59 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException59);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray54, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) mathException65);
        derivativeException13.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) mathException65);
        java.lang.String str70 = mathException65.getPattern();
        java.io.IOException iOException71 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        java.lang.Object[] objArray73 = mathException65.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", objArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", objArray73);
        java.lang.Throwable[] throwableArray76 = mathException75.getSuppressed();
        java.io.IOException iOException79 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!");
        java.io.IOException iOException80 = new java.io.IOException((java.lang.Throwable) iOException79);
        java.io.IOException iOException81 = new java.io.IOException((java.lang.Throwable) iOException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray76, (java.lang.Throwable) iOException81);
        java.lang.Throwable[] throwableArray84 = iOException81.getSuppressed();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException81);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Throwable) mathException85);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str70, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        double double7 = continuousOutputModel4.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        continuousOutputModel4.append(continuousOutputModel8);
        double double12 = continuousOutputModel4.getInitialTime();
        double double13 = continuousOutputModel4.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel22);
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        double double28 = continuousOutputModel22.getFinalTime();
        continuousOutputModel22.reset();
        double double30 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        double double38 = continuousOutputModel36.getInitialTime();
        boolean boolean39 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel31.append(continuousOutputModel36);
        boolean boolean41 = continuousOutputModel36.requiresDenseOutput();
        double double42 = continuousOutputModel36.getFinalTime();
        continuousOutputModel36.reset();
        double double44 = continuousOutputModel36.getInitialTime();
        boolean boolean45 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel36);
        boolean boolean47 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel48.reset();
        boolean boolean53 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel48);
        continuousOutputModel0.append(continuousOutputModel22);
        boolean boolean56 = continuousOutputModel22.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        double double9 = continuousOutputModel0.getFinalTime();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException6);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", objArray9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        double double17 = continuousOutputModel13.getInitialTime();
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        java.io.IOException iOException26 = new java.io.IOException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        java.lang.Object[] objArray32 = new java.lang.Object[] { double17, mathException22, iOException25, false, continuousOutputModel29 };
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        java.io.IOException iOException46 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException46);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray9, (java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray54 = mathException52.getSuppressed();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("java.io.IOException: ", (java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        java.lang.String str57 = mathException55.toString();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.MathException: java.io.IOException: " + "'", str57, "org.apache.commons.math.MathException: java.io.IOException: ");
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        double double16 = continuousOutputModel14.getInitialTime();
        continuousOutputModel9.append(continuousOutputModel14);
        continuousOutputModel4.append(continuousOutputModel14);
        boolean boolean19 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel25);
        continuousOutputModel21.reset();
        double double33 = continuousOutputModel21.getInitialTime();
        continuousOutputModel4.append(continuousOutputModel21);
        continuousOutputModel0.append(continuousOutputModel21);
        boolean boolean36 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel0.requiresDenseOutput();
        double double39 = continuousOutputModel0.getFinalTime();
        double double40 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        double double7 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", objArray34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        java.io.IOException iOException51 = new java.io.IOException("", (java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        java.lang.Object[] objArray57 = new java.lang.Object[] { double42, mathException47, iOException50, false, continuousOutputModel54 };
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("", strArray66);
        java.io.IOException iOException71 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException71);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34, (java.lang.Throwable) mathException77);
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException79);
        java.io.IOException iOException82 = new java.io.IOException("hi!");
        mathException80.addSuppressed((java.lang.Throwable) iOException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) derivativeException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray13);
        java.lang.Throwable[] throwableArray89 = derivativeException88.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray89);
        java.lang.Class<?> wildcardClass91 = mathException90.getClass();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        double double13 = continuousOutputModel5.getInitialTime();
        boolean boolean14 = continuousOutputModel5.requiresDenseOutput();
        double double15 = continuousOutputModel5.getInitialTime();
        double double16 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator17, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel40.append(continuousOutputModel45);
        boolean boolean50 = continuousOutputModel45.requiresDenseOutput();
        double double51 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        double double53 = continuousOutputModel45.getInitialTime();
        double double54 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        boolean boolean56 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        boolean boolean59 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        boolean boolean61 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        double double63 = continuousOutputModel57.getInitialTime();
        continuousOutputModel45.append(continuousOutputModel57);
        continuousOutputModel57.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        double double69 = continuousOutputModel66.getFinalTime();
        boolean boolean70 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean72 = continuousOutputModel66.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        double double76 = continuousOutputModel73.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double78 = continuousOutputModel77.getFinalTime();
        double double79 = continuousOutputModel77.getInitialTime();
        continuousOutputModel73.append(continuousOutputModel77);
        boolean boolean81 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel66.append(continuousOutputModel73);
        continuousOutputModel57.append(continuousOutputModel66);
        continuousOutputModel9.append(continuousOutputModel66);
        continuousOutputModel0.append(continuousOutputModel9);
        double double86 = continuousOutputModel0.getFinalTime();
        double double87 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray11);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray61 = iOException59.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) iOException59);
        java.lang.String str63 = mathException62.getPattern();
        java.lang.String str64 = mathException62.getPattern();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException66);
        mathException62.addSuppressed((java.lang.Throwable) mathException66);
        java.lang.Object[] objArray69 = mathException62.getArguments();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", objArray69);
        java.lang.Class<?> wildcardClass71 = mathException70.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str63, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str64, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        double double14 = continuousOutputModel5.getInitialTime();
        double double15 = continuousOutputModel5.getInitialTime();
        double double16 = continuousOutputModel5.getInitialTime();
        double double17 = continuousOutputModel5.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        double double7 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        double double16 = continuousOutputModel4.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel4.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        double double27 = continuousOutputModel22.getFinalTime();
        continuousOutputModel4.append(continuousOutputModel22);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.setInterpolatedTime((double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        double double13 = continuousOutputModel8.getInitialTime();
        continuousOutputModel8.reset();
        continuousOutputModel8.reset();
        boolean boolean16 = continuousOutputModel8.requiresDenseOutput();
        double double17 = continuousOutputModel8.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double18 = continuousOutputModel8.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        double double28 = continuousOutputModel23.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel29);
        continuousOutputModel23.reset();
        continuousOutputModel23.reset();
        boolean boolean35 = continuousOutputModel23.requiresDenseOutput();
        double double36 = continuousOutputModel23.getFinalTime();
        continuousOutputModel17.append(continuousOutputModel23);
        continuousOutputModel17.reset();
        boolean boolean39 = continuousOutputModel17.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        double double14 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel25);
        continuousOutputModel15.append(continuousOutputModel25);
        boolean boolean30 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        continuousOutputModel0.append(continuousOutputModel15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel15.handleStep(stepInterpolator34, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        double double7 = continuousOutputModel3.getInitialTime();
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        java.io.IOException iOException16 = new java.io.IOException("", (java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        java.lang.Object[] objArray22 = new java.lang.Object[] { double7, mathException12, iOException15, false, continuousOutputModel19 };
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException41);
        java.lang.String str43 = mathException42.getPattern();
        java.lang.Throwable[] throwableArray44 = mathException42.getSuppressed();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: ", (java.lang.Object[]) throwableArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException46);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str43, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel25);
        continuousOutputModel16.append(continuousOutputModel25);
        continuousOutputModel10.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        double double32 = continuousOutputModel25.getFinalTime();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        java.lang.Class<?> wildcardClass36 = continuousOutputModel25.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean13 = continuousOutputModel7.requiresDenseOutput();
        double double14 = continuousOutputModel7.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel0.reset();
        double double17 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double20 = continuousOutputModel0.getInitialTime();
        double double21 = continuousOutputModel0.getInitialTime();
        boolean boolean22 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean21 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel16);
        continuousOutputModel10.append(continuousOutputModel12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel10.append(continuousOutputModel24);
        boolean boolean31 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        continuousOutputModel0.append(continuousOutputModel24);
        double double34 = continuousOutputModel24.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean25 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel26);
        boolean boolean31 = continuousOutputModel21.requiresDenseOutput();
        double double32 = continuousOutputModel21.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel21);
        java.lang.Class<?> wildcardClass34 = continuousOutputModel21.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel13);
        continuousOutputModel4.reset();
        double double18 = continuousOutputModel4.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray19 = continuousOutputModel4.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        double double40 = continuousOutputModel38.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel38);
        continuousOutputModel22.append(continuousOutputModel33);
        boolean boolean43 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double45 = continuousOutputModel44.getFinalTime();
        double double46 = continuousOutputModel44.getInitialTime();
        double double47 = continuousOutputModel44.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel44.append(continuousOutputModel48);
        double double52 = continuousOutputModel44.getFinalTime();
        boolean boolean53 = continuousOutputModel44.requiresDenseOutput();
        boolean boolean54 = continuousOutputModel44.requiresDenseOutput();
        double double55 = continuousOutputModel44.getFinalTime();
        continuousOutputModel22.append(continuousOutputModel44);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        boolean boolean59 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        continuousOutputModel57.reset();
        boolean boolean62 = continuousOutputModel57.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double64 = continuousOutputModel63.getFinalTime();
        double double65 = continuousOutputModel63.getInitialTime();
        double double66 = continuousOutputModel63.getFinalTime();
        boolean boolean67 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel57.append(continuousOutputModel63);
        boolean boolean69 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel63);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel71 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean72 = continuousOutputModel71.requiresDenseOutput();
        double double73 = continuousOutputModel71.getInitialTime();
        double double74 = continuousOutputModel71.getFinalTime();
        boolean boolean75 = continuousOutputModel71.requiresDenseOutput();
        double double76 = continuousOutputModel71.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel78 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean79 = continuousOutputModel78.requiresDenseOutput();
        boolean boolean80 = continuousOutputModel78.requiresDenseOutput();
        double double81 = continuousOutputModel78.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel82 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean83 = continuousOutputModel82.requiresDenseOutput();
        continuousOutputModel78.append(continuousOutputModel82);
        continuousOutputModel77.append(continuousOutputModel82);
        boolean boolean86 = continuousOutputModel82.requiresDenseOutput();
        continuousOutputModel71.append(continuousOutputModel82);
        boolean boolean88 = continuousOutputModel82.requiresDenseOutput();
        continuousOutputModel63.append(continuousOutputModel82);
        boolean boolean90 = continuousOutputModel63.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel63);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        double double22 = continuousOutputModel20.getInitialTime();
        double double23 = continuousOutputModel20.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        continuousOutputModel34.append(continuousOutputModel39);
        continuousOutputModel29.append(continuousOutputModel39);
        boolean boolean44 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel50);
        continuousOutputModel46.reset();
        double double58 = continuousOutputModel46.getInitialTime();
        continuousOutputModel29.append(continuousOutputModel46);
        continuousOutputModel25.append(continuousOutputModel46);
        continuousOutputModel20.append(continuousOutputModel46);
        continuousOutputModel5.append(continuousOutputModel20);
        boolean boolean63 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel64 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double65 = continuousOutputModel64.getFinalTime();
        double double66 = continuousOutputModel64.getInitialTime();
        double double67 = continuousOutputModel64.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double69 = continuousOutputModel68.getFinalTime();
        double double70 = continuousOutputModel68.getInitialTime();
        continuousOutputModel64.append(continuousOutputModel68);
        double double72 = continuousOutputModel64.getFinalTime();
        boolean boolean73 = continuousOutputModel64.requiresDenseOutput();
        boolean boolean74 = continuousOutputModel64.requiresDenseOutput();
        double double75 = continuousOutputModel64.getFinalTime();
        continuousOutputModel20.append(continuousOutputModel64);
        double double77 = continuousOutputModel64.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel31);
        boolean boolean37 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        double double49 = continuousOutputModel47.getInitialTime();
        double double50 = continuousOutputModel47.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel47);
        boolean boolean52 = continuousOutputModel39.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel53.reset();
        boolean boolean57 = continuousOutputModel53.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean63 = continuousOutputModel62.requiresDenseOutput();
        boolean boolean64 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        continuousOutputModel53.append(continuousOutputModel62);
        continuousOutputModel39.append(continuousOutputModel62);
        double double68 = continuousOutputModel39.getInitialTime();
        boolean boolean69 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel39);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel71 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean72 = continuousOutputModel71.requiresDenseOutput();
        boolean boolean73 = continuousOutputModel71.requiresDenseOutput();
        continuousOutputModel71.reset();
        boolean boolean75 = continuousOutputModel71.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel71);
        double double77 = continuousOutputModel71.getFinalTime();
        double double78 = continuousOutputModel71.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel79 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean80 = continuousOutputModel79.requiresDenseOutput();
        boolean boolean81 = continuousOutputModel79.requiresDenseOutput();
        double double82 = continuousOutputModel79.getFinalTime();
        continuousOutputModel79.reset();
        boolean boolean84 = continuousOutputModel79.requiresDenseOutput();
        double double85 = continuousOutputModel79.getFinalTime();
        continuousOutputModel79.reset();
        boolean boolean87 = continuousOutputModel79.requiresDenseOutput();
        boolean boolean88 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel79.reset();
        continuousOutputModel71.append(continuousOutputModel79);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel79.setInterpolatedTime((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        continuousOutputModel0.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel41);
        double double45 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        java.lang.Class<?> wildcardClass12 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        double double19 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean21 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel15.handleStep(stepInterpolator25, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double11 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel12.append(continuousOutputModel17);
        double double21 = continuousOutputModel12.getFinalTime();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        continuousOutputModel0.append(continuousOutputModel12);
        continuousOutputModel12.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel12.setInterpolatedTime((double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException57);
        java.lang.String str61 = mathException57.getPattern();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException57);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!" + "'", str61, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double7 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("hi!", (java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray11 = iOException7.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException("hi!");
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) iOException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException15);
        java.lang.String str17 = mathException16.getPattern();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException16);
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException22);
        java.lang.String str24 = mathException23.getPattern();
        mathException16.addSuppressed((java.lang.Throwable) mathException23);
        java.lang.String str26 = mathException16.getPattern();
        java.lang.Object[] objArray27 = mathException16.getArguments();
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", objArray39);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        double double47 = continuousOutputModel43.getInitialTime();
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        java.io.IOException iOException56 = new java.io.IOException("", (java.lang.Throwable) iOException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        java.lang.Object[] objArray62 = new java.lang.Object[] { double47, mathException52, iOException55, false, continuousOutputModel59 };
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("", strArray71);
        java.io.IOException iOException76 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException76);
        java.lang.Object[] objArray79 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray71, (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray39, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", objArray39);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException87 = new java.io.IOException((java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException87);
        java.lang.Throwable[] throwableArray89 = iOException87.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", objArray39, (java.lang.Throwable) iOException87);
        java.io.IOException iOException91 = new java.io.IOException((java.lang.Throwable) mathException90);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException91);
        java.io.IOException iOException93 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray27, (java.lang.Throwable) derivativeException92);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("", objArray27);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        double double28 = continuousOutputModel23.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel29);
        continuousOutputModel23.reset();
        continuousOutputModel23.reset();
        boolean boolean35 = continuousOutputModel23.requiresDenseOutput();
        double double36 = continuousOutputModel23.getFinalTime();
        continuousOutputModel17.append(continuousOutputModel23);
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        java.io.IOException iOException12 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException12);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", objArray15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException32 = new java.io.IOException("", (java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        java.lang.Object[] objArray38 = new java.lang.Object[] { double23, mathException28, iOException31, false, continuousOutputModel35 };
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException52);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray63 = mathException62.getSuppressed();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: ", strArray77);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray63);
        java.io.IOException iOException90 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException90);
        java.io.IOException iOException93 = new java.io.IOException((java.lang.Throwable) mathException92);
        mathException87.addSuppressed((java.lang.Throwable) mathException92);
        java.io.IOException iOException95 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException92);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        double double11 = continuousOutputModel8.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel12);
        continuousOutputModel7.append(continuousOutputModel12);
        double double16 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        continuousOutputModel19.reset();
        double double23 = continuousOutputModel19.getInitialTime();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        double double25 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        boolean boolean27 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel19);
        double double29 = continuousOutputModel19.getInitialTime();
        java.lang.Class<?> wildcardClass30 = continuousOutputModel19.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel29);
        double double34 = continuousOutputModel29.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        double double39 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel40);
        continuousOutputModel40.reset();
        continuousOutputModel40.reset();
        double double45 = continuousOutputModel40.getFinalTime();
        continuousOutputModel29.append(continuousOutputModel40);
        double double47 = continuousOutputModel29.getInitialTime();
        boolean boolean48 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double50 = continuousOutputModel29.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", objArray34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        java.io.IOException iOException51 = new java.io.IOException("", (java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        java.lang.Object[] objArray57 = new java.lang.Object[] { double42, mathException47, iOException50, false, continuousOutputModel54 };
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("", strArray66);
        java.io.IOException iOException71 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException71);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34, (java.lang.Throwable) mathException77);
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException79);
        java.io.IOException iOException82 = new java.io.IOException("hi!");
        mathException80.addSuppressed((java.lang.Throwable) iOException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) derivativeException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException", strArray13);
        java.lang.Throwable[] throwableArray90 = derivativeException89.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException10);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", objArray13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        java.io.IOException iOException30 = new java.io.IOException("", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        java.lang.Object[] objArray36 = new java.lang.Object[] { double21, mathException26, iOException29, false, continuousOutputModel33 };
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13, (java.lang.Throwable) mathException56);
        java.io.IOException iOException60 = new java.io.IOException("hi!");
        java.io.IOException iOException61 = new java.io.IOException("", (java.lang.Throwable) iOException60);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray13, (java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray64 = mathException63.getSuppressed();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray74);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray64, (java.lang.Throwable) derivativeException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) mathException78);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException81);
        java.lang.String str83 = mathException81.getPattern();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!" + "'", str83, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double14 = continuousOutputModel5.getInitialTime();
        double double15 = continuousOutputModel5.getFinalTime();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        double double32 = continuousOutputModel27.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel27.append(continuousOutputModel33);
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel0.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel45);
        boolean boolean48 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double70 = continuousOutputModel69.getFinalTime();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        continuousOutputModel69.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean75 = continuousOutputModel74.requiresDenseOutput();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel69.append(continuousOutputModel74);
        continuousOutputModel58.append(continuousOutputModel69);
        double double79 = continuousOutputModel69.getFinalTime();
        continuousOutputModel50.append(continuousOutputModel69);
        continuousOutputModel41.append(continuousOutputModel69);
        continuousOutputModel0.append(continuousOutputModel69);
        continuousOutputModel69.reset();
        boolean boolean84 = continuousOutputModel69.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel69.setInterpolatedTime((double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        double double15 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        double double22 = continuousOutputModel0.getInitialTime();
        double double23 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean26 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean28 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException18);
        java.lang.Object[] objArray21 = mathException20.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException20);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", objArray34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        java.io.IOException iOException51 = new java.io.IOException("", (java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        java.lang.Object[] objArray57 = new java.lang.Object[] { double42, mathException47, iOException50, false, continuousOutputModel54 };
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("", strArray66);
        java.io.IOException iOException71 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException71);
        java.lang.Object[] objArray74 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException73);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray34, (java.lang.Throwable) mathException77);
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException79);
        java.io.IOException iOException82 = new java.io.IOException("hi!");
        mathException80.addSuppressed((java.lang.Throwable) iOException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) derivativeException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray13);
        java.io.IOException iOException89 = new java.io.IOException((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Throwable) derivativeException88);
        java.lang.Object[] objArray91 = mathException90.getArguments();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", objArray11);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray65);
        java.io.IOException iOException70 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException70);
        java.lang.Object[] objArray73 = mathException72.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException72);
        java.lang.String str76 = mathException75.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException75);
        mathException56.addSuppressed((java.lang.Throwable) derivativeException77);
        java.io.IOException iOException79 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) derivativeException77);
        java.lang.Object[] objArray81 = derivativeException77.getArguments();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str76, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        continuousOutputModel12.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel12.append(continuousOutputModel22);
        continuousOutputModel12.reset();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        double double29 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean31 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        boolean boolean33 = continuousOutputModel12.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray34 = continuousOutputModel12.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean14 = continuousOutputModel10.requiresDenseOutput();
        double double15 = continuousOutputModel10.getFinalTime();
        boolean boolean16 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel10);
        double double18 = continuousOutputModel10.getFinalTime();
        continuousOutputModel10.reset();
        double double20 = continuousOutputModel10.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = continuousOutputModel10.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException16);
        java.lang.Object[] objArray19 = mathException18.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", objArray19);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        java.io.IOException iOException30 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException30);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        java.io.IOException iOException36 = new java.io.IOException("", (java.lang.Throwable) iOException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        java.lang.Object[] objArray42 = new java.lang.Object[] { double27, mathException32, iOException35, false, continuousOutputModel39 };
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        java.io.IOException iOException56 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException56);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) mathException62);
        derivativeException10.addSuppressed((java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) derivativeException10);
        java.lang.String str66 = mathException65.getPattern();
        java.lang.String str67 = mathException65.getPattern();
        java.lang.Throwable[] throwableArray68 = mathException65.getSuppressed();
        java.io.IOException iOException71 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException71);
        java.lang.Object[] objArray73 = derivativeException72.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException72);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException72);
        java.io.IOException iOException76 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) derivativeException72);
        java.io.IOException iOException81 = new java.io.IOException("hi!");
        java.io.IOException iOException82 = new java.io.IOException("", (java.lang.Throwable) iOException81);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException83);
        java.io.IOException iOException85 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) derivativeException83);
        derivativeException72.addSuppressed((java.lang.Throwable) derivativeException83);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) derivativeException72);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) mathException87);
        java.io.IOException iOException89 = new java.io.IOException((java.lang.Throwable) mathException87);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str66, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str67, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        double double15 = continuousOutputModel9.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        double double20 = continuousOutputModel16.getInitialTime();
        continuousOutputModel16.reset();
        boolean boolean22 = continuousOutputModel16.requiresDenseOutput();
        double double23 = continuousOutputModel16.getInitialTime();
        continuousOutputModel9.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel9);
        boolean boolean26 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel9.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray28 = continuousOutputModel9.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        double double13 = continuousOutputModel5.getInitialTime();
        boolean boolean14 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        double double19 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel20);
        double double24 = continuousOutputModel16.getFinalTime();
        boolean boolean25 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel16.requiresDenseOutput();
        double double28 = continuousOutputModel16.getFinalTime();
        boolean boolean29 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel16);
        continuousOutputModel5.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double32 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        double double16 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        continuousOutputModel7.append(continuousOutputModel13);
        boolean boolean17 = continuousOutputModel7.requiresDenseOutput();
        double double18 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        continuousOutputModel20.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        boolean boolean38 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel34);
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel42.reset();
        double double47 = continuousOutputModel42.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel42.append(continuousOutputModel48);
        continuousOutputModel34.append(continuousOutputModel42);
        continuousOutputModel34.reset();
        continuousOutputModel34.reset();
        continuousOutputModel7.append(continuousOutputModel34);
        continuousOutputModel0.append(continuousOutputModel7);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = continuousOutputModel7.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        continuousOutputModel12.reset();
        boolean boolean26 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        double double39 = continuousOutputModel33.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        double double43 = continuousOutputModel40.getFinalTime();
        continuousOutputModel40.reset();
        boolean boolean45 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel40);
        double double48 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel33.handleStep(stepInterpolator49, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel24.reset();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        boolean boolean39 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator40, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        java.io.IOException iOException19 = new java.io.IOException();
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) mathException21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        double double29 = continuousOutputModel25.getInitialTime();
        java.io.IOException iOException32 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException37);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        java.lang.Object[] objArray44 = new java.lang.Object[] { double29, mathException34, iOException37, false, continuousOutputModel41 };
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        java.io.IOException iOException58 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException58);
        java.lang.Object[] objArray61 = mathException60.getArguments();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException65);
        mathException21.addSuppressed((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: ", (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) mathException21);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        double double12 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel18);
        continuousOutputModel18.reset();
        double double24 = continuousOutputModel18.getInitialTime();
        double double25 = continuousOutputModel18.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel18);
        double double27 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator28, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: hi!", strArray5);
        java.io.IOException iOException14 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException14);
        java.lang.Object[] objArray17 = mathException16.getArguments();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", objArray17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        java.io.IOException iOException28 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        java.io.IOException iOException34 = new java.io.IOException("", (java.lang.Throwable) iOException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        java.lang.Object[] objArray40 = new java.lang.Object[] { double25, mathException30, iOException33, false, continuousOutputModel37 };
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray49);
        java.io.IOException iOException54 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException54);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray17, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("hi!", objArray17);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("", strArray71);
        java.io.IOException iOException76 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException76);
        java.lang.Object[] objArray79 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray71, (java.lang.Throwable) mathException78);
        java.lang.String str82 = mathException81.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException81);
        mathException62.addSuppressed((java.lang.Throwable) derivativeException83);
        java.lang.Throwable[] throwableArray85 = derivativeException83.getSuppressed();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray5, (java.lang.Throwable) derivativeException83);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException", strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str82, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        double double21 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel25);
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel25);
        double double31 = continuousOutputModel25.getFinalTime();
        continuousOutputModel25.reset();
        double double33 = continuousOutputModel25.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String str8 = derivativeException7.getPattern();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException7);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException15);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", objArray18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        java.lang.Object[] objArray41 = new java.lang.Object[] { double26, mathException31, iOException34, false, continuousOutputModel38 };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) mathException61);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("hi!");
        mathException64.addSuppressed((java.lang.Throwable) iOException66);
        mathException9.addSuppressed((java.lang.Throwable) mathException64);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        double double19 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean21 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel15.requiresDenseOutput();
        double double23 = continuousOutputModel15.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel15.handleStep(stepInterpolator24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        continuousOutputModel17.reset();
        continuousOutputModel9.append(continuousOutputModel17);
        double double30 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel17.handleStep(stepInterpolator31, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        double double30 = continuousOutputModel26.getInitialTime();
        continuousOutputModel26.reset();
        boolean boolean32 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        continuousOutputModel5.append(continuousOutputModel26);
        double double36 = continuousOutputModel5.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double37 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel7.append(continuousOutputModel11);
        double double23 = continuousOutputModel11.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean25 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean28 = continuousOutputModel11.requiresDenseOutput();
        double double29 = continuousOutputModel11.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double10 = continuousOutputModel0.getInitialTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        double double25 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        boolean boolean27 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel29.append(continuousOutputModel33);
        continuousOutputModel29.reset();
        continuousOutputModel21.append(continuousOutputModel29);
        continuousOutputModel0.append(continuousOutputModel21);
        boolean boolean43 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean45 = continuousOutputModel44.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        boolean boolean48 = continuousOutputModel44.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        boolean boolean52 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel44.append(continuousOutputModel49);
        double double54 = continuousOutputModel49.getInitialTime();
        continuousOutputModel49.reset();
        boolean boolean56 = continuousOutputModel49.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel49);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        boolean boolean62 = continuousOutputModel59.requiresDenseOutput();
        continuousOutputModel59.reset();
        boolean boolean64 = continuousOutputModel59.requiresDenseOutput();
        double double65 = continuousOutputModel59.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        double double70 = continuousOutputModel66.getInitialTime();
        continuousOutputModel66.reset();
        boolean boolean72 = continuousOutputModel66.requiresDenseOutput();
        double double73 = continuousOutputModel66.getInitialTime();
        continuousOutputModel59.append(continuousOutputModel66);
        boolean boolean75 = continuousOutputModel66.requiresDenseOutput();
        double double76 = continuousOutputModel66.getFinalTime();
        boolean boolean77 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel66.reset();
        continuousOutputModel0.append(continuousOutputModel66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator80, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean14 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel19);
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel28.reset();
        boolean boolean30 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel28);
        continuousOutputModel5.append(continuousOutputModel19);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        double double36 = continuousOutputModel33.getFinalTime();
        continuousOutputModel33.reset();
        boolean boolean38 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        double double40 = continuousOutputModel33.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel33);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray42 = continuousOutputModel19.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double17 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException7);
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException7);
        java.lang.Object[] objArray10 = mathException9.getArguments();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", objArray10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        double double18 = continuousOutputModel14.getInitialTime();
        java.io.IOException iOException21 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        java.io.IOException iOException27 = new java.io.IOException("", (java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        java.lang.Object[] objArray33 = new java.lang.Object[] { double18, mathException23, iOException26, false, continuousOutputModel30 };
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        java.io.IOException iOException47 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException47);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray10, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException55);
        java.lang.Object[] objArray58 = derivativeException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException57);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel14.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel34);
        double double38 = continuousOutputModel30.getInitialTime();
        double double39 = continuousOutputModel30.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel40);
        continuousOutputModel14.append(continuousOutputModel30);
        continuousOutputModel5.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        double double52 = continuousOutputModel48.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        boolean boolean55 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel53.reset();
        boolean boolean57 = continuousOutputModel53.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel53.append(continuousOutputModel58);
        continuousOutputModel48.append(continuousOutputModel53);
        continuousOutputModel48.reset();
        continuousOutputModel48.reset();
        continuousOutputModel14.append(continuousOutputModel48);
        boolean boolean67 = continuousOutputModel14.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.setInterpolatedTime((double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getFinalTime();
        double double11 = continuousOutputModel0.getInitialTime();
        double double12 = continuousOutputModel0.getInitialTime();
        double double13 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel14.append(continuousOutputModel21);
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.setInterpolatedTime(100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        continuousOutputModel13.reset();
        continuousOutputModel5.append(continuousOutputModel13);
        double double17 = continuousOutputModel13.getFinalTime();
        double double18 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        double double20 = continuousOutputModel13.getInitialTime();
        continuousOutputModel13.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel19);
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        double double25 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        double double27 = continuousOutputModel19.getInitialTime();
        boolean boolean28 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        boolean boolean30 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean32 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException15);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", objArray18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        java.lang.Object[] objArray41 = new java.lang.Object[] { double26, mathException31, iOException34, false, continuousOutputModel38 };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) mathException61);
        derivativeException9.addSuppressed((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) mathException61);
        java.lang.String str66 = mathException61.getPattern();
        java.io.IOException iOException67 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        java.lang.Throwable[] throwableArray69 = mathException61.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str66, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        double double12 = continuousOutputModel5.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        double double12 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        double double27 = continuousOutputModel23.getInitialTime();
        continuousOutputModel23.reset();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel23.append(continuousOutputModel31);
        boolean boolean37 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel23);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel43.reset();
        continuousOutputModel43.reset();
        boolean boolean48 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        continuousOutputModel43.reset();
        continuousOutputModel23.append(continuousOutputModel43);
        continuousOutputModel23.reset();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel23.handleStep(stepInterpolator54, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getFinalTime();
        double double8 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel12.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean30 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel26);
        boolean boolean33 = continuousOutputModel26.requiresDenseOutput();
        double double34 = continuousOutputModel26.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel26);
        boolean boolean36 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        continuousOutputModel37.append(continuousOutputModel42);
        boolean boolean46 = continuousOutputModel37.requiresDenseOutput();
        double double47 = continuousOutputModel37.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        double double51 = continuousOutputModel48.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        continuousOutputModel48.append(continuousOutputModel52);
        double double56 = continuousOutputModel48.getFinalTime();
        boolean boolean57 = continuousOutputModel48.requiresDenseOutput();
        boolean boolean58 = continuousOutputModel48.requiresDenseOutput();
        double double59 = continuousOutputModel48.getFinalTime();
        boolean boolean60 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel48);
        double double62 = continuousOutputModel37.getInitialTime();
        continuousOutputModel26.append(continuousOutputModel37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel37.handleStep(stepInterpolator64, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        double double16 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel19);
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        double double25 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        double double27 = continuousOutputModel19.getInitialTime();
        boolean boolean28 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        boolean boolean30 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean33 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel5.requiresDenseOutput();
        double double35 = continuousOutputModel5.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.setInterpolatedTime((double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean34 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel30);
        continuousOutputModel11.append(continuousOutputModel30);
        boolean boolean38 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        continuousOutputModel40.append(continuousOutputModel46);
        double double50 = continuousOutputModel40.getInitialTime();
        boolean boolean51 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        double double55 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel56);
        double double60 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        double double65 = continuousOutputModel61.getInitialTime();
        continuousOutputModel61.reset();
        boolean boolean67 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel52.append(continuousOutputModel61);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean70 = continuousOutputModel69.requiresDenseOutput();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        boolean boolean78 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel69.append(continuousOutputModel73);
        continuousOutputModel69.reset();
        continuousOutputModel61.append(continuousOutputModel69);
        continuousOutputModel40.append(continuousOutputModel61);
        continuousOutputModel30.append(continuousOutputModel40);
        boolean boolean84 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel30);
        boolean boolean86 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean87 = continuousOutputModel30.requiresDenseOutput();
        double double88 = continuousOutputModel30.getInitialTime();
        continuousOutputModel30.reset();
        double double90 = continuousOutputModel30.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel30.handleStep(stepInterpolator91, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel0.reset();
        double double17 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel24.requiresDenseOutput();
        double double30 = continuousOutputModel24.getFinalTime();
        continuousOutputModel24.reset();
        double double32 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean37 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel38);
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        double double44 = continuousOutputModel38.getFinalTime();
        continuousOutputModel38.reset();
        double double46 = continuousOutputModel38.getInitialTime();
        boolean boolean47 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel38);
        boolean boolean49 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        double double51 = continuousOutputModel24.getInitialTime();
        boolean boolean52 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        continuousOutputModel0.append(continuousOutputModel24);
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        continuousOutputModel7.reset();
        boolean boolean12 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel18);
        boolean boolean22 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        continuousOutputModel32.reset();
        boolean boolean38 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel32.requiresDenseOutput();
        double double40 = continuousOutputModel32.getInitialTime();
        boolean boolean41 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        continuousOutputModel14.append(continuousOutputModel32);
        double double44 = continuousOutputModel14.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel14);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel14.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel34);
        double double38 = continuousOutputModel30.getInitialTime();
        double double39 = continuousOutputModel30.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel40);
        continuousOutputModel14.append(continuousOutputModel30);
        continuousOutputModel5.append(continuousOutputModel14);
        boolean boolean48 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean50 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double52 = continuousOutputModel14.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        double double22 = continuousOutputModel14.getInitialTime();
        continuousOutputModel2.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        continuousOutputModel30.reset();
        continuousOutputModel24.append(continuousOutputModel30);
        double double34 = continuousOutputModel24.getInitialTime();
        boolean boolean35 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        double double38 = continuousOutputModel36.getInitialTime();
        double double39 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel36.append(continuousOutputModel40);
        double double44 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        double double49 = continuousOutputModel45.getInitialTime();
        continuousOutputModel45.reset();
        boolean boolean51 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel45);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean54 = continuousOutputModel53.requiresDenseOutput();
        double double55 = continuousOutputModel53.getInitialTime();
        boolean boolean56 = continuousOutputModel53.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double58 = continuousOutputModel57.getFinalTime();
        double double59 = continuousOutputModel57.getInitialTime();
        boolean boolean60 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        boolean boolean62 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel53.append(continuousOutputModel57);
        continuousOutputModel53.reset();
        continuousOutputModel45.append(continuousOutputModel53);
        continuousOutputModel24.append(continuousOutputModel45);
        boolean boolean67 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        double double69 = continuousOutputModel24.getInitialTime();
        boolean boolean70 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel24);
        boolean boolean72 = continuousOutputModel24.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        continuousOutputModel10.reset();
        continuousOutputModel4.append(continuousOutputModel10);
        boolean boolean14 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        double double22 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        double double26 = continuousOutputModel23.getFinalTime();
        continuousOutputModel23.reset();
        boolean boolean28 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel30.append(continuousOutputModel34);
        boolean boolean37 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        continuousOutputModel23.append(continuousOutputModel30);
        boolean boolean40 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel23);
        double double42 = continuousOutputModel23.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double48 = continuousOutputModel47.getFinalTime();
        double double49 = continuousOutputModel47.getInitialTime();
        boolean boolean50 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel47.reset();
        boolean boolean52 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel47);
        continuousOutputModel47.reset();
        double double55 = continuousOutputModel47.getInitialTime();
        continuousOutputModel47.reset();
        continuousOutputModel23.append(continuousOutputModel47);
        continuousOutputModel4.append(continuousOutputModel47);
        continuousOutputModel47.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        double double12 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double15 = continuousOutputModel5.getFinalTime();
        double double16 = continuousOutputModel5.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean34 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel30);
        continuousOutputModel11.append(continuousOutputModel30);
        boolean boolean38 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        continuousOutputModel40.append(continuousOutputModel46);
        double double50 = continuousOutputModel40.getInitialTime();
        boolean boolean51 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double53 = continuousOutputModel52.getFinalTime();
        double double54 = continuousOutputModel52.getInitialTime();
        double double55 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double57 = continuousOutputModel56.getFinalTime();
        double double58 = continuousOutputModel56.getInitialTime();
        continuousOutputModel52.append(continuousOutputModel56);
        double double60 = continuousOutputModel52.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        double double65 = continuousOutputModel61.getInitialTime();
        continuousOutputModel61.reset();
        boolean boolean67 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel52.append(continuousOutputModel61);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean70 = continuousOutputModel69.requiresDenseOutput();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        boolean boolean78 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel69.append(continuousOutputModel73);
        continuousOutputModel69.reset();
        continuousOutputModel61.append(continuousOutputModel69);
        continuousOutputModel40.append(continuousOutputModel61);
        continuousOutputModel30.append(continuousOutputModel40);
        boolean boolean84 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel30);
        double double86 = continuousOutputModel5.getFinalTime();
        double double87 = continuousOutputModel5.getFinalTime();
        boolean boolean88 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean90 = continuousOutputModel5.requiresDenseOutput();
        double double91 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator92 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator92, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.io.IOException iOException58 = new java.io.IOException("hi!");
        java.io.IOException iOException59 = new java.io.IOException("", (java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray11, (java.lang.Throwable) iOException60);
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray72);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray62, (java.lang.Throwable) derivativeException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: ", (java.lang.Object[]) throwableArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException77);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.io.IOException iOException17 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException17);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        double double28 = continuousOutputModel24.getInitialTime();
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException37 = new java.io.IOException("", (java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        java.lang.Object[] objArray43 = new java.lang.Object[] { double28, mathException33, iOException36, false, continuousOutputModel40 };
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        java.io.IOException iOException57 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException57);
        java.lang.Object[] objArray60 = mathException59.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray52, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20, (java.lang.Throwable) mathException63);
        derivativeException11.addSuppressed((java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException66);
        java.lang.Throwable[] throwableArray68 = mathException66.getSuppressed();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Throwable) derivativeException70);
        java.lang.String str72 = derivativeException70.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str72, "org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        continuousOutputModel7.append(continuousOutputModel13);
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel13.append(continuousOutputModel22);
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel40.append(continuousOutputModel45);
        boolean boolean50 = continuousOutputModel45.requiresDenseOutput();
        double double51 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        continuousOutputModel45.reset();
        continuousOutputModel13.append(continuousOutputModel45);
        continuousOutputModel0.append(continuousOutputModel13);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = continuousOutputModel13.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getFinalTime();
        double double12 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        double double3 = continuousOutputModel0.getFinalTime();
        java.lang.Class<?> wildcardClass4 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        double double9 = continuousOutputModel4.getFinalTime();
        boolean boolean10 = continuousOutputModel4.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.setInterpolatedTime(10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel18);
        double double23 = continuousOutputModel18.getInitialTime();
        double double24 = continuousOutputModel18.getFinalTime();
        continuousOutputModel18.reset();
        double double26 = continuousOutputModel18.getFinalTime();
        continuousOutputModel18.reset();
        continuousOutputModel18.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        continuousOutputModel35.reset();
        continuousOutputModel29.append(continuousOutputModel35);
        boolean boolean39 = continuousOutputModel29.requiresDenseOutput();
        double double40 = continuousOutputModel29.getInitialTime();
        boolean boolean41 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel29);
        boolean boolean43 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel29);
        double double45 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        double double12 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel13);
        continuousOutputModel8.append(continuousOutputModel13);
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getInitialTime();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean29 = continuousOutputModel28.requiresDenseOutput();
        double double30 = continuousOutputModel28.getInitialTime();
        double double31 = continuousOutputModel28.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        double double36 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel42.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean48 = continuousOutputModel47.requiresDenseOutput();
        double double49 = continuousOutputModel47.getInitialTime();
        continuousOutputModel42.append(continuousOutputModel47);
        continuousOutputModel37.append(continuousOutputModel47);
        boolean boolean52 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean53 = continuousOutputModel37.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean55 = continuousOutputModel54.requiresDenseOutput();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel58.reset();
        boolean boolean63 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel58);
        continuousOutputModel54.reset();
        double double66 = continuousOutputModel54.getInitialTime();
        continuousOutputModel37.append(continuousOutputModel54);
        continuousOutputModel33.append(continuousOutputModel54);
        continuousOutputModel28.append(continuousOutputModel54);
        continuousOutputModel13.append(continuousOutputModel28);
        boolean boolean71 = continuousOutputModel28.requiresDenseOutput();
        double double72 = continuousOutputModel28.getFinalTime();
        boolean boolean73 = continuousOutputModel28.requiresDenseOutput();
        boolean boolean74 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel76 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double77 = continuousOutputModel76.getFinalTime();
        double double78 = continuousOutputModel76.getInitialTime();
        double double79 = continuousOutputModel76.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel80 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double81 = continuousOutputModel80.getFinalTime();
        double double82 = continuousOutputModel80.getInitialTime();
        continuousOutputModel76.append(continuousOutputModel80);
        boolean boolean84 = continuousOutputModel76.requiresDenseOutput();
        boolean boolean85 = continuousOutputModel76.requiresDenseOutput();
        double double86 = continuousOutputModel76.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel76);
        boolean boolean88 = continuousOutputModel28.requiresDenseOutput();
        boolean boolean89 = continuousOutputModel28.requiresDenseOutput();
        double double90 = continuousOutputModel28.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel11.reset();
        continuousOutputModel11.reset();
        double double24 = continuousOutputModel11.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel17.append(continuousOutputModel27);
        boolean boolean32 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel38);
        continuousOutputModel34.reset();
        double double46 = continuousOutputModel34.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel34);
        continuousOutputModel13.append(continuousOutputModel34);
        continuousOutputModel8.append(continuousOutputModel34);
        boolean boolean50 = continuousOutputModel8.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double51 = continuousOutputModel8.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel26);
        double double30 = continuousOutputModel22.getFinalTime();
        boolean boolean31 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel22.requiresDenseOutput();
        double double33 = continuousOutputModel22.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel35.reset();
        continuousOutputModel35.reset();
        boolean boolean40 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        boolean boolean45 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel41);
        boolean boolean47 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel41);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean50 = continuousOutputModel49.requiresDenseOutput();
        double double51 = continuousOutputModel49.getInitialTime();
        double double52 = continuousOutputModel49.getFinalTime();
        boolean boolean53 = continuousOutputModel49.requiresDenseOutput();
        double double54 = continuousOutputModel49.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel56 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean57 = continuousOutputModel56.requiresDenseOutput();
        boolean boolean58 = continuousOutputModel56.requiresDenseOutput();
        double double59 = continuousOutputModel56.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean61 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel56.append(continuousOutputModel60);
        continuousOutputModel55.append(continuousOutputModel60);
        boolean boolean64 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel49.append(continuousOutputModel60);
        boolean boolean66 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel60);
        boolean boolean68 = continuousOutputModel41.requiresDenseOutput();
        double double69 = continuousOutputModel41.getInitialTime();
        double double70 = continuousOutputModel41.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel41.setInterpolatedTime(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel18.handleStep(stepInterpolator24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        boolean boolean24 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel25);
        continuousOutputModel15.append(continuousOutputModel20);
        continuousOutputModel6.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        boolean boolean46 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel40);
        continuousOutputModel40.reset();
        continuousOutputModel15.append(continuousOutputModel40);
        double double50 = continuousOutputModel15.getFinalTime();
        double double51 = continuousOutputModel15.getInitialTime();
        boolean boolean52 = continuousOutputModel15.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        double double22 = continuousOutputModel20.getInitialTime();
        double double23 = continuousOutputModel20.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        continuousOutputModel34.append(continuousOutputModel39);
        continuousOutputModel29.append(continuousOutputModel39);
        boolean boolean44 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel50);
        continuousOutputModel46.reset();
        double double58 = continuousOutputModel46.getInitialTime();
        continuousOutputModel29.append(continuousOutputModel46);
        continuousOutputModel25.append(continuousOutputModel46);
        continuousOutputModel20.append(continuousOutputModel46);
        continuousOutputModel5.append(continuousOutputModel20);
        boolean boolean63 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel64 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double65 = continuousOutputModel64.getFinalTime();
        double double66 = continuousOutputModel64.getInitialTime();
        double double67 = continuousOutputModel64.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel68 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double69 = continuousOutputModel68.getFinalTime();
        double double70 = continuousOutputModel68.getInitialTime();
        continuousOutputModel64.append(continuousOutputModel68);
        double double72 = continuousOutputModel64.getFinalTime();
        boolean boolean73 = continuousOutputModel64.requiresDenseOutput();
        boolean boolean74 = continuousOutputModel64.requiresDenseOutput();
        double double75 = continuousOutputModel64.getFinalTime();
        continuousOutputModel20.append(continuousOutputModel64);
        double double77 = continuousOutputModel64.getFinalTime();
        boolean boolean78 = continuousOutputModel64.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        double double18 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel29);
        continuousOutputModel19.append(continuousOutputModel24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        double double37 = continuousOutputModel35.getInitialTime();
        boolean boolean38 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel39);
        continuousOutputModel24.append(continuousOutputModel35);
        double double44 = continuousOutputModel35.getInitialTime();
        continuousOutputModel35.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        double double50 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        double double52 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        continuousOutputModel46.reset();
        boolean boolean55 = continuousOutputModel46.requiresDenseOutput();
        double double56 = continuousOutputModel46.getFinalTime();
        double double57 = continuousOutputModel46.getInitialTime();
        continuousOutputModel35.append(continuousOutputModel46);
        boolean boolean59 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel35);
        double double62 = continuousOutputModel35.getFinalTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean27 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        double double9 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        double double10 = continuousOutputModel0.getFinalTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        double double23 = continuousOutputModel0.getInitialTime();
        double double24 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double25 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel5.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        continuousOutputModel0.append(continuousOutputModel19);
        boolean boolean27 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        continuousOutputModel35.reset();
        continuousOutputModel29.append(continuousOutputModel35);
        double double39 = continuousOutputModel29.getInitialTime();
        boolean boolean40 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        continuousOutputModel41.append(continuousOutputModel45);
        double double49 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        double double54 = continuousOutputModel50.getInitialTime();
        continuousOutputModel50.reset();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        continuousOutputModel58.reset();
        continuousOutputModel50.append(continuousOutputModel58);
        continuousOutputModel29.append(continuousOutputModel50);
        continuousOutputModel19.append(continuousOutputModel29);
        double double73 = continuousOutputModel19.getInitialTime();
        boolean boolean74 = continuousOutputModel19.requiresDenseOutput();
        double double75 = continuousOutputModel19.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        java.lang.Object[] objArray3 = new java.lang.Object[] {};
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("", objArray3);
        java.io.IOException iOException11 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException11);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", objArray14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        double double22 = continuousOutputModel18.getInitialTime();
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException25);
        java.io.IOException iOException30 = new java.io.IOException("hi!");
        java.io.IOException iOException31 = new java.io.IOException("", (java.lang.Throwable) iOException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException30);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        java.lang.Object[] objArray37 = new java.lang.Object[] { double22, mathException27, iOException30, false, continuousOutputModel34 };
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        java.io.IOException iOException51 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException51);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) mathException57);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException("hi!");
        mathException60.addSuppressed((java.lang.Throwable) iOException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException64);
        java.lang.Object[] objArray66 = mathException64.getArguments();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", objArray3, (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException67);
        java.lang.String str69 = mathException67.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!" + "'", str69, "org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!");
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel3.requiresDenseOutput();
        double double10 = continuousOutputModel3.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel3);
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        double double13 = continuousOutputModel0.getFinalTime();
        double double14 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double10 = continuousOutputModel0.getInitialTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        java.lang.Class<?> wildcardClass13 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel16);
        continuousOutputModel11.append(continuousOutputModel16);
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        double double21 = continuousOutputModel16.getInitialTime();
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        double double26 = continuousOutputModel23.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        double double33 = continuousOutputModel31.getInitialTime();
        double double34 = continuousOutputModel31.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        double double39 = continuousOutputModel36.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        continuousOutputModel40.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        double double52 = continuousOutputModel50.getInitialTime();
        continuousOutputModel45.append(continuousOutputModel50);
        continuousOutputModel40.append(continuousOutputModel50);
        boolean boolean55 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean56 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        double double59 = continuousOutputModel57.getInitialTime();
        boolean boolean60 = continuousOutputModel57.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        boolean boolean64 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel61.reset();
        boolean boolean66 = continuousOutputModel61.requiresDenseOutput();
        continuousOutputModel57.append(continuousOutputModel61);
        continuousOutputModel57.reset();
        double double69 = continuousOutputModel57.getInitialTime();
        continuousOutputModel40.append(continuousOutputModel57);
        continuousOutputModel36.append(continuousOutputModel57);
        continuousOutputModel31.append(continuousOutputModel57);
        continuousOutputModel16.append(continuousOutputModel31);
        continuousOutputModel5.append(continuousOutputModel16);
        java.lang.Class<?> wildcardClass75 = continuousOutputModel5.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        double double25 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        continuousOutputModel26.reset();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        double double35 = continuousOutputModel32.getFinalTime();
        boolean boolean36 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel32);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel38.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean49 = continuousOutputModel48.requiresDenseOutput();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel48);
        continuousOutputModel38.reset();
        boolean boolean54 = continuousOutputModel38.requiresDenseOutput();
        double double55 = continuousOutputModel38.getFinalTime();
        continuousOutputModel26.append(continuousOutputModel38);
        continuousOutputModel12.append(continuousOutputModel26);
        boolean boolean58 = continuousOutputModel26.requiresDenseOutput();
        java.lang.Class<?> wildcardClass59 = continuousOutputModel26.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getInitialTime();
        double double20 = continuousOutputModel11.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        double double25 = continuousOutputModel21.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel36);
        continuousOutputModel27.append(continuousOutputModel36);
        continuousOutputModel21.append(continuousOutputModel36);
        boolean boolean42 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel0.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean49 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel45.append(continuousOutputModel50);
        continuousOutputModel50.reset();
        double double56 = continuousOutputModel50.getInitialTime();
        double double57 = continuousOutputModel50.getFinalTime();
        continuousOutputModel50.reset();
        continuousOutputModel50.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel60.reset();
        continuousOutputModel60.reset();
        continuousOutputModel50.append(continuousOutputModel60);
        continuousOutputModel50.reset();
        continuousOutputModel50.reset();
        double double66 = continuousOutputModel50.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel67 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double68 = continuousOutputModel67.getFinalTime();
        double double69 = continuousOutputModel67.getInitialTime();
        boolean boolean70 = continuousOutputModel67.requiresDenseOutput();
        continuousOutputModel67.reset();
        boolean boolean72 = continuousOutputModel67.requiresDenseOutput();
        double double73 = continuousOutputModel67.getInitialTime();
        continuousOutputModel67.reset();
        continuousOutputModel50.append(continuousOutputModel67);
        continuousOutputModel21.append(continuousOutputModel50);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = continuousOutputModel50.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean17 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel11.requiresDenseOutput();
        double double19 = continuousOutputModel11.getInitialTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        double double23 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean25 = continuousOutputModel0.requiresDenseOutput();
        double double26 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean25 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel26);
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        double double32 = continuousOutputModel26.getFinalTime();
        continuousOutputModel26.reset();
        double double34 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel35.reset();
        boolean boolean39 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel40);
        boolean boolean45 = continuousOutputModel40.requiresDenseOutput();
        double double46 = continuousOutputModel40.getFinalTime();
        continuousOutputModel40.reset();
        double double48 = continuousOutputModel40.getInitialTime();
        boolean boolean49 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel40);
        boolean boolean51 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        continuousOutputModel0.append(continuousOutputModel26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel55.reset();
        boolean boolean59 = continuousOutputModel55.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double61 = continuousOutputModel60.getFinalTime();
        double double62 = continuousOutputModel60.getInitialTime();
        boolean boolean63 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel55.append(continuousOutputModel60);
        double double65 = continuousOutputModel60.getInitialTime();
        boolean boolean66 = continuousOutputModel60.requiresDenseOutput();
        boolean boolean67 = continuousOutputModel60.requiresDenseOutput();
        continuousOutputModel60.reset();
        continuousOutputModel0.append(continuousOutputModel60);
        boolean boolean70 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator71, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel0.reset();
        double double17 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel24.requiresDenseOutput();
        double double30 = continuousOutputModel24.getFinalTime();
        continuousOutputModel24.reset();
        double double32 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        boolean boolean37 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel38);
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        double double44 = continuousOutputModel38.getFinalTime();
        continuousOutputModel38.reset();
        double double46 = continuousOutputModel38.getInitialTime();
        boolean boolean47 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel38);
        boolean boolean49 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        double double51 = continuousOutputModel24.getInitialTime();
        boolean boolean52 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        continuousOutputModel0.append(continuousOutputModel24);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel24.setInterpolatedTime((double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        double double7 = continuousOutputModel3.getInitialTime();
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        java.io.IOException iOException16 = new java.io.IOException("", (java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        java.lang.Object[] objArray22 = new java.lang.Object[] { double7, mathException12, iOException15, false, continuousOutputModel19 };
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException36);
        java.lang.Object[] objArray39 = mathException38.getArguments();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException41);
        java.lang.String str43 = mathException42.getPattern();
        java.lang.String str44 = mathException42.getPattern();
        java.lang.Object[] objArray45 = mathException42.getArguments();
        java.io.IOException iOException46 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException47);
        java.io.IOException iOException51 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!");
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: ", (java.lang.Object[]) throwableArray52, throwable53);
        // The following exception was thrown during execution in test generation
        try {
            mathException47.addSuppressed(throwable53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str43, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str44, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        continuousOutputModel12.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel12.append(continuousOutputModel22);
        continuousOutputModel12.reset();
        boolean boolean28 = continuousOutputModel12.requiresDenseOutput();
        double double29 = continuousOutputModel12.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean31 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        double double33 = continuousOutputModel12.getFinalTime();
        boolean boolean34 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        boolean boolean37 = continuousOutputModel12.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        double double12 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        double double26 = continuousOutputModel14.getFinalTime();
        continuousOutputModel4.append(continuousOutputModel14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.handleStep(stepInterpolator28, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        double double20 = continuousOutputModel12.getFinalTime();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel12.requiresDenseOutput();
        double double23 = continuousOutputModel12.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel12);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel30);
        double double35 = continuousOutputModel30.getInitialTime();
        double double36 = continuousOutputModel30.getFinalTime();
        continuousOutputModel30.reset();
        continuousOutputModel30.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel30.append(continuousOutputModel39);
        continuousOutputModel5.append(continuousOutputModel30);
        boolean boolean48 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator51, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        double double10 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        double double15 = continuousOutputModel12.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel12.append(continuousOutputModel16);
        boolean boolean20 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel22);
        continuousOutputModel4.append(continuousOutputModel12);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = continuousOutputModel12.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        java.io.IOException iOException12 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException12);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", objArray15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException32 = new java.io.IOException("", (java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        java.lang.Object[] objArray38 = new java.lang.Object[] { double23, mathException28, iOException31, false, continuousOutputModel35 };
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        java.io.IOException iOException52 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException52);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray15);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray63 = mathException62.getSuppressed();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("", strArray77);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: ", strArray77);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray63, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray63);
        java.io.IOException iOException90 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException90);
        java.io.IOException iOException93 = new java.io.IOException((java.lang.Throwable) mathException92);
        mathException87.addSuppressed((java.lang.Throwable) mathException92);
        java.io.IOException iOException95 = new java.io.IOException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Throwable) mathException96);
        java.lang.String str98 = mathException97.getPattern();
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!" + "'", str98, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!");
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean16 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel6.requiresDenseOutput();
        double double18 = continuousOutputModel6.getFinalTime();
        double double19 = continuousOutputModel6.getFinalTime();
        double double20 = continuousOutputModel6.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel6);
        double double22 = continuousOutputModel6.getFinalTime();
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        boolean boolean37 = continuousOutputModel32.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel32.reset();
        continuousOutputModel0.append(continuousOutputModel32);
        boolean boolean41 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double6 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getFinalTime();
        double double11 = continuousOutputModel0.getFinalTime();
        double double12 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel40.append(continuousOutputModel45);
        boolean boolean50 = continuousOutputModel45.requiresDenseOutput();
        double double51 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        double double53 = continuousOutputModel45.getInitialTime();
        double double54 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        boolean boolean56 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        boolean boolean59 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        boolean boolean61 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        double double63 = continuousOutputModel57.getInitialTime();
        continuousOutputModel45.append(continuousOutputModel57);
        continuousOutputModel57.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        double double69 = continuousOutputModel66.getFinalTime();
        boolean boolean70 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean72 = continuousOutputModel66.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        double double76 = continuousOutputModel73.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel77 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double78 = continuousOutputModel77.getFinalTime();
        double double79 = continuousOutputModel77.getInitialTime();
        continuousOutputModel73.append(continuousOutputModel77);
        boolean boolean81 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel66.append(continuousOutputModel73);
        continuousOutputModel57.append(continuousOutputModel66);
        continuousOutputModel9.append(continuousOutputModel66);
        continuousOutputModel0.append(continuousOutputModel9);
        continuousOutputModel9.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = continuousOutputModel9.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel6.append(continuousOutputModel11);
        boolean boolean15 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean17 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel11.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double33 = continuousOutputModel11.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel14.append(continuousOutputModel21);
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        double double29 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        continuousOutputModel26.append(continuousOutputModel30);
        double double34 = continuousOutputModel26.getFinalTime();
        continuousOutputModel26.reset();
        continuousOutputModel26.reset();
        boolean boolean37 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        continuousOutputModel14.append(continuousOutputModel26);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        double double44 = continuousOutputModel40.getFinalTime();
        continuousOutputModel40.reset();
        continuousOutputModel40.reset();
        continuousOutputModel40.reset();
        continuousOutputModel14.append(continuousOutputModel40);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        continuousOutputModel5.append(continuousOutputModel19);
        double double25 = continuousOutputModel5.getFinalTime();
        double double26 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        boolean boolean29 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        continuousOutputModel27.append(continuousOutputModel32);
        double double37 = continuousOutputModel32.getInitialTime();
        boolean boolean38 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        double double42 = continuousOutputModel39.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        continuousOutputModel39.append(continuousOutputModel43);
        double double47 = continuousOutputModel39.getFinalTime();
        boolean boolean48 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean49 = continuousOutputModel39.requiresDenseOutput();
        double double50 = continuousOutputModel39.getFinalTime();
        continuousOutputModel32.append(continuousOutputModel39);
        continuousOutputModel39.reset();
        continuousOutputModel5.append(continuousOutputModel39);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double55 = continuousOutputModel54.getFinalTime();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        continuousOutputModel54.reset();
        double double59 = continuousOutputModel54.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel60 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double61 = continuousOutputModel60.getFinalTime();
        double double62 = continuousOutputModel60.getInitialTime();
        continuousOutputModel54.append(continuousOutputModel60);
        continuousOutputModel54.reset();
        continuousOutputModel54.reset();
        continuousOutputModel54.reset();
        boolean boolean67 = continuousOutputModel54.requiresDenseOutput();
        double double68 = continuousOutputModel54.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel54);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel54.setInterpolatedTime((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean21 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel12.append(continuousOutputModel16);
        continuousOutputModel12.reset();
        double double24 = continuousOutputModel12.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        continuousOutputModel31.reset();
        continuousOutputModel25.append(continuousOutputModel31);
        boolean boolean35 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        continuousOutputModel38.append(continuousOutputModel42);
        double double46 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double48 = continuousOutputModel47.getFinalTime();
        double double49 = continuousOutputModel47.getInitialTime();
        boolean boolean50 = continuousOutputModel47.requiresDenseOutput();
        double double51 = continuousOutputModel47.getInitialTime();
        continuousOutputModel47.reset();
        boolean boolean53 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel47);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        double double57 = continuousOutputModel55.getInitialTime();
        boolean boolean58 = continuousOutputModel55.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        boolean boolean62 = continuousOutputModel59.requiresDenseOutput();
        continuousOutputModel59.reset();
        boolean boolean64 = continuousOutputModel59.requiresDenseOutput();
        continuousOutputModel55.append(continuousOutputModel59);
        continuousOutputModel55.reset();
        continuousOutputModel47.append(continuousOutputModel55);
        double double68 = continuousOutputModel55.getInitialTime();
        double double69 = continuousOutputModel55.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel55);
        continuousOutputModel12.append(continuousOutputModel55);
        continuousOutputModel0.append(continuousOutputModel55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel55.handleStep(stepInterpolator73, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException3);
        java.lang.String str5 = mathException4.getPattern();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException4);
        java.lang.String str8 = mathException7.getPattern();
        java.lang.Object[] objArray9 = mathException7.getArguments();
        java.lang.Object[] objArray10 = mathException7.getArguments();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        java.io.IOException iOException26 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException26);
        java.lang.Object[] objArray29 = mathException28.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", objArray29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        double double37 = continuousOutputModel33.getInitialTime();
        java.io.IOException iOException40 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException40);
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        java.io.IOException iOException46 = new java.io.IOException("", (java.lang.Throwable) iOException45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        java.lang.Object[] objArray52 = new java.lang.Object[] { double37, mathException42, iOException45, false, continuousOutputModel49 };
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        java.io.IOException iOException66 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException66);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray61, (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray29, (java.lang.Throwable) mathException72);
        derivativeException20.addSuppressed((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException72);
        java.io.IOException iOException76 = new java.io.IOException((java.lang.Throwable) mathException72);
        java.lang.String str77 = mathException72.getPattern();
        java.io.IOException iOException78 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException72);
        mathException7.addSuppressed((java.lang.Throwable) mathException79);
        java.lang.Object[] objArray81 = mathException7.getArguments();
        java.lang.String str82 = mathException7.getPattern();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str8, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str77, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str82, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        continuousOutputModel0.append(continuousOutputModel4);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        double double12 = continuousOutputModel5.getFinalTime();
        double double13 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        continuousOutputModel20.reset();
        continuousOutputModel14.append(continuousOutputModel20);
        boolean boolean24 = continuousOutputModel14.requiresDenseOutput();
        double double25 = continuousOutputModel14.getInitialTime();
        boolean boolean26 = continuousOutputModel14.requiresDenseOutput();
        double double27 = continuousOutputModel14.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel14);
        double double29 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.handleStep(stepInterpolator30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        double double12 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel18);
        continuousOutputModel18.reset();
        double double24 = continuousOutputModel18.getInitialTime();
        double double25 = continuousOutputModel18.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel18);
        double double27 = continuousOutputModel5.getFinalTime();
        boolean boolean28 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        double double30 = continuousOutputModel5.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel9);
        double double17 = continuousOutputModel9.getFinalTime();
        continuousOutputModel9.reset();
        boolean boolean19 = continuousOutputModel9.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel9.setInterpolatedTime((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        double double14 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        boolean boolean27 = continuousOutputModel17.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel17.setInterpolatedTime(1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        double double18 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        double double23 = continuousOutputModel19.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean28 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        boolean boolean32 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel29);
        continuousOutputModel19.append(continuousOutputModel24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        double double37 = continuousOutputModel35.getInitialTime();
        boolean boolean38 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        boolean boolean41 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel39);
        continuousOutputModel24.append(continuousOutputModel35);
        double double44 = continuousOutputModel35.getInitialTime();
        continuousOutputModel35.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        double double50 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        double double52 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        continuousOutputModel46.reset();
        boolean boolean55 = continuousOutputModel46.requiresDenseOutput();
        double double56 = continuousOutputModel46.getFinalTime();
        double double57 = continuousOutputModel46.getInitialTime();
        continuousOutputModel35.append(continuousOutputModel46);
        boolean boolean59 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel35);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean63 = continuousOutputModel62.requiresDenseOutput();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel66.reset();
        boolean boolean71 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel62.append(continuousOutputModel66);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel73 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double74 = continuousOutputModel73.getFinalTime();
        double double75 = continuousOutputModel73.getInitialTime();
        boolean boolean76 = continuousOutputModel73.requiresDenseOutput();
        continuousOutputModel73.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel78 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean79 = continuousOutputModel78.requiresDenseOutput();
        double double80 = continuousOutputModel78.getInitialTime();
        continuousOutputModel73.append(continuousOutputModel78);
        continuousOutputModel62.append(continuousOutputModel73);
        boolean boolean83 = continuousOutputModel62.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel84 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double85 = continuousOutputModel84.getFinalTime();
        double double86 = continuousOutputModel84.getInitialTime();
        double double87 = continuousOutputModel84.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel88 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double89 = continuousOutputModel88.getFinalTime();
        double double90 = continuousOutputModel88.getInitialTime();
        continuousOutputModel84.append(continuousOutputModel88);
        continuousOutputModel88.reset();
        continuousOutputModel88.reset();
        continuousOutputModel62.append(continuousOutputModel88);
        continuousOutputModel62.reset();
        continuousOutputModel0.append(continuousOutputModel62);
        double double97 = continuousOutputModel62.getInitialTime();
        boolean boolean98 = continuousOutputModel62.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = continuousOutputModel62.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel17.append(continuousOutputModel27);
        boolean boolean32 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        boolean boolean43 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel38);
        continuousOutputModel34.reset();
        double double46 = continuousOutputModel34.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel34);
        continuousOutputModel13.append(continuousOutputModel34);
        continuousOutputModel8.append(continuousOutputModel34);
        double double50 = continuousOutputModel34.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel34.setInterpolatedTime((double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double15 = continuousOutputModel5.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        continuousOutputModel0.append(continuousOutputModel28);
        continuousOutputModel28.reset();
        boolean boolean42 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = continuousOutputModel28.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        double double11 = continuousOutputModel0.getInitialTime();
        double double12 = continuousOutputModel0.getInitialTime();
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel19);
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        double double25 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        double double27 = continuousOutputModel19.getInitialTime();
        boolean boolean28 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        boolean boolean30 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel5.requiresDenseOutput();
        double double32 = continuousOutputModel5.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = continuousOutputModel5.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean13 = continuousOutputModel7.requiresDenseOutput();
        double double14 = continuousOutputModel7.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean16 = continuousOutputModel7.requiresDenseOutput();
        double double17 = continuousOutputModel7.getFinalTime();
        double double18 = continuousOutputModel7.getFinalTime();
        boolean boolean19 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        continuousOutputModel25.append(continuousOutputModel29);
        double double33 = continuousOutputModel25.getInitialTime();
        double double34 = continuousOutputModel25.getFinalTime();
        continuousOutputModel21.append(continuousOutputModel25);
        boolean boolean36 = continuousOutputModel21.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel21.requiresDenseOutput();
        double double38 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        continuousOutputModel7.append(continuousOutputModel21);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = continuousOutputModel21.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel20);
        continuousOutputModel5.append(continuousOutputModel16);
        boolean boolean25 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel26.reset();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        double double29 = continuousOutputModel26.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        double double32 = continuousOutputModel26.getFinalTime();
        double double33 = continuousOutputModel26.getFinalTime();
        boolean boolean34 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException15);
        java.lang.Object[] objArray18 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", objArray18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        double double26 = continuousOutputModel22.getInitialTime();
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("", (java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        java.lang.Object[] objArray41 = new java.lang.Object[] { double26, mathException31, iOException34, false, continuousOutputModel38 };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException55);
        java.lang.Object[] objArray58 = mathException57.getArguments();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) mathException61);
        derivativeException9.addSuppressed((java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) mathException61);
        java.lang.Throwable[] throwableArray66 = iOException65.getSuppressed();
        java.io.IOException iOException67 = new java.io.IOException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: ", (java.lang.Throwable) iOException65);
        java.lang.Class<?> wildcardClass68 = iOException67.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean26 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel17.append(continuousOutputModel22);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel22.append(continuousOutputModel33);
        boolean boolean42 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel44 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double45 = continuousOutputModel44.getFinalTime();
        double double46 = continuousOutputModel44.getInitialTime();
        double double47 = continuousOutputModel44.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        continuousOutputModel44.append(continuousOutputModel48);
        double double52 = continuousOutputModel44.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel53 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double54 = continuousOutputModel53.getFinalTime();
        double double55 = continuousOutputModel53.getInitialTime();
        boolean boolean56 = continuousOutputModel53.requiresDenseOutput();
        double double57 = continuousOutputModel53.getInitialTime();
        continuousOutputModel53.reset();
        boolean boolean59 = continuousOutputModel53.requiresDenseOutput();
        continuousOutputModel44.append(continuousOutputModel53);
        continuousOutputModel33.append(continuousOutputModel44);
        continuousOutputModel0.append(continuousOutputModel44);
        boolean boolean63 = continuousOutputModel44.requiresDenseOutput();
        continuousOutputModel44.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double65 = continuousOutputModel44.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        double double28 = continuousOutputModel22.getInitialTime();
        continuousOutputModel14.append(continuousOutputModel22);
        double double30 = continuousOutputModel14.getFinalTime();
        boolean boolean31 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.handleStep(stepInterpolator32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getFinalTime();
        boolean boolean14 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        double double15 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        double double19 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel20);
        continuousOutputModel16.reset();
        boolean boolean24 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean26 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        continuousOutputModel0.append(continuousOutputModel16);
        double double29 = continuousOutputModel0.getInitialTime();
        boolean boolean30 = continuousOutputModel0.requiresDenseOutput();
        double double31 = continuousOutputModel0.getInitialTime();
        double double32 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        double double9 = continuousOutputModel6.getFinalTime();
        boolean boolean10 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        double double18 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        double double24 = continuousOutputModel19.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel25);
        continuousOutputModel13.append(continuousOutputModel25);
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        continuousOutputModel13.reset();
        double double33 = continuousOutputModel13.getFinalTime();
        double double34 = continuousOutputModel13.getInitialTime();
        double double35 = continuousOutputModel13.getInitialTime();
        double double36 = continuousOutputModel13.getFinalTime();
        boolean boolean37 = continuousOutputModel13.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        double double7 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        double double21 = continuousOutputModel16.getFinalTime();
        boolean boolean22 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel16);
        boolean boolean26 = continuousOutputModel0.requiresDenseOutput();
        double double27 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double20 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        continuousOutputModel6.reset();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double12 = continuousOutputModel6.getInitialTime();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double14 = continuousOutputModel6.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException6);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("hi!", objArray9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        double double17 = continuousOutputModel13.getInitialTime();
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        java.io.IOException iOException26 = new java.io.IOException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double30 = continuousOutputModel29.getFinalTime();
        double double31 = continuousOutputModel29.getInitialTime();
        java.lang.Object[] objArray32 = new java.lang.Object[] { double17, mathException22, iOException25, false, continuousOutputModel29 };
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        java.io.IOException iOException46 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException46);
        java.lang.Object[] objArray49 = mathException48.getArguments();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray9, (java.lang.Throwable) mathException52);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) mathException56);
        java.io.IOException iOException59 = new java.io.IOException("", (java.lang.Throwable) mathException56);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException60);
        java.lang.Object[] objArray62 = derivativeException61.getArguments();
        java.lang.String str63 = derivativeException61.getPattern();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double3 = continuousOutputModel2.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel2.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel16);
        continuousOutputModel16.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        double double29 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel30);
        continuousOutputModel16.append(continuousOutputModel24);
        continuousOutputModel16.reset();
        continuousOutputModel0.append(continuousOutputModel16);
        boolean boolean37 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        double double10 = continuousOutputModel0.getInitialTime();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double3 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        double double7 = continuousOutputModel4.getFinalTime();
        double double8 = continuousOutputModel4.getInitialTime();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        double double11 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        double double7 = continuousOutputModel4.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        continuousOutputModel4.append(continuousOutputModel8);
        double double12 = continuousOutputModel4.getInitialTime();
        double double13 = continuousOutputModel4.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean15 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel4.requiresDenseOutput();
        double double17 = continuousOutputModel4.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.handleStep(stepInterpolator18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException2);
        java.lang.Object[] objArray4 = derivativeException3.getArguments();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray9);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        java.io.IOException iOException30 = new java.io.IOException("", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        java.lang.Object[] objArray36 = new java.lang.Object[] { double21, mathException26, iOException29, false, continuousOutputModel33 };
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException55);
        java.lang.String str57 = mathException56.getPattern();
        java.lang.String str58 = mathException56.getPattern();
        java.lang.Object[] objArray59 = mathException56.getArguments();
        java.io.IOException iOException60 = new java.io.IOException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException60);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        mathException14.addSuppressed((java.lang.Throwable) mathException61);
        java.lang.String str64 = mathException14.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[, hi!, hi!]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str57, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str58, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str64, "org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        double double29 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        boolean boolean33 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel25.setInterpolatedTime((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        continuousOutputModel7.reset();
        boolean boolean18 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        boolean boolean33 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel24.append(continuousOutputModel28);
        continuousOutputModel20.append(continuousOutputModel24);
        double double36 = continuousOutputModel24.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean38 = continuousOutputModel37.requiresDenseOutput();
        boolean boolean39 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        continuousOutputModel24.append(continuousOutputModel37);
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        double double43 = continuousOutputModel37.getFinalTime();
        boolean boolean44 = continuousOutputModel37.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean49 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double52 = continuousOutputModel51.getFinalTime();
        continuousOutputModel51.reset();
        continuousOutputModel45.append(continuousOutputModel51);
        double double55 = continuousOutputModel45.getInitialTime();
        boolean boolean56 = continuousOutputModel45.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double58 = continuousOutputModel57.getFinalTime();
        double double59 = continuousOutputModel57.getInitialTime();
        double double60 = continuousOutputModel57.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel61 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double62 = continuousOutputModel61.getFinalTime();
        double double63 = continuousOutputModel61.getInitialTime();
        continuousOutputModel57.append(continuousOutputModel61);
        double double65 = continuousOutputModel57.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        boolean boolean69 = continuousOutputModel66.requiresDenseOutput();
        double double70 = continuousOutputModel66.getInitialTime();
        continuousOutputModel66.reset();
        boolean boolean72 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel57.append(continuousOutputModel66);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean75 = continuousOutputModel74.requiresDenseOutput();
        double double76 = continuousOutputModel74.getInitialTime();
        boolean boolean77 = continuousOutputModel74.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel78 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double79 = continuousOutputModel78.getFinalTime();
        double double80 = continuousOutputModel78.getInitialTime();
        boolean boolean81 = continuousOutputModel78.requiresDenseOutput();
        continuousOutputModel78.reset();
        boolean boolean83 = continuousOutputModel78.requiresDenseOutput();
        continuousOutputModel74.append(continuousOutputModel78);
        continuousOutputModel74.reset();
        continuousOutputModel66.append(continuousOutputModel74);
        continuousOutputModel45.append(continuousOutputModel66);
        boolean boolean88 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        continuousOutputModel37.append(continuousOutputModel45);
        boolean boolean91 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel37);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        java.io.IOException iOException11 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException11);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", objArray14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        double double22 = continuousOutputModel18.getInitialTime();
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException25);
        java.io.IOException iOException30 = new java.io.IOException("hi!");
        java.io.IOException iOException31 = new java.io.IOException("", (java.lang.Throwable) iOException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException30);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        java.lang.Object[] objArray37 = new java.lang.Object[] { double22, mathException27, iOException30, false, continuousOutputModel34 };
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        java.io.IOException iOException51 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException51);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray14);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray76);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: java.io.IOException: ", strArray76);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray62, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Object[]) throwableArray62);
        java.io.IOException iOException90 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException90);
        java.lang.Object[] objArray93 = mathException92.getArguments();
        java.lang.Throwable[] throwableArray94 = mathException92.getSuppressed();
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray94);
        mathException86.addSuppressed((java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!", (java.lang.Throwable) mathException95);
        java.lang.String str98 = mathException97.getPattern();
        java.lang.String str99 = mathException97.getPattern();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!" + "'", str98, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!" + "'", str99, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: hi!");
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        boolean boolean25 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        double double29 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        double double15 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        double double27 = continuousOutputModel24.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel28);
        double double32 = continuousOutputModel24.getInitialTime();
        double double33 = continuousOutputModel24.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel34.reset();
        double double38 = continuousOutputModel34.getInitialTime();
        continuousOutputModel24.append(continuousOutputModel34);
        double double40 = continuousOutputModel34.getInitialTime();
        double double41 = continuousOutputModel34.getFinalTime();
        boolean boolean42 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel34);
        continuousOutputModel5.append(continuousOutputModel34);
        continuousOutputModel5.reset();
        double double46 = continuousOutputModel5.getFinalTime();
        java.lang.Class<?> wildcardClass47 = continuousOutputModel5.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        boolean boolean24 = continuousOutputModel20.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel25);
        continuousOutputModel15.append(continuousOutputModel20);
        continuousOutputModel6.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean33 = continuousOutputModel32.requiresDenseOutput();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        boolean boolean43 = continuousOutputModel40.requiresDenseOutput();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        boolean boolean46 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel32.append(continuousOutputModel40);
        continuousOutputModel40.reset();
        continuousOutputModel15.append(continuousOutputModel40);
        continuousOutputModel40.reset();
        double double51 = continuousOutputModel40.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getInitialTime();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel7.reset();
        boolean boolean12 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        double double16 = continuousOutputModel13.getFinalTime();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        boolean boolean19 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        boolean boolean24 = continuousOutputModel20.requiresDenseOutput();
        double double25 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        double double31 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        continuousOutputModel26.append(continuousOutputModel32);
        continuousOutputModel20.append(continuousOutputModel32);
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        continuousOutputModel0.append(continuousOutputModel13);
        boolean boolean40 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel47 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double48 = continuousOutputModel47.getFinalTime();
        double double49 = continuousOutputModel47.getInitialTime();
        boolean boolean50 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel47.reset();
        boolean boolean52 = continuousOutputModel47.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel47);
        continuousOutputModel41.append(continuousOutputModel43);
        boolean boolean55 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean58 = continuousOutputModel57.requiresDenseOutput();
        boolean boolean59 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel57.reset();
        boolean boolean61 = continuousOutputModel57.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel57.append(continuousOutputModel62);
        continuousOutputModel62.reset();
        double double68 = continuousOutputModel62.getInitialTime();
        double double69 = continuousOutputModel62.getFinalTime();
        continuousOutputModel62.reset();
        continuousOutputModel62.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel72 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean73 = continuousOutputModel72.requiresDenseOutput();
        double double74 = continuousOutputModel72.getInitialTime();
        continuousOutputModel72.reset();
        continuousOutputModel72.reset();
        continuousOutputModel62.append(continuousOutputModel72);
        continuousOutputModel41.append(continuousOutputModel72);
        continuousOutputModel0.append(continuousOutputModel41);
        boolean boolean80 = continuousOutputModel41.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel41.setInterpolatedTime((double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        double double32 = continuousOutputModel27.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel27.append(continuousOutputModel33);
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel0.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel45);
        boolean boolean48 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel69 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double70 = continuousOutputModel69.getFinalTime();
        double double71 = continuousOutputModel69.getInitialTime();
        boolean boolean72 = continuousOutputModel69.requiresDenseOutput();
        continuousOutputModel69.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean75 = continuousOutputModel74.requiresDenseOutput();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel69.append(continuousOutputModel74);
        continuousOutputModel58.append(continuousOutputModel69);
        double double79 = continuousOutputModel69.getFinalTime();
        continuousOutputModel50.append(continuousOutputModel69);
        continuousOutputModel41.append(continuousOutputModel69);
        continuousOutputModel0.append(continuousOutputModel69);
        continuousOutputModel69.reset();
        boolean boolean84 = continuousOutputModel69.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator85 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel69.handleStep(stepInterpolator85, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean13 = continuousOutputModel9.requiresDenseOutput();
        double double14 = continuousOutputModel9.getFinalTime();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel28);
        double double38 = continuousOutputModel28.getFinalTime();
        continuousOutputModel9.append(continuousOutputModel28);
        continuousOutputModel0.append(continuousOutputModel28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        double double45 = continuousOutputModel41.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        boolean boolean48 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel46.reset();
        boolean boolean50 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double52 = continuousOutputModel51.getFinalTime();
        double double53 = continuousOutputModel51.getInitialTime();
        boolean boolean54 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel46.append(continuousOutputModel51);
        continuousOutputModel41.append(continuousOutputModel46);
        continuousOutputModel46.reset();
        continuousOutputModel46.reset();
        double double59 = continuousOutputModel46.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel46);
        double double61 = continuousOutputModel46.getInitialTime();
        continuousOutputModel46.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel6.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getFinalTime();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        double double26 = continuousOutputModel23.getFinalTime();
        double double27 = continuousOutputModel23.getInitialTime();
        double double28 = continuousOutputModel23.getFinalTime();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel23);
        double double32 = continuousOutputModel17.getInitialTime();
        continuousOutputModel6.append(continuousOutputModel17);
        boolean boolean34 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel6.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean13 = continuousOutputModel12.requiresDenseOutput();
        boolean boolean14 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        boolean boolean16 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        boolean boolean28 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel23);
        continuousOutputModel17.append(continuousOutputModel19);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        boolean boolean35 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel31);
        continuousOutputModel12.append(continuousOutputModel31);
        continuousOutputModel5.append(continuousOutputModel12);
        double double40 = continuousOutputModel5.getFinalTime();
        boolean boolean41 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator42, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException5);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", objArray8);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        double double16 = continuousOutputModel12.getInitialTime();
        java.io.IOException iOException19 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        java.io.IOException iOException25 = new java.io.IOException("", (java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        java.lang.Object[] objArray31 = new java.lang.Object[] { double16, mathException21, iOException24, false, continuousOutputModel28 };
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException45);
        java.lang.Object[] objArray48 = mathException47.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray8, (java.lang.Throwable) mathException51);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) mathException51);
        java.lang.Throwable[] throwableArray54 = iOException53.getSuppressed();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        double double10 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        double double14 = continuousOutputModel11.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel15);
        double double19 = continuousOutputModel11.getFinalTime();
        boolean boolean20 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean25 = continuousOutputModel11.requiresDenseOutput();
        boolean boolean26 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        double double31 = continuousOutputModel29.getInitialTime();
        double double32 = continuousOutputModel29.getFinalTime();
        double double33 = continuousOutputModel29.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        boolean boolean36 = continuousOutputModel34.requiresDenseOutput();
        continuousOutputModel34.reset();
        boolean boolean38 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double40 = continuousOutputModel39.getFinalTime();
        double double41 = continuousOutputModel39.getInitialTime();
        boolean boolean42 = continuousOutputModel39.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel39);
        double double44 = continuousOutputModel39.getInitialTime();
        double double45 = continuousOutputModel39.getFinalTime();
        continuousOutputModel39.reset();
        boolean boolean47 = continuousOutputModel39.requiresDenseOutput();
        double double48 = continuousOutputModel39.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        boolean boolean52 = continuousOutputModel49.requiresDenseOutput();
        double double53 = continuousOutputModel49.getInitialTime();
        boolean boolean54 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel49);
        continuousOutputModel39.reset();
        continuousOutputModel29.append(continuousOutputModel39);
        continuousOutputModel11.append(continuousOutputModel39);
        double double59 = continuousOutputModel11.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double60 = continuousOutputModel11.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean24 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean26 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double27 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getInitialTime();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel9.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        double double29 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        continuousOutputModel26.append(continuousOutputModel30);
        double double34 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        boolean boolean38 = continuousOutputModel35.requiresDenseOutput();
        double double39 = continuousOutputModel35.getInitialTime();
        continuousOutputModel35.reset();
        boolean boolean41 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel35);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel43);
        boolean boolean49 = continuousOutputModel35.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        double double52 = continuousOutputModel50.getInitialTime();
        double double53 = continuousOutputModel50.getInitialTime();
        double double54 = continuousOutputModel50.getInitialTime();
        boolean boolean55 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel35.append(continuousOutputModel50);
        continuousOutputModel0.append(continuousOutputModel35);
        continuousOutputModel35.reset();
        double double59 = continuousOutputModel35.getFinalTime();
        continuousOutputModel35.reset();
        double double61 = continuousOutputModel35.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean19 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        boolean boolean23 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        double double30 = continuousOutputModel27.getFinalTime();
        boolean boolean31 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        continuousOutputModel33.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        double double45 = continuousOutputModel43.getInitialTime();
        continuousOutputModel38.append(continuousOutputModel43);
        continuousOutputModel33.append(continuousOutputModel43);
        continuousOutputModel33.reset();
        boolean boolean49 = continuousOutputModel33.requiresDenseOutput();
        double double50 = continuousOutputModel33.getFinalTime();
        continuousOutputModel21.append(continuousOutputModel33);
        double double52 = continuousOutputModel21.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel21.handleStep(stepInterpolator54, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        double double12 = continuousOutputModel5.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel18);
        continuousOutputModel18.reset();
        double double24 = continuousOutputModel18.getInitialTime();
        double double25 = continuousOutputModel18.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel18);
        double double27 = continuousOutputModel18.getFinalTime();
        double double28 = continuousOutputModel18.getFinalTime();
        double double29 = continuousOutputModel18.getInitialTime();
        double double30 = continuousOutputModel18.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel18.handleStep(stepInterpolator31, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel5);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel20);
        continuousOutputModel5.append(continuousOutputModel16);
        boolean boolean25 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel26.reset();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        double double29 = continuousOutputModel26.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        double double32 = continuousOutputModel26.getFinalTime();
        double double33 = continuousOutputModel26.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double34 = continuousOutputModel26.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean12 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean14 = continuousOutputModel8.requiresDenseOutput();
        double double15 = continuousOutputModel8.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        boolean boolean18 = continuousOutputModel16.requiresDenseOutput();
        continuousOutputModel16.reset();
        boolean boolean20 = continuousOutputModel16.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel21);
        double double26 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        boolean boolean28 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel29.reset();
        continuousOutputModel29.reset();
        continuousOutputModel21.append(continuousOutputModel29);
        continuousOutputModel8.append(continuousOutputModel21);
        continuousOutputModel0.append(continuousOutputModel21);
        boolean boolean35 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel21.reset();
        boolean boolean38 = continuousOutputModel21.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        double double13 = continuousOutputModel9.getInitialTime();
        continuousOutputModel9.reset();
        boolean boolean15 = continuousOutputModel9.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        double double20 = continuousOutputModel17.getInitialTime();
        continuousOutputModel9.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        continuousOutputModel4.append(continuousOutputModel17);
        double double24 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel17.handleStep(stepInterpolator26, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        java.lang.Object[] objArray8 = derivativeException7.getArguments();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.io.IOException iOException19 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException19);
        derivativeException17.addSuppressed((java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray8, (java.lang.Throwable) derivativeException17);
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        java.io.IOException iOException26 = new java.io.IOException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray8, (java.lang.Throwable) iOException26);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", objArray38);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        double double46 = continuousOutputModel42.getInitialTime();
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException49);
        java.io.IOException iOException54 = new java.io.IOException("hi!");
        java.io.IOException iOException55 = new java.io.IOException("", (java.lang.Throwable) iOException54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException54);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        java.lang.Object[] objArray61 = new java.lang.Object[] { double46, mathException51, iOException54, false, continuousOutputModel58 };
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        java.io.IOException iOException75 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException75);
        java.lang.Object[] objArray78 = mathException77.getArguments();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray38, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray8, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray8);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: java.io.IOException: java.io.IOException: hi!", objArray8);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException86);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        continuousOutputModel14.append(continuousOutputModel21);
        boolean boolean25 = continuousOutputModel14.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double15 = continuousOutputModel14.getFinalTime();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        boolean boolean20 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        continuousOutputModel21.reset();
        boolean boolean25 = continuousOutputModel21.requiresDenseOutput();
        double double26 = continuousOutputModel21.getFinalTime();
        continuousOutputModel14.append(continuousOutputModel21);
        continuousOutputModel2.append(continuousOutputModel21);
        continuousOutputModel21.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel21.handleStep(stepInterpolator30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel11.reset();
        boolean boolean23 = continuousOutputModel11.requiresDenseOutput();
        double double24 = continuousOutputModel11.getInitialTime();
        double double25 = continuousOutputModel11.getInitialTime();
        double double26 = continuousOutputModel11.getFinalTime();
        double double27 = continuousOutputModel11.getInitialTime();
        boolean boolean28 = continuousOutputModel11.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel11);
        double double15 = continuousOutputModel7.getInitialTime();
        double double16 = continuousOutputModel7.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        continuousOutputModel17.reset();
        double double21 = continuousOutputModel17.getInitialTime();
        continuousOutputModel7.append(continuousOutputModel17);
        continuousOutputModel7.reset();
        double double24 = continuousOutputModel7.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel7);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel7.setInterpolatedTime((double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel13);
        continuousOutputModel9.reset();
        continuousOutputModel0.append(continuousOutputModel9);
        double double22 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator23, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        boolean boolean23 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        double double27 = continuousOutputModel25.getInitialTime();
        continuousOutputModel20.append(continuousOutputModel25);
        continuousOutputModel15.append(continuousOutputModel25);
        boolean boolean30 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        double double34 = continuousOutputModel31.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        continuousOutputModel31.append(continuousOutputModel35);
        double double39 = continuousOutputModel31.getInitialTime();
        double double40 = continuousOutputModel31.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        continuousOutputModel41.reset();
        double double45 = continuousOutputModel41.getInitialTime();
        continuousOutputModel31.append(continuousOutputModel41);
        continuousOutputModel15.append(continuousOutputModel31);
        continuousOutputModel5.append(continuousOutputModel15);
        continuousOutputModel5.reset();
        boolean boolean50 = continuousOutputModel5.requiresDenseOutput();
        double double51 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        double double25 = continuousOutputModel18.getInitialTime();
        double double26 = continuousOutputModel18.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        double double11 = continuousOutputModel0.getInitialTime();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        double double17 = continuousOutputModel13.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        boolean boolean22 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel23);
        continuousOutputModel13.append(continuousOutputModel18);
        continuousOutputModel18.reset();
        continuousOutputModel18.reset();
        double double31 = continuousOutputModel18.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel18);
        double double33 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime(Double.NaN);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel4.append(continuousOutputModel22);
        double double27 = continuousOutputModel4.getInitialTime();
        continuousOutputModel4.reset();
        double double29 = continuousOutputModel4.getFinalTime();
        continuousOutputModel4.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel4.setInterpolatedTime((double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel5.append(continuousOutputModel7);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel5.append(continuousOutputModel19);
        continuousOutputModel0.append(continuousOutputModel19);
        boolean boolean27 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        continuousOutputModel35.reset();
        continuousOutputModel29.append(continuousOutputModel35);
        double double39 = continuousOutputModel29.getInitialTime();
        boolean boolean40 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        continuousOutputModel41.append(continuousOutputModel45);
        double double49 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double51 = continuousOutputModel50.getFinalTime();
        double double52 = continuousOutputModel50.getInitialTime();
        boolean boolean53 = continuousOutputModel50.requiresDenseOutput();
        double double54 = continuousOutputModel50.getInitialTime();
        continuousOutputModel50.reset();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        double double60 = continuousOutputModel58.getInitialTime();
        boolean boolean61 = continuousOutputModel58.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        boolean boolean65 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel62.reset();
        boolean boolean67 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel58.append(continuousOutputModel62);
        continuousOutputModel58.reset();
        continuousOutputModel50.append(continuousOutputModel58);
        continuousOutputModel29.append(continuousOutputModel50);
        continuousOutputModel19.append(continuousOutputModel29);
        double double73 = continuousOutputModel19.getInitialTime();
        boolean boolean74 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        double double78 = continuousOutputModel19.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel19.handleStep(stepInterpolator79, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        double double17 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel7.handleStep(stepInterpolator18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        boolean boolean31 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        double double33 = continuousOutputModel18.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean35 = continuousOutputModel34.requiresDenseOutput();
        double double36 = continuousOutputModel34.getInitialTime();
        boolean boolean37 = continuousOutputModel34.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel38);
        boolean boolean42 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        double double44 = continuousOutputModel38.getInitialTime();
        continuousOutputModel38.reset();
        continuousOutputModel18.append(continuousOutputModel38);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = continuousOutputModel18.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getInitialTime();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean17 = continuousOutputModel16.requiresDenseOutput();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel11.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel11);
        boolean boolean21 = continuousOutputModel11.requiresDenseOutput();
        java.lang.Class<?> wildcardClass22 = continuousOutputModel11.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        double double13 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double double14 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getFinalTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        double double17 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        double double21 = continuousOutputModel18.getFinalTime();
        double double22 = continuousOutputModel18.getInitialTime();
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double28 = continuousOutputModel27.getFinalTime();
        double double29 = continuousOutputModel27.getInitialTime();
        boolean boolean30 = continuousOutputModel27.requiresDenseOutput();
        continuousOutputModel27.reset();
        double double32 = continuousOutputModel27.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        continuousOutputModel27.append(continuousOutputModel33);
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel27.reset();
        continuousOutputModel0.append(continuousOutputModel27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        boolean boolean44 = continuousOutputModel42.requiresDenseOutput();
        double double45 = continuousOutputModel42.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean47 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel42.append(continuousOutputModel46);
        continuousOutputModel41.append(continuousOutputModel46);
        boolean boolean50 = continuousOutputModel41.requiresDenseOutput();
        double double51 = continuousOutputModel41.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel41);
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray54 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        double double19 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel20);
        double double24 = continuousOutputModel16.getInitialTime();
        double double25 = continuousOutputModel16.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel26.reset();
        double double30 = continuousOutputModel26.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel26);
        continuousOutputModel0.append(continuousOutputModel16);
        continuousOutputModel0.reset();
        double double34 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        java.lang.Class<?> wildcardClass36 = continuousOutputModel0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getFinalTime();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel27 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean28 = continuousOutputModel27.requiresDenseOutput();
        double double29 = continuousOutputModel27.getInitialTime();
        continuousOutputModel22.append(continuousOutputModel27);
        continuousOutputModel11.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel11);
        continuousOutputModel0.reset();
        double double35 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        double double15 = continuousOutputModel13.getInitialTime();
        double double16 = continuousOutputModel13.getFinalTime();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        double double19 = continuousOutputModel13.getFinalTime();
        double double20 = continuousOutputModel13.getFinalTime();
        continuousOutputModel5.append(continuousOutputModel13);
        double double22 = continuousOutputModel13.getFinalTime();
        double double23 = continuousOutputModel13.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = continuousOutputModel13.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        double double10 = continuousOutputModel5.getInitialTime();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean12 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = continuousOutputModel5.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        double double10 = continuousOutputModel5.getInitialTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        boolean boolean13 = continuousOutputModel5.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = continuousOutputModel5.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        continuousOutputModel5.append(continuousOutputModel19);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel19.setInterpolatedTime((double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("hi!");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) iOException5);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray9 = iOException5.getSuppressed();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        java.io.IOException iOException17 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException17);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray20);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        double double28 = continuousOutputModel24.getInitialTime();
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException31);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException37 = new java.io.IOException("", (java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException36);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        java.lang.Object[] objArray43 = new java.lang.Object[] { double28, mathException33, iOException36, false, continuousOutputModel40 };
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        java.io.IOException iOException57 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException57);
        java.lang.Object[] objArray60 = mathException59.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray52, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray20, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!", objArray20);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("", strArray74);
        java.io.IOException iOException79 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException79);
        java.lang.Object[] objArray82 = mathException81.getArguments();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray74, (java.lang.Throwable) mathException81);
        java.lang.String str85 = mathException84.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException84);
        mathException65.addSuppressed((java.lang.Throwable) derivativeException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) derivativeException86);
        java.lang.Throwable[] throwableArray89 = mathException88.getSuppressed();
        java.lang.Throwable[] throwableArray90 = mathException88.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str85, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean17 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double19 = continuousOutputModel18.getFinalTime();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel18);
        boolean boolean23 = continuousOutputModel18.requiresDenseOutput();
        double double24 = continuousOutputModel18.getFinalTime();
        continuousOutputModel18.reset();
        double double26 = continuousOutputModel18.getInitialTime();
        double double27 = continuousOutputModel18.getFinalTime();
        continuousOutputModel18.reset();
        continuousOutputModel0.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel30.requiresDenseOutput();
        double double33 = continuousOutputModel30.getFinalTime();
        continuousOutputModel30.reset();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        double double36 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        continuousOutputModel37.append(continuousOutputModel42);
        double double46 = continuousOutputModel37.getFinalTime();
        continuousOutputModel30.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double50 = continuousOutputModel49.getFinalTime();
        double double51 = continuousOutputModel49.getInitialTime();
        continuousOutputModel49.reset();
        double double53 = continuousOutputModel49.getInitialTime();
        boolean boolean54 = continuousOutputModel49.requiresDenseOutput();
        double double55 = continuousOutputModel49.getFinalTime();
        continuousOutputModel49.reset();
        boolean boolean57 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel49);
        continuousOutputModel0.append(continuousOutputModel49);
        java.lang.Class<?> wildcardClass60 = continuousOutputModel49.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel0.requiresDenseOutput();
        double double14 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        continuousOutputModel0.append(continuousOutputModel33);
        double double39 = continuousOutputModel33.getInitialTime();
        boolean boolean40 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel33.reset();
        java.lang.Class<?> wildcardClass42 = continuousOutputModel33.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        double double12 = continuousOutputModel8.getInitialTime();
        continuousOutputModel8.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        double double16 = continuousOutputModel14.getInitialTime();
        boolean boolean17 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel8.append(continuousOutputModel14);
        double double19 = continuousOutputModel14.getFinalTime();
        continuousOutputModel14.reset();
        continuousOutputModel0.append(continuousOutputModel14);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = continuousOutputModel14.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        continuousOutputModel17.append(continuousOutputModel22);
        continuousOutputModel4.append(continuousOutputModel22);
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel22.handleStep(stepInterpolator29, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        continuousOutputModel9.reset();
        boolean boolean14 = continuousOutputModel9.requiresDenseOutput();
        double double15 = continuousOutputModel9.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        boolean boolean19 = continuousOutputModel16.requiresDenseOutput();
        double double20 = continuousOutputModel16.getInitialTime();
        continuousOutputModel16.reset();
        boolean boolean22 = continuousOutputModel16.requiresDenseOutput();
        double double23 = continuousOutputModel16.getInitialTime();
        continuousOutputModel9.append(continuousOutputModel16);
        continuousOutputModel0.append(continuousOutputModel9);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        double double30 = continuousOutputModel26.getInitialTime();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        double double32 = continuousOutputModel26.getInitialTime();
        double double33 = continuousOutputModel26.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel26);
        double double35 = continuousOutputModel26.getInitialTime();
        boolean boolean36 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel26.handleStep(stepInterpolator39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel0.reset();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        double double7 = continuousOutputModel4.getFinalTime();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean8 = continuousOutputModel4.requiresDenseOutput();
        double double9 = continuousOutputModel4.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        double double15 = continuousOutputModel10.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        continuousOutputModel10.append(continuousOutputModel16);
        continuousOutputModel4.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean22 = continuousOutputModel21.requiresDenseOutput();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        boolean boolean30 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel21.append(continuousOutputModel25);
        continuousOutputModel25.reset();
        double double33 = continuousOutputModel25.getInitialTime();
        continuousOutputModel25.reset();
        boolean boolean35 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel16.append(continuousOutputModel25);
        continuousOutputModel0.append(continuousOutputModel16);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel43);
        boolean boolean54 = continuousOutputModel43.requiresDenseOutput();
        double double55 = continuousOutputModel43.getInitialTime();
        continuousOutputModel43.reset();
        continuousOutputModel0.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel58.reset();
        continuousOutputModel0.append(continuousOutputModel58);
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double2 = continuousOutputModel1.getFinalTime();
        double double3 = continuousOutputModel1.getInitialTime();
        boolean boolean4 = continuousOutputModel1.requiresDenseOutput();
        double double5 = continuousOutputModel1.getInitialTime();
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("hi!");
        java.io.IOException iOException14 = new java.io.IOException("", (java.lang.Throwable) iOException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        java.lang.Object[] objArray20 = new java.lang.Object[] { double5, mathException10, iOException13, false, continuousOutputModel17 };
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException34);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException39);
        java.lang.String str41 = mathException40.getPattern();
        java.io.IOException iOException45 = new java.io.IOException("hi!");
        java.io.IOException iOException46 = new java.io.IOException("", (java.lang.Throwable) iOException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("java.io.IOException: hi!", (java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException48);
        mathException40.addSuppressed((java.lang.Throwable) iOException50);
        java.lang.Object[] objArray52 = mathException40.getArguments();
        java.lang.Throwable[] throwableArray53 = mathException40.getSuppressed();
        java.lang.Class<?> wildcardClass54 = throwableArray53.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str41, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double9 = continuousOutputModel8.getFinalTime();
        double double10 = continuousOutputModel8.getInitialTime();
        boolean boolean11 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel8.reset();
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel8);
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double18 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        continuousOutputModel0.reset();
        double double14 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        double double17 = continuousOutputModel0.getInitialTime();
        double double18 = continuousOutputModel0.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        boolean boolean13 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel10.reset();
        boolean boolean15 = continuousOutputModel10.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel10.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean18 = continuousOutputModel10.requiresDenseOutput();
        double double19 = continuousOutputModel10.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double double20 = continuousOutputModel10.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException8);
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", objArray11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        double double19 = continuousOutputModel15.getInitialTime();
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("hi!");
        java.io.IOException iOException28 = new java.io.IOException("", (java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException27);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        java.lang.Object[] objArray34 = new java.lang.Object[] { double19, mathException24, iOException27, false, continuousOutputModel31 };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.io.IOException iOException48 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException48);
        java.lang.Object[] objArray51 = mathException50.getArguments();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) mathException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException57);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) mathException58);
        java.io.IOException iOException61 = new java.io.IOException("", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException62);
        java.lang.String str64 = mathException62.getPattern();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.MathException: java.io.IOException: java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException62);
        java.io.IOException iOException70 = new java.io.IOException("hi!");
        java.io.IOException iOException71 = new java.io.IOException("", (java.lang.Throwable) iOException70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException70);
        java.io.IOException iOException73 = new java.io.IOException("hi!", (java.lang.Throwable) iOException70);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) iOException73);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException73);
        java.lang.String str76 = derivativeException75.getPattern();
        mathException62.addSuppressed((java.lang.Throwable) derivativeException75);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: " + "'", str64, "java.io.IOException: java.io.IOException: org.apache.commons.math.MathException: ");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        boolean boolean7 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel4.reset();
        boolean boolean9 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel4.reset();
        continuousOutputModel4.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel13.reset();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel4.append(continuousOutputModel13);
        double double17 = continuousOutputModel4.getFinalTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray18 = continuousOutputModel4.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean10 = continuousOutputModel9.requiresDenseOutput();
        double double11 = continuousOutputModel9.getInitialTime();
        boolean boolean12 = continuousOutputModel9.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double14 = continuousOutputModel13.getFinalTime();
        double double15 = continuousOutputModel13.getInitialTime();
        boolean boolean16 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel9.append(continuousOutputModel13);
        continuousOutputModel7.append(continuousOutputModel9);
        continuousOutputModel9.reset();
        double double22 = continuousOutputModel9.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel9);
        continuousOutputModel0.reset();
        boolean boolean25 = continuousOutputModel0.requiresDenseOutput();
        double double26 = continuousOutputModel0.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel5.append(continuousOutputModel15);
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean26 = continuousOutputModel22.requiresDenseOutput();
        double double27 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double29 = continuousOutputModel28.getFinalTime();
        double double30 = continuousOutputModel28.getInitialTime();
        boolean boolean31 = continuousOutputModel28.requiresDenseOutput();
        continuousOutputModel28.reset();
        double double33 = continuousOutputModel28.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel28.append(continuousOutputModel34);
        continuousOutputModel22.append(continuousOutputModel34);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel39 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean40 = continuousOutputModel39.requiresDenseOutput();
        double double41 = continuousOutputModel39.getInitialTime();
        boolean boolean42 = continuousOutputModel39.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double44 = continuousOutputModel43.getFinalTime();
        double double45 = continuousOutputModel43.getInitialTime();
        boolean boolean46 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean48 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel39.append(continuousOutputModel43);
        continuousOutputModel43.reset();
        double double51 = continuousOutputModel43.getInitialTime();
        continuousOutputModel43.reset();
        boolean boolean53 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel34.append(continuousOutputModel43);
        continuousOutputModel5.append(continuousOutputModel34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel34.handleStep(stepInterpolator56, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        double double12 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel24);
        boolean boolean27 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        double double32 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double45 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        continuousOutputModel13.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        double double62 = continuousOutputModel59.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double64 = continuousOutputModel63.getFinalTime();
        double double65 = continuousOutputModel63.getInitialTime();
        continuousOutputModel59.append(continuousOutputModel63);
        double double67 = continuousOutputModel59.getInitialTime();
        double double68 = continuousOutputModel59.getFinalTime();
        continuousOutputModel59.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel70 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double71 = continuousOutputModel70.getFinalTime();
        double double72 = continuousOutputModel70.getInitialTime();
        double double73 = continuousOutputModel70.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double75 = continuousOutputModel74.getFinalTime();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel70.append(continuousOutputModel74);
        double double78 = continuousOutputModel70.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel79 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double80 = continuousOutputModel79.getFinalTime();
        double double81 = continuousOutputModel79.getInitialTime();
        boolean boolean82 = continuousOutputModel79.requiresDenseOutput();
        double double83 = continuousOutputModel79.getInitialTime();
        continuousOutputModel79.reset();
        boolean boolean85 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel70.append(continuousOutputModel79);
        double double87 = continuousOutputModel79.getFinalTime();
        continuousOutputModel79.reset();
        double double89 = continuousOutputModel79.getInitialTime();
        continuousOutputModel59.append(continuousOutputModel79);
        continuousOutputModel50.append(continuousOutputModel79);
        double double92 = continuousOutputModel79.getFinalTime();
        boolean boolean93 = continuousOutputModel79.requiresDenseOutput();
        boolean boolean94 = continuousOutputModel79.requiresDenseOutput();
        double double95 = continuousOutputModel79.getInitialTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        boolean boolean6 = continuousOutputModel3.requiresDenseOutput();
        continuousOutputModel3.reset();
        boolean boolean8 = continuousOutputModel3.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel3.requiresDenseOutput();
        double double10 = continuousOutputModel3.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel3);
        double double12 = continuousOutputModel0.getFinalTime();
        double double13 = continuousOutputModel0.getFinalTime();
        boolean boolean14 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean16 = continuousOutputModel15.requiresDenseOutput();
        boolean boolean17 = continuousOutputModel15.requiresDenseOutput();
        double double18 = continuousOutputModel15.getFinalTime();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        boolean boolean24 = continuousOutputModel22.requiresDenseOutput();
        double double25 = continuousOutputModel22.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        boolean boolean29 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        continuousOutputModel15.append(continuousOutputModel22);
        boolean boolean32 = continuousOutputModel15.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel33);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double39 = continuousOutputModel38.getFinalTime();
        double double40 = continuousOutputModel38.getInitialTime();
        boolean boolean41 = continuousOutputModel38.requiresDenseOutput();
        double double42 = continuousOutputModel38.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel43 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean44 = continuousOutputModel43.requiresDenseOutput();
        boolean boolean45 = continuousOutputModel43.requiresDenseOutput();
        continuousOutputModel43.reset();
        boolean boolean47 = continuousOutputModel43.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel43.append(continuousOutputModel48);
        continuousOutputModel38.append(continuousOutputModel43);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel54 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean55 = continuousOutputModel54.requiresDenseOutput();
        double double56 = continuousOutputModel54.getInitialTime();
        boolean boolean57 = continuousOutputModel54.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel54.append(continuousOutputModel58);
        continuousOutputModel43.append(continuousOutputModel54);
        continuousOutputModel33.append(continuousOutputModel43);
        continuousOutputModel0.append(continuousOutputModel43);
        double double65 = continuousOutputModel0.getFinalTime();
        boolean boolean66 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean67 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        double double5 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        boolean boolean20 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        continuousOutputModel6.append(continuousOutputModel13);
        boolean boolean23 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        double double25 = continuousOutputModel6.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        boolean boolean33 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel30.reset();
        boolean boolean35 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel30);
        continuousOutputModel30.reset();
        double double38 = continuousOutputModel30.getInitialTime();
        continuousOutputModel30.reset();
        continuousOutputModel6.append(continuousOutputModel30);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        boolean boolean43 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        boolean boolean45 = continuousOutputModel41.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel46 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double47 = continuousOutputModel46.getFinalTime();
        double double48 = continuousOutputModel46.getInitialTime();
        boolean boolean49 = continuousOutputModel46.requiresDenseOutput();
        continuousOutputModel41.append(continuousOutputModel46);
        boolean boolean51 = continuousOutputModel46.requiresDenseOutput();
        double double52 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        double double54 = continuousOutputModel46.getInitialTime();
        double double55 = continuousOutputModel46.getFinalTime();
        continuousOutputModel46.reset();
        boolean boolean57 = continuousOutputModel46.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean59 = continuousOutputModel58.requiresDenseOutput();
        boolean boolean60 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel58.reset();
        boolean boolean62 = continuousOutputModel58.requiresDenseOutput();
        continuousOutputModel58.reset();
        double double64 = continuousOutputModel58.getInitialTime();
        continuousOutputModel46.append(continuousOutputModel58);
        continuousOutputModel6.append(continuousOutputModel58);
        double double67 = continuousOutputModel6.getInitialTime();
        boolean boolean68 = continuousOutputModel6.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("", (java.lang.Throwable) iOException3);
        java.lang.String str5 = mathException4.getPattern();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) mathException4);
        java.lang.String[] strArray14 = new java.lang.String[] { "org.apache.commons.math.MathException: ", "org.apache.commons.math.ode.DerivativeException: ", "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", "org.apache.commons.math.ode.DerivativeException: ", "org.apache.commons.math.MathException: hi!", "org.apache.commons.math.MathException: " };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("java.io.IOException: ", strArray14);
        java.lang.String str16 = derivativeException15.getPattern();
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) derivativeException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException25);
        java.lang.Object[] objArray28 = mathException27.getArguments();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", objArray28);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel32 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double33 = continuousOutputModel32.getFinalTime();
        double double34 = continuousOutputModel32.getInitialTime();
        boolean boolean35 = continuousOutputModel32.requiresDenseOutput();
        double double36 = continuousOutputModel32.getInitialTime();
        java.io.IOException iOException39 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException39);
        java.io.IOException iOException44 = new java.io.IOException("hi!");
        java.io.IOException iOException45 = new java.io.IOException("", (java.lang.Throwable) iOException44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException44);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double49 = continuousOutputModel48.getFinalTime();
        double double50 = continuousOutputModel48.getInitialTime();
        java.lang.Object[] objArray51 = new java.lang.Object[] { double36, mathException41, iOException44, false, continuousOutputModel48 };
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray60);
        java.io.IOException iOException65 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException65);
        java.lang.Object[] objArray68 = mathException67.getArguments();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException67);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray60, (java.lang.Throwable) mathException67);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray28, (java.lang.Throwable) mathException71);
        java.io.IOException iOException75 = new java.io.IOException("hi!");
        java.io.IOException iOException76 = new java.io.IOException("", (java.lang.Throwable) iOException75);
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray28, (java.lang.Throwable) iOException77);
        iOException17.addSuppressed((java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException80);
        java.lang.Object[] objArray82 = mathException80.getArguments();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: java.io.IOException: hi!", objArray82);
        java.lang.String str84 = mathException83.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException: " + "'", str16, "java.io.IOException: ");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!" + "'", str84, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: java.io.IOException: hi!");
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        double double13 = continuousOutputModel5.getInitialTime();
        double double14 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        boolean boolean21 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel17.reset();
        double double23 = continuousOutputModel17.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel17);
        continuousOutputModel17.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        double double29 = continuousOutputModel26.getFinalTime();
        boolean boolean30 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean32 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        double double36 = continuousOutputModel33.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        continuousOutputModel33.append(continuousOutputModel37);
        boolean boolean41 = continuousOutputModel33.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel33);
        continuousOutputModel17.append(continuousOutputModel26);
        boolean boolean44 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean46 = continuousOutputModel45.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel45.requiresDenseOutput();
        double double48 = continuousOutputModel45.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel49 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean50 = continuousOutputModel49.requiresDenseOutput();
        continuousOutputModel45.append(continuousOutputModel49);
        continuousOutputModel45.reset();
        boolean boolean53 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel45.reset();
        boolean boolean55 = continuousOutputModel45.requiresDenseOutput();
        double double56 = continuousOutputModel45.getFinalTime();
        continuousOutputModel45.reset();
        boolean boolean58 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel45);
        continuousOutputModel26.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double61 = continuousOutputModel26.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        continuousOutputModel15.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean27 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean28 = continuousOutputModel26.requiresDenseOutput();
        double double29 = continuousOutputModel26.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean31 = continuousOutputModel30.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel30);
        continuousOutputModel26.reset();
        boolean boolean34 = continuousOutputModel26.requiresDenseOutput();
        boolean boolean35 = continuousOutputModel26.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        boolean boolean40 = continuousOutputModel36.requiresDenseOutput();
        double double41 = continuousOutputModel36.getFinalTime();
        boolean boolean42 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel36);
        double double44 = continuousOutputModel36.getFinalTime();
        continuousOutputModel36.reset();
        continuousOutputModel15.append(continuousOutputModel36);
        continuousOutputModel0.append(continuousOutputModel36);
        boolean boolean48 = continuousOutputModel36.requiresDenseOutput();
        java.lang.Class<?> wildcardClass49 = continuousOutputModel36.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel1 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean2 = continuousOutputModel1.requiresDenseOutput();
        boolean boolean3 = continuousOutputModel1.requiresDenseOutput();
        double double4 = continuousOutputModel1.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean6 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel1.append(continuousOutputModel5);
        continuousOutputModel0.append(continuousOutputModel5);
        boolean boolean9 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        double double11 = continuousOutputModel5.getFinalTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel5.handleStep(stepInterpolator12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel12 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double13 = continuousOutputModel12.getFinalTime();
        double double14 = continuousOutputModel12.getInitialTime();
        boolean boolean15 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel12);
        continuousOutputModel12.reset();
        double double18 = continuousOutputModel12.getInitialTime();
        double double19 = continuousOutputModel12.getFinalTime();
        continuousOutputModel12.reset();
        boolean boolean21 = continuousOutputModel12.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean23 = continuousOutputModel22.requiresDenseOutput();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        boolean boolean29 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel26.reset();
        boolean boolean31 = continuousOutputModel26.requiresDenseOutput();
        continuousOutputModel22.append(continuousOutputModel26);
        continuousOutputModel26.reset();
        continuousOutputModel26.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel35.reset();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel26.append(continuousOutputModel35);
        continuousOutputModel12.append(continuousOutputModel26);
        continuousOutputModel0.append(continuousOutputModel12);
        boolean boolean41 = continuousOutputModel12.requiresDenseOutput();
        continuousOutputModel12.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean14 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        double double18 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        boolean boolean20 = continuousOutputModel5.requiresDenseOutput();
        java.lang.Class<?> wildcardClass21 = continuousOutputModel5.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        double double5 = continuousOutputModel0.getInitialTime();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        double double18 = continuousOutputModel16.getInitialTime();
        double double19 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        double double22 = continuousOutputModel20.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel20);
        double double24 = continuousOutputModel16.getInitialTime();
        double double25 = continuousOutputModel16.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel26 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double27 = continuousOutputModel26.getFinalTime();
        double double28 = continuousOutputModel26.getInitialTime();
        continuousOutputModel26.reset();
        double double30 = continuousOutputModel26.getInitialTime();
        continuousOutputModel16.append(continuousOutputModel26);
        continuousOutputModel0.append(continuousOutputModel16);
        continuousOutputModel0.reset();
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.setInterpolatedTime((double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        continuousOutputModel0.reset();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        double double17 = continuousOutputModel0.getInitialTime();
        double double18 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        double double23 = continuousOutputModel19.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double25 = continuousOutputModel24.getFinalTime();
        double double26 = continuousOutputModel24.getInitialTime();
        boolean boolean27 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel24.reset();
        boolean boolean29 = continuousOutputModel24.requiresDenseOutput();
        boolean boolean30 = continuousOutputModel24.requiresDenseOutput();
        double double31 = continuousOutputModel24.getInitialTime();
        continuousOutputModel24.reset();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel0.append(continuousOutputModel19);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel19.handleStep(stepInterpolator35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel3 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double4 = continuousOutputModel3.getFinalTime();
        double double5 = continuousOutputModel3.getInitialTime();
        double double6 = continuousOutputModel3.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel3.append(continuousOutputModel7);
        boolean boolean11 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel7);
        double double13 = continuousOutputModel7.getFinalTime();
        boolean boolean14 = continuousOutputModel7.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double15 = continuousOutputModel7.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getFinalTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getInitialTime();
        double double6 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double12 = continuousOutputModel11.getFinalTime();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel11.reset();
        boolean boolean16 = continuousOutputModel11.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel11.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        continuousOutputModel20.reset();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel20);
        continuousOutputModel20.reset();
        continuousOutputModel20.reset();
        boolean boolean26 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel0.append(continuousOutputModel20);
        continuousOutputModel20.reset();
        // The following exception was thrown during execution in test generation
        try {
            double double30 = continuousOutputModel20.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException10);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", objArray13);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double18 = continuousOutputModel17.getFinalTime();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        double double21 = continuousOutputModel17.getInitialTime();
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("hi!");
        java.io.IOException iOException30 = new java.io.IOException("", (java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double34 = continuousOutputModel33.getFinalTime();
        double double35 = continuousOutputModel33.getInitialTime();
        java.lang.Object[] objArray36 = new java.lang.Object[] { double21, mathException26, iOException29, false, continuousOutputModel33 };
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.io.IOException iOException50 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException50);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13, (java.lang.Throwable) mathException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", objArray13);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException58);
        java.lang.Throwable[] throwableArray61 = mathException60.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("java.io.IOException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException60);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException60);
        java.io.IOException iOException64 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: java.io.IOException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException64);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean5 = continuousOutputModel4.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel4);
        continuousOutputModel0.reset();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel0.requiresDenseOutput();
        double double12 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel17);
        continuousOutputModel13.reset();
        boolean boolean21 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel13.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean24 = continuousOutputModel23.requiresDenseOutput();
        boolean boolean25 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        boolean boolean27 = continuousOutputModel23.requiresDenseOutput();
        double double28 = continuousOutputModel23.getFinalTime();
        boolean boolean29 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel13.append(continuousOutputModel23);
        continuousOutputModel13.reset();
        boolean boolean32 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel13);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel13.handleStep(stepInterpolator34, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        boolean boolean10 = continuousOutputModel5.requiresDenseOutput();
        boolean boolean11 = continuousOutputModel5.requiresDenseOutput();
        double double12 = continuousOutputModel5.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel5);
        double double14 = continuousOutputModel0.getInitialTime();
        double double15 = continuousOutputModel0.getInitialTime();
        double double16 = continuousOutputModel0.getInitialTime();
        boolean boolean17 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean20 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel18.reset();
        continuousOutputModel18.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel23 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double24 = continuousOutputModel23.getFinalTime();
        double double25 = continuousOutputModel23.getInitialTime();
        boolean boolean26 = continuousOutputModel23.requiresDenseOutput();
        continuousOutputModel23.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel28 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean29 = continuousOutputModel28.requiresDenseOutput();
        double double30 = continuousOutputModel28.getInitialTime();
        continuousOutputModel23.append(continuousOutputModel28);
        continuousOutputModel18.append(continuousOutputModel28);
        boolean boolean33 = continuousOutputModel18.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double36 = continuousOutputModel35.getFinalTime();
        double double37 = continuousOutputModel35.getInitialTime();
        boolean boolean38 = continuousOutputModel35.requiresDenseOutput();
        double double39 = continuousOutputModel35.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean41 = continuousOutputModel40.requiresDenseOutput();
        boolean boolean42 = continuousOutputModel40.requiresDenseOutput();
        continuousOutputModel40.reset();
        boolean boolean44 = continuousOutputModel40.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        boolean boolean48 = continuousOutputModel45.requiresDenseOutput();
        continuousOutputModel40.append(continuousOutputModel45);
        continuousOutputModel35.append(continuousOutputModel40);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel51 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean52 = continuousOutputModel51.requiresDenseOutput();
        double double53 = continuousOutputModel51.getInitialTime();
        boolean boolean54 = continuousOutputModel51.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel55.requiresDenseOutput();
        continuousOutputModel51.append(continuousOutputModel55);
        continuousOutputModel40.append(continuousOutputModel51);
        boolean boolean60 = continuousOutputModel51.requiresDenseOutput();
        continuousOutputModel51.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel62 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double63 = continuousOutputModel62.getFinalTime();
        double double64 = continuousOutputModel62.getInitialTime();
        double double65 = continuousOutputModel62.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double67 = continuousOutputModel66.getFinalTime();
        double double68 = continuousOutputModel66.getInitialTime();
        continuousOutputModel62.append(continuousOutputModel66);
        double double70 = continuousOutputModel62.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel71 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double72 = continuousOutputModel71.getFinalTime();
        double double73 = continuousOutputModel71.getInitialTime();
        boolean boolean74 = continuousOutputModel71.requiresDenseOutput();
        double double75 = continuousOutputModel71.getInitialTime();
        continuousOutputModel71.reset();
        boolean boolean77 = continuousOutputModel71.requiresDenseOutput();
        continuousOutputModel62.append(continuousOutputModel71);
        continuousOutputModel51.append(continuousOutputModel62);
        continuousOutputModel18.append(continuousOutputModel62);
        boolean boolean81 = continuousOutputModel62.requiresDenseOutput();
        boolean boolean82 = continuousOutputModel62.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel62);
        double double84 = continuousOutputModel0.getFinalTime();
        boolean boolean85 = continuousOutputModel0.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double86 = continuousOutputModel0.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        continuousOutputModel6.reset();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        double double13 = continuousOutputModel6.getInitialTime();
        continuousOutputModel6.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel17 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean18 = continuousOutputModel17.requiresDenseOutput();
        double double19 = continuousOutputModel17.getInitialTime();
        boolean boolean20 = continuousOutputModel17.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel21 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double22 = continuousOutputModel21.getFinalTime();
        double double23 = continuousOutputModel21.getInitialTime();
        boolean boolean24 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel21.reset();
        boolean boolean26 = continuousOutputModel21.requiresDenseOutput();
        continuousOutputModel17.append(continuousOutputModel21);
        continuousOutputModel15.append(continuousOutputModel17);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean31 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel29.reset();
        boolean boolean33 = continuousOutputModel29.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel15.append(continuousOutputModel29);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        continuousOutputModel29.append(continuousOutputModel36);
        boolean boolean40 = continuousOutputModel29.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        double double44 = continuousOutputModel41.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel45 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double46 = continuousOutputModel45.getFinalTime();
        double double47 = continuousOutputModel45.getInitialTime();
        continuousOutputModel41.append(continuousOutputModel45);
        double double49 = continuousOutputModel41.getFinalTime();
        continuousOutputModel41.reset();
        continuousOutputModel41.reset();
        boolean boolean52 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel41.reset();
        continuousOutputModel29.append(continuousOutputModel41);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel55 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean56 = continuousOutputModel55.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel55.requiresDenseOutput();
        double double58 = continuousOutputModel55.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean60 = continuousOutputModel59.requiresDenseOutput();
        continuousOutputModel55.append(continuousOutputModel59);
        continuousOutputModel55.reset();
        double double63 = continuousOutputModel55.getFinalTime();
        continuousOutputModel29.append(continuousOutputModel55);
        continuousOutputModel6.append(continuousOutputModel29);
        boolean boolean66 = continuousOutputModel29.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = continuousOutputModel29.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel8 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean9 = continuousOutputModel8.requiresDenseOutput();
        double double10 = continuousOutputModel8.getInitialTime();
        double double11 = continuousOutputModel8.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel8);
        boolean boolean13 = continuousOutputModel8.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double21 = continuousOutputModel20.getFinalTime();
        continuousOutputModel20.reset();
        continuousOutputModel14.append(continuousOutputModel20);
        boolean boolean24 = continuousOutputModel14.requiresDenseOutput();
        double double25 = continuousOutputModel14.getInitialTime();
        double double26 = continuousOutputModel14.getInitialTime();
        continuousOutputModel8.append(continuousOutputModel14);
        double double28 = continuousOutputModel14.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel2 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean3 = continuousOutputModel2.requiresDenseOutput();
        double double4 = continuousOutputModel2.getInitialTime();
        boolean boolean5 = continuousOutputModel2.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double7 = continuousOutputModel6.getFinalTime();
        double double8 = continuousOutputModel6.getInitialTime();
        boolean boolean9 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel6.reset();
        boolean boolean11 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel2.append(continuousOutputModel6);
        continuousOutputModel0.append(continuousOutputModel2);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        boolean boolean18 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean19 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel14);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean26 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean27 = continuousOutputModel25.requiresDenseOutput();
        double double28 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel29 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean30 = continuousOutputModel29.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel29);
        continuousOutputModel25.reset();
        boolean boolean33 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean34 = continuousOutputModel25.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel35 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean36 = continuousOutputModel35.requiresDenseOutput();
        boolean boolean37 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel35.reset();
        boolean boolean39 = continuousOutputModel35.requiresDenseOutput();
        double double40 = continuousOutputModel35.getFinalTime();
        boolean boolean41 = continuousOutputModel35.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel35);
        boolean boolean43 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel25);
        boolean boolean45 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean46 = continuousOutputModel25.requiresDenseOutput();
        boolean boolean47 = continuousOutputModel25.requiresDenseOutput();
        // The following exception was thrown during execution in test generation
        try {
            double double48 = continuousOutputModel25.getInterpolatedTime();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean11 = continuousOutputModel10.requiresDenseOutput();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel5.append(continuousOutputModel10);
        continuousOutputModel0.append(continuousOutputModel10);
        double double15 = continuousOutputModel0.getInitialTime();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        boolean boolean23 = continuousOutputModel19.requiresDenseOutput();
        double double24 = continuousOutputModel19.getFinalTime();
        boolean boolean25 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        double double27 = continuousOutputModel19.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel19);
        boolean boolean29 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getFinalTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        double double9 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        double double11 = continuousOutputModel7.getInitialTime();
        boolean boolean12 = continuousOutputModel7.requiresDenseOutput();
        double double13 = continuousOutputModel7.getFinalTime();
        continuousOutputModel0.append(continuousOutputModel7);
        boolean boolean15 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel0.handleStep(stepInterpolator16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        double double4 = continuousOutputModel0.getInitialTime();
        boolean boolean5 = continuousOutputModel0.requiresDenseOutput();
        double double6 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double8 = continuousOutputModel7.getFinalTime();
        double double9 = continuousOutputModel7.getInitialTime();
        boolean boolean10 = continuousOutputModel7.requiresDenseOutput();
        double double11 = continuousOutputModel7.getInitialTime();
        double double12 = continuousOutputModel7.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel13 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean14 = continuousOutputModel13.requiresDenseOutput();
        boolean boolean15 = continuousOutputModel13.requiresDenseOutput();
        double double16 = continuousOutputModel13.getFinalTime();
        continuousOutputModel13.reset();
        boolean boolean18 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel13.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel20 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean21 = continuousOutputModel20.requiresDenseOutput();
        boolean boolean22 = continuousOutputModel20.requiresDenseOutput();
        double double23 = continuousOutputModel20.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        continuousOutputModel20.append(continuousOutputModel24);
        boolean boolean27 = continuousOutputModel20.requiresDenseOutput();
        continuousOutputModel20.reset();
        continuousOutputModel13.append(continuousOutputModel20);
        boolean boolean30 = continuousOutputModel13.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel13);
        double double32 = continuousOutputModel13.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel33 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean34 = continuousOutputModel33.requiresDenseOutput();
        double double35 = continuousOutputModel33.getInitialTime();
        boolean boolean36 = continuousOutputModel33.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel37 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double38 = continuousOutputModel37.getFinalTime();
        double double39 = continuousOutputModel37.getInitialTime();
        boolean boolean40 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel37.reset();
        boolean boolean42 = continuousOutputModel37.requiresDenseOutput();
        continuousOutputModel33.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        double double45 = continuousOutputModel37.getInitialTime();
        continuousOutputModel37.reset();
        continuousOutputModel13.append(continuousOutputModel37);
        continuousOutputModel0.append(continuousOutputModel37);
        continuousOutputModel37.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel50 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean51 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean52 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel50.reset();
        boolean boolean54 = continuousOutputModel50.requiresDenseOutput();
        double double55 = continuousOutputModel50.getFinalTime();
        boolean boolean56 = continuousOutputModel50.requiresDenseOutput();
        boolean boolean57 = continuousOutputModel50.requiresDenseOutput();
        continuousOutputModel37.append(continuousOutputModel50);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel59 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double60 = continuousOutputModel59.getFinalTime();
        double double61 = continuousOutputModel59.getInitialTime();
        double double62 = continuousOutputModel59.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel63 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double64 = continuousOutputModel63.getFinalTime();
        double double65 = continuousOutputModel63.getInitialTime();
        continuousOutputModel59.append(continuousOutputModel63);
        double double67 = continuousOutputModel59.getInitialTime();
        double double68 = continuousOutputModel59.getFinalTime();
        continuousOutputModel59.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel70 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double71 = continuousOutputModel70.getFinalTime();
        double double72 = continuousOutputModel70.getInitialTime();
        double double73 = continuousOutputModel70.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel74 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double75 = continuousOutputModel74.getFinalTime();
        double double76 = continuousOutputModel74.getInitialTime();
        continuousOutputModel70.append(continuousOutputModel74);
        double double78 = continuousOutputModel70.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel79 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double80 = continuousOutputModel79.getFinalTime();
        double double81 = continuousOutputModel79.getInitialTime();
        boolean boolean82 = continuousOutputModel79.requiresDenseOutput();
        double double83 = continuousOutputModel79.getInitialTime();
        continuousOutputModel79.reset();
        boolean boolean85 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel70.append(continuousOutputModel79);
        double double87 = continuousOutputModel79.getFinalTime();
        continuousOutputModel79.reset();
        double double89 = continuousOutputModel79.getInitialTime();
        continuousOutputModel59.append(continuousOutputModel79);
        continuousOutputModel50.append(continuousOutputModel79);
        double double92 = continuousOutputModel79.getFinalTime();
        boolean boolean93 = continuousOutputModel79.requiresDenseOutput();
        boolean boolean94 = continuousOutputModel79.requiresDenseOutput();
        continuousOutputModel79.reset();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException6);
        java.lang.Object[] objArray8 = derivativeException7.getArguments();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.io.IOException iOException19 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException19);
        derivativeException17.addSuppressed((java.lang.Throwable) iOException19);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", objArray8, (java.lang.Throwable) derivativeException17);
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        java.io.IOException iOException26 = new java.io.IOException("", (java.lang.Throwable) iOException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) iOException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray8, (java.lang.Throwable) iOException26);
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException35);
        java.lang.Object[] objArray38 = mathException37.getArguments();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", objArray38);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double43 = continuousOutputModel42.getFinalTime();
        double double44 = continuousOutputModel42.getInitialTime();
        boolean boolean45 = continuousOutputModel42.requiresDenseOutput();
        double double46 = continuousOutputModel42.getInitialTime();
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException49);
        java.io.IOException iOException54 = new java.io.IOException("hi!");
        java.io.IOException iOException55 = new java.io.IOException("", (java.lang.Throwable) iOException54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException54);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel58 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double59 = continuousOutputModel58.getFinalTime();
        double double60 = continuousOutputModel58.getInitialTime();
        java.lang.Object[] objArray61 = new java.lang.Object[] { double46, mathException51, iOException54, false, continuousOutputModel58 };
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: ", "hi!", "org.apache.commons.math.MathException: ", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        java.io.IOException iOException75 = new java.io.IOException("hi!");
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) iOException75);
        java.lang.Object[] objArray78 = mathException77.getArguments();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray38, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("java.io.IOException: hi!", objArray8, (java.lang.Throwable) mathException82);
        java.lang.Object[] objArray85 = new java.lang.Object[] {};
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("", objArray85);
        java.io.IOException iOException87 = new java.io.IOException((java.lang.Throwable) mathException86);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) iOException87);
        java.lang.Object[] objArray89 = derivativeException88.getArguments();
        mathException82.addSuppressed((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException88);
        java.lang.Throwable[] throwableArray92 = derivativeException88.getSuppressed();
        java.io.IOException iOException93 = new java.io.IOException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException88);
        java.lang.Throwable[] throwableArray94 = iOException93.getSuppressed();
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray94);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel4 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double5 = continuousOutputModel4.getFinalTime();
        double double6 = continuousOutputModel4.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel4);
        double double8 = continuousOutputModel0.getInitialTime();
        double double9 = continuousOutputModel0.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel10 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double11 = continuousOutputModel10.getFinalTime();
        double double12 = continuousOutputModel10.getInitialTime();
        continuousOutputModel10.reset();
        double double14 = continuousOutputModel10.getInitialTime();
        continuousOutputModel0.append(continuousOutputModel10);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel16 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double17 = continuousOutputModel16.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        double double20 = continuousOutputModel18.getInitialTime();
        boolean boolean21 = continuousOutputModel18.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel22 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double23 = continuousOutputModel22.getFinalTime();
        double double24 = continuousOutputModel22.getInitialTime();
        boolean boolean25 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel22.reset();
        boolean boolean27 = continuousOutputModel22.requiresDenseOutput();
        continuousOutputModel18.append(continuousOutputModel22);
        continuousOutputModel16.append(continuousOutputModel18);
        continuousOutputModel0.append(continuousOutputModel18);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double32 = continuousOutputModel31.getFinalTime();
        double double33 = continuousOutputModel31.getInitialTime();
        boolean boolean34 = continuousOutputModel31.requiresDenseOutput();
        double double35 = continuousOutputModel31.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean37 = continuousOutputModel36.requiresDenseOutput();
        boolean boolean38 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        boolean boolean40 = continuousOutputModel36.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double42 = continuousOutputModel41.getFinalTime();
        double double43 = continuousOutputModel41.getInitialTime();
        boolean boolean44 = continuousOutputModel41.requiresDenseOutput();
        continuousOutputModel36.append(continuousOutputModel41);
        continuousOutputModel31.append(continuousOutputModel36);
        boolean boolean47 = continuousOutputModel31.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel48 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean49 = continuousOutputModel48.requiresDenseOutput();
        continuousOutputModel48.reset();
        boolean boolean51 = continuousOutputModel48.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel52 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean53 = continuousOutputModel52.requiresDenseOutput();
        boolean boolean54 = continuousOutputModel52.requiresDenseOutput();
        continuousOutputModel52.reset();
        boolean boolean56 = continuousOutputModel52.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel57 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double58 = continuousOutputModel57.getFinalTime();
        double double59 = continuousOutputModel57.getInitialTime();
        boolean boolean60 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel52.append(continuousOutputModel57);
        boolean boolean62 = continuousOutputModel57.requiresDenseOutput();
        double double63 = continuousOutputModel57.getFinalTime();
        continuousOutputModel57.reset();
        double double65 = continuousOutputModel57.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel66 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean67 = continuousOutputModel66.requiresDenseOutput();
        boolean boolean68 = continuousOutputModel66.requiresDenseOutput();
        continuousOutputModel66.reset();
        boolean boolean70 = continuousOutputModel66.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel71 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double72 = continuousOutputModel71.getFinalTime();
        double double73 = continuousOutputModel71.getInitialTime();
        boolean boolean74 = continuousOutputModel71.requiresDenseOutput();
        continuousOutputModel66.append(continuousOutputModel71);
        boolean boolean76 = continuousOutputModel71.requiresDenseOutput();
        double double77 = continuousOutputModel71.getFinalTime();
        continuousOutputModel71.reset();
        double double79 = continuousOutputModel71.getInitialTime();
        boolean boolean80 = continuousOutputModel71.requiresDenseOutput();
        continuousOutputModel57.append(continuousOutputModel71);
        boolean boolean82 = continuousOutputModel57.requiresDenseOutput();
        continuousOutputModel48.append(continuousOutputModel57);
        continuousOutputModel57.reset();
        continuousOutputModel31.append(continuousOutputModel57);
        continuousOutputModel18.append(continuousOutputModel31);
        continuousOutputModel18.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel88 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double89 = continuousOutputModel88.getFinalTime();
        double double90 = continuousOutputModel88.getInitialTime();
        boolean boolean91 = continuousOutputModel88.requiresDenseOutput();
        double double92 = continuousOutputModel88.getInitialTime();
        continuousOutputModel88.reset();
        double double94 = continuousOutputModel88.getFinalTime();
        continuousOutputModel18.append(continuousOutputModel88);
        double double96 = continuousOutputModel88.getInitialTime();
        double double97 = continuousOutputModel88.getInitialTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel6 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean7 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean8 = continuousOutputModel6.requiresDenseOutput();
        double double9 = continuousOutputModel6.getFinalTime();
        double double10 = continuousOutputModel6.getInitialTime();
        double double11 = continuousOutputModel6.getFinalTime();
        boolean boolean12 = continuousOutputModel6.requiresDenseOutput();
        boolean boolean13 = continuousOutputModel6.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel6);
        continuousOutputModel0.reset();
        boolean boolean16 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean18 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean20 = continuousOutputModel19.requiresDenseOutput();
        boolean boolean21 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        continuousOutputModel19.reset();
        boolean boolean24 = continuousOutputModel19.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        double double28 = continuousOutputModel25.getFinalTime();
        boolean boolean29 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel19.append(continuousOutputModel25);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        continuousOutputModel31.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel36 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double37 = continuousOutputModel36.getFinalTime();
        double double38 = continuousOutputModel36.getInitialTime();
        boolean boolean39 = continuousOutputModel36.requiresDenseOutput();
        continuousOutputModel36.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel41 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean42 = continuousOutputModel41.requiresDenseOutput();
        double double43 = continuousOutputModel41.getInitialTime();
        continuousOutputModel36.append(continuousOutputModel41);
        continuousOutputModel31.append(continuousOutputModel41);
        continuousOutputModel31.reset();
        boolean boolean47 = continuousOutputModel31.requiresDenseOutput();
        double double48 = continuousOutputModel31.getFinalTime();
        continuousOutputModel19.append(continuousOutputModel31);
        boolean boolean50 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        continuousOutputModel31.reset();
        continuousOutputModel31.reset();
        continuousOutputModel0.append(continuousOutputModel31);
        double double55 = continuousOutputModel0.getFinalTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        double double5 = continuousOutputModel0.getFinalTime();
        double double6 = continuousOutputModel0.getFinalTime();
        boolean boolean7 = continuousOutputModel0.requiresDenseOutput();
        double double8 = continuousOutputModel0.getInitialTime();
        boolean boolean9 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean10 = continuousOutputModel0.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean1 = continuousOutputModel0.requiresDenseOutput();
        boolean boolean2 = continuousOutputModel0.requiresDenseOutput();
        continuousOutputModel0.reset();
        boolean boolean4 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel5 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double6 = continuousOutputModel5.getFinalTime();
        double double7 = continuousOutputModel5.getInitialTime();
        boolean boolean8 = continuousOutputModel5.requiresDenseOutput();
        continuousOutputModel0.append(continuousOutputModel5);
        continuousOutputModel5.reset();
        double double11 = continuousOutputModel5.getInitialTime();
        double double12 = continuousOutputModel5.getFinalTime();
        continuousOutputModel5.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel14.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel19 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double20 = continuousOutputModel19.getFinalTime();
        double double21 = continuousOutputModel19.getInitialTime();
        boolean boolean22 = continuousOutputModel19.requiresDenseOutput();
        continuousOutputModel19.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel24 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean25 = continuousOutputModel24.requiresDenseOutput();
        double double26 = continuousOutputModel24.getInitialTime();
        continuousOutputModel19.append(continuousOutputModel24);
        continuousOutputModel14.append(continuousOutputModel24);
        boolean boolean29 = continuousOutputModel14.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel30 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double31 = continuousOutputModel30.getFinalTime();
        double double32 = continuousOutputModel30.getInitialTime();
        double double33 = continuousOutputModel30.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel34 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double35 = continuousOutputModel34.getFinalTime();
        double double36 = continuousOutputModel34.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel34);
        double double38 = continuousOutputModel30.getInitialTime();
        double double39 = continuousOutputModel30.getInitialTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel40 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double41 = continuousOutputModel40.getFinalTime();
        double double42 = continuousOutputModel40.getInitialTime();
        continuousOutputModel40.reset();
        double double44 = continuousOutputModel40.getInitialTime();
        continuousOutputModel30.append(continuousOutputModel40);
        continuousOutputModel14.append(continuousOutputModel30);
        continuousOutputModel5.append(continuousOutputModel14);
        double double48 = continuousOutputModel14.getFinalTime();
        double double49 = continuousOutputModel14.getInitialTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            continuousOutputModel14.handleStep(stepInterpolator50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        boolean boolean3 = continuousOutputModel0.requiresDenseOutput();
        double double4 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        boolean boolean6 = continuousOutputModel0.requiresDenseOutput();
        double double7 = continuousOutputModel0.getInitialTime();
        boolean boolean8 = continuousOutputModel0.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel9 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double10 = continuousOutputModel9.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel11 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean12 = continuousOutputModel11.requiresDenseOutput();
        double double13 = continuousOutputModel11.getInitialTime();
        boolean boolean14 = continuousOutputModel11.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel15 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double16 = continuousOutputModel15.getFinalTime();
        double double17 = continuousOutputModel15.getInitialTime();
        boolean boolean18 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel15.reset();
        boolean boolean20 = continuousOutputModel15.requiresDenseOutput();
        continuousOutputModel11.append(continuousOutputModel15);
        continuousOutputModel9.append(continuousOutputModel11);
        continuousOutputModel11.reset();
        continuousOutputModel0.append(continuousOutputModel11);
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        double double29 = continuousOutputModel25.getInitialTime();
        double double30 = continuousOutputModel25.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel31 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean32 = continuousOutputModel31.requiresDenseOutput();
        boolean boolean33 = continuousOutputModel31.requiresDenseOutput();
        double double34 = continuousOutputModel31.getFinalTime();
        continuousOutputModel31.reset();
        boolean boolean36 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel31.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel38 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean39 = continuousOutputModel38.requiresDenseOutput();
        boolean boolean40 = continuousOutputModel38.requiresDenseOutput();
        double double41 = continuousOutputModel38.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel42 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean43 = continuousOutputModel42.requiresDenseOutput();
        continuousOutputModel38.append(continuousOutputModel42);
        boolean boolean45 = continuousOutputModel38.requiresDenseOutput();
        continuousOutputModel38.reset();
        continuousOutputModel31.append(continuousOutputModel38);
        boolean boolean48 = continuousOutputModel31.requiresDenseOutput();
        continuousOutputModel25.append(continuousOutputModel31);
        boolean boolean50 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel25.reset();
        continuousOutputModel25.reset();
        continuousOutputModel11.append(continuousOutputModel25);
        boolean boolean54 = continuousOutputModel11.requiresDenseOutput();
        double double55 = continuousOutputModel11.getInitialTime();
        boolean boolean56 = continuousOutputModel11.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel0 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double1 = continuousOutputModel0.getFinalTime();
        double double2 = continuousOutputModel0.getInitialTime();
        double double3 = continuousOutputModel0.getFinalTime();
        double double4 = continuousOutputModel0.getFinalTime();
        double double5 = continuousOutputModel0.getInitialTime();
        continuousOutputModel0.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel7 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean8 = continuousOutputModel7.requiresDenseOutput();
        boolean boolean9 = continuousOutputModel7.requiresDenseOutput();
        double double10 = continuousOutputModel7.getFinalTime();
        continuousOutputModel7.reset();
        boolean boolean12 = continuousOutputModel7.requiresDenseOutput();
        continuousOutputModel7.reset();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel14 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean15 = continuousOutputModel14.requiresDenseOutput();
        boolean boolean16 = continuousOutputModel14.requiresDenseOutput();
        double double17 = continuousOutputModel14.getFinalTime();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel18 = new org.apache.commons.math.ode.ContinuousOutputModel();
        boolean boolean19 = continuousOutputModel18.requiresDenseOutput();
        continuousOutputModel14.append(continuousOutputModel18);
        boolean boolean21 = continuousOutputModel14.requiresDenseOutput();
        continuousOutputModel14.reset();
        continuousOutputModel7.append(continuousOutputModel14);
        boolean boolean24 = continuousOutputModel7.requiresDenseOutput();
        org.apache.commons.math.ode.ContinuousOutputModel continuousOutputModel25 = new org.apache.commons.math.ode.ContinuousOutputModel();
        double double26 = continuousOutputModel25.getFinalTime();
        double double27 = continuousOutputModel25.getInitialTime();
        boolean boolean28 = continuousOutputModel25.requiresDenseOutput();
        continuousOutputModel7.append(continuousOutputModel25);
        double double30 = continuousOutputModel7.getInitialTime();
        continuousOutputModel7.reset();
        boolean boolean32 = continuousOutputModel7.requiresDenseOutput();
        double double33 = continuousOutputModel7.getFinalTime();
        continuousOutputModel7.reset();
        continuousOutputModel0.append(continuousOutputModel7);
        double double36 = continuousOutputModel0.getInitialTime();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray37 = continuousOutputModel0.getInterpolatedState();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }
}

