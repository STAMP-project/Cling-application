import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isEmptyTokenAsNull();
        java.lang.Object obj13 = strTokenizer10.clone();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.setDelimiterMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher40);
        boolean boolean43 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher28, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        boolean boolean54 = strTokenizer53.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher19);
        int int21 = strTokenizer20.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        java.lang.String str23 = strTokenizer20.nextToken();
        boolean boolean24 = strList2.remove((java.lang.Object) str23);
        int int25 = strList2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        int int36 = strList35.size();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.stream();
        java.lang.Object[] objArray42 = strList39.toArray();
        boolean boolean43 = strList35.removeAll((java.util.Collection<java.lang.String>) strList39);
        boolean boolean44 = strList2.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.Object[] objArray45 = strList2.toArray();
        java.util.Iterator<java.lang.String> strItor46 = strList2.iterator();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertNotNull(strItor46);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        int int20 = strList9.size();
        boolean boolean21 = strList5.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream22 = strList9.stream();
        int int23 = strList9.size();
        java.util.ListIterator<java.lang.String> strItor24 = strList9.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean27 = strTokenizer26.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer28.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer26.setQuoteMatcher(strMatcher39);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        int int59 = strMatcher39.isMatch(charArray43, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        int int69 = strList9.indexOf((java.lang.Object) charArray43);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "#a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.stream.Stream<java.lang.String> strStream17 = strList15.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.lang.Object obj24 = null;
        boolean boolean25 = strList23.remove(obj24);
        boolean boolean26 = strList15.removeAll((java.util.Collection<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean37 = strList15.retainAll((java.util.Collection<java.lang.String>) strList36);
        java.util.ListIterator<java.lang.String> strItor38 = strList15.listIterator();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.stream();
        boolean boolean44 = strList41.isEmpty();
        java.lang.Object[] objArray45 = strList41.toArray();
        boolean boolean46 = strList15.addAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean47 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.stream.Stream<java.lang.String> strStream48 = strList2.stream();
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList2.spliterator();
        int int50 = strList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = strList2.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList2.listIterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        boolean boolean33 = strList2.addAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean34 = strList28.isEmpty();
        boolean boolean36 = strList28.add("StrTokenizer[hi!]");
        boolean boolean37 = strList28.isEmpty();
        boolean boolean39 = strList28.add("444 ");
        java.util.ListIterator<java.lang.String> strItor40 = strList28.listIterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strItor40);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        char[] charArray4 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.stream();
        boolean boolean41 = strList38.isEmpty();
        java.lang.Object[] objArray42 = strList38.toArray();
        java.lang.String[] strArray48 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = strList38.removeAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String str54 = strList49.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("hi!");
        java.util.List<java.lang.String> strList61 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("");
        java.lang.Object obj70 = strTokenizer69.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer69.getQuoteMatcher();
        boolean boolean72 = strList61.contains((java.lang.Object) strMatcher71);
        boolean boolean73 = strList49.addAll((java.util.Collection<java.lang.String>) strList61);
        boolean boolean74 = strList49.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList49.spliterator();
        strList49.add(1, "StrTokenizer[]");
        boolean boolean79 = strList35.retainAll((java.util.Collection<java.lang.String>) strList49);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        java.lang.String str26 = strTokenizer23.nextToken();
        int int27 = strTokenizer23.nextIndex();
        int int28 = strList13.indexOf((java.lang.Object) strTokenizer23);
        boolean boolean30 = strList13.add("   ");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer44.setDelimiterMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer39.setQuoteMatcher(strMatcher50);
        int int53 = strTokenizer39.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer39.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer59.setDelimiterMatcher(strMatcher65);
        int int67 = strTokenizer66.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer69.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer39.setQuoteMatcher(strMatcher74);
        boolean boolean76 = strList13.contains((java.lang.Object) strMatcher74);
        java.lang.Object[] objArray77 = strList13.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = strList13.set(4, "#a");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[a,    ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[a,    ]");
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        int int17 = strTokenizer16.size();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer16.reset(charArray19);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[h]", 'a');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor50 = strList47.listIterator();
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        boolean boolean60 = strList47.remove((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer64.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher57, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        java.lang.String str13 = strTokenizer8.toString();
        java.lang.Object obj14 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        boolean boolean3 = strTokenizer2.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getDelimiterMatcher();
        java.lang.String str6 = strTokenizer2.next();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        boolean boolean33 = strList2.contains((java.lang.Object) strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher39, strMatcher47);
        boolean boolean50 = strList2.remove((java.lang.Object) "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("");
        java.lang.Object obj59 = strTokenizer58.clone();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.util.ListIterator<java.lang.String> strItor62 = strList60.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor63 = strList60.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int66 = strList60.indexOf((java.lang.Object) strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer67.setTrimmerMatcher(strMatcher78);
        int int80 = strList60.indexOf((java.lang.Object) strTokenizer79);
        java.lang.String str82 = strList60.remove((int) (short) 0);
        boolean boolean83 = strList2.containsAll((java.util.Collection<java.lang.String>) strList60);
        java.util.stream.Stream<java.lang.String> strStream84 = strList60.parallelStream();
        java.util.Iterator<java.lang.String> strItor85 = strList60.iterator();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertNotNull(strItor85);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        java.lang.Object[] objArray19 = strList16.toArray();
        java.util.ListIterator<java.lang.String> strItor20 = strList16.listIterator();
        boolean boolean21 = strList10.remove((java.lang.Object) strList16);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "StrTokenizer[hi!]");
        boolean boolean42 = strList16.contains((java.lang.Object) strTokenizer41);
        java.lang.String str43 = strTokenizer41.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoredChar('4');
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "a" + "'", str43, "a");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer13.getQuoteMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setQuoteMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setIgnoreEmptyTokens(false);
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer32.setIgnoredMatcher(strMatcher38);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        int int61 = strMatcher46.isMatch(charArray50, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', 'a');
        int int76 = strMatcher38.isMatch(charArray50, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer13.reset(charArray50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("h", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getDelimiterMatcher();
        java.util.List<java.lang.String> strList6 = strTokenizer2.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredMatcher(strMatcher13);
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        int int36 = strMatcher21.isMatch(charArray25, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher13, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = strTokenizer53.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer2.reset(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getQuoteMatcher();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer20.setDelimiterMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[", strMatcher34);
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("");
        java.lang.Object obj30 = strTokenizer29.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer29.getQuoteMatcher();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, "hi!");
        int int48 = strMatcher31.isMatch(charArray33, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer57.reset(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher53, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        boolean boolean81 = strTokenizer80.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("");
        java.lang.Object obj11 = strTokenizer10.clone();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.ListIterator<java.lang.String> strItor14 = strList12.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor15 = strList12.listIterator();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        boolean boolean25 = strList12.remove((java.lang.Object) strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        int int40 = strTokenizer38.size();
        java.lang.String str41 = strTokenizer38.next();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer38.reset(charArray43);
        boolean boolean58 = strTokenizer57.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", strMatcher22, strMatcher59);
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        int int84 = strMatcher22.isMatch(charArray62, (int) (byte) -1, (-1), (int) (short) 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "a" + "'", str41, "a");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList18.spliterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList33.isEmpty();
        java.lang.Object[] objArray36 = strList33.toArray();
        java.lang.Object[] objArray37 = strList18.toArray(objArray36);
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        int int48 = strTokenizer47.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        boolean boolean55 = strTokenizer54.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterChar('a');
        char[] charArray64 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setQuoteChar('4');
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer73.reset(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer57.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer47.setTrimmerMatcher(strMatcher92);
        boolean boolean94 = strList18.remove((java.lang.Object) strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer15.setTrimmerMatcher(strMatcher92);
        boolean boolean96 = strTokenizer15.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer15.setQuoteChar(' ');
        boolean boolean99 = strTokenizer98.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("hi!");
        int int9 = strTokenizer6.nextIndex();
        boolean boolean10 = strList2.equals((java.lang.Object) int9);
        strList2.clear();
        java.util.Spliterator<java.lang.String> strSpliterator12 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream13 = strList2.stream();
        boolean boolean15 = strList2.add("h");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "h");
        int int22 = strTokenizer21.nextIndex();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.lang.String[] strArray24 = strTokenizer21.getTokenArray();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        int int5 = strTokenizer3.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset();
        java.lang.String str7 = strTokenizer6.next();
        int int8 = strTokenizer6.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setIgnoreEmptyTokens(false);
        int int11 = strTokenizer6.previousIndex();
        java.lang.String str12 = strTokenizer6.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer6.reset("StrTokenizer[,");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("#");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setIgnoredChar('#');
        java.lang.String str11 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", strMatcher12);
        boolean boolean14 = strTokenizer13.hasNext();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        int int13 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer10.getDelimiterMatcher();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "a");
        int int42 = strMatcher25.isMatch(charArray27, (int) (byte) 0);
        boolean boolean43 = strList17.contains((java.lang.Object) strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        boolean boolean48 = strTokenizer47.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer47.setQuoteMatcher(strMatcher53);
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        int int70 = strMatcher53.isMatch(charArray57, (int) (short) 10);
        int int72 = strMatcher25.isMatch(charArray57, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', 'a');
        int int79 = strMatcher14.isMatch(charArray57, 0, 4, 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', ' ');
        java.lang.String str84 = strTokenizer83.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer83.add("StrTokenizer[not");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "a" + "'", str84, "a");
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer3.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer1.setQuoteMatcher(strMatcher14);
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        int int34 = strMatcher14.isMatch(charArray18, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "a");
        int int39 = strTokenizer38.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset("StrTokenizer[]");
        boolean boolean7 = strTokenizer3.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        java.util.ListIterator<java.lang.String> strItor37 = strList35.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor38 = strList35.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int41 = strList35.indexOf((java.lang.Object) strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer24.setDelimiterMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer20.setIgnoredMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer17.setIgnoredMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("h");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer46.set("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterMatcher(strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("StrTokenizer[StrTokenizer[]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        int int45 = strMatcher30.isMatch(charArray34, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setIgnoredChar(' ');
        int int57 = strTokenizer56.previousIndex();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher59);
        boolean boolean61 = strTokenizer60.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[h]", "StrTokenizer[,");
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strTokenizer7.size();
        java.util.List<java.lang.String> strList11 = strTokenizer7.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int13 = strList11.lastIndexOf((java.lang.Object) strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(false);
        int int30 = strList16.indexOf((java.lang.Object) strTokenizer27);
        strList16.clear();
        java.util.Iterator<java.lang.String> strItor32 = strList16.iterator();
        boolean boolean33 = strList11.addAll((java.util.Collection<java.lang.String>) strList16);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList11.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strList11.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSpliterator34);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        int int8 = strList5.size();
        java.util.stream.Stream<java.lang.String> strStream9 = strList5.stream();
        strList5.add((int) (byte) 1, "a");
        boolean boolean13 = strList5.isEmpty();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        int int3 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset();
        java.lang.String str5 = strTokenizer2.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer2.getDelimiterMatcher();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#');
        int int27 = strMatcher6.isMatch(charArray8, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#');
        java.lang.String str14 = strTokenizer13.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar('a');
        boolean boolean17 = strTokenizer13.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer13.reset("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[,", strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer26.setDelimiterMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher32);
        boolean boolean35 = strTokenizer34.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setTrimmerMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher20, strMatcher41);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "a" + "'", str14, "a");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[h]", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setEmptyTokenAsNull(true);
        java.lang.String str15 = strTokenizer11.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer11.setIgnoredChar(' ');
        java.lang.String str19 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer11.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[, ]");
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str62 = strTokenizer61.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher63);
        char[] charArray71 = new char[] { 'a', '4', ' ', '4', 'a', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        int int75 = strMatcher63.isMatch(charArray71, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "#a444 ");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4, a, a]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        char[] charArray1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher2);
        int int4 = strTokenizer3.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.previousToken();
        boolean boolean7 = strTokenizer5.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoreEmptyTokens(false);
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer5.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", strMatcher31);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer3.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer1.setQuoteMatcher(strMatcher14);
        java.lang.String str17 = strTokenizer1.previousToken();
        int int18 = strTokenizer1.size();
        boolean boolean19 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.setDelimiterChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj1 = strTokenizer0.clone();
        boolean boolean2 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setQuoteChar('#');
        int int5 = strTokenizer4.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setTrimmerMatcher(strMatcher6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setIgnoreEmptyTokens(true);
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.setIgnoredMatcher(strMatcher30);
        boolean boolean32 = strTokenizer31.hasNext();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer31.reset(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer31.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer4.setQuoteMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset("StrTokenizer[a]");
        boolean boolean15 = strTokenizer14.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoreEmptyTokens(false);
        int int33 = strTokenizer30.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setDelimiterChar('a');
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer30.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19, strMatcher58);
        int int60 = strTokenizer59.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str7 = strTokenizer3.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset("#a444 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer17.getTrimmerMatcher();
        java.lang.Object obj21 = strTokenizer17.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        boolean boolean22 = strList20.isEmpty();
        java.lang.Object[] objArray23 = strList20.toArray();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        boolean boolean33 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setIgnoredChar('4');
        int int36 = strTokenizer35.nextIndex();
        boolean boolean37 = strList27.equals((java.lang.Object) int36);
        boolean boolean38 = strList20.containsAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean39 = strList2.containsAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Iterator<java.lang.String> strItor40 = strList27.iterator();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strItor40);
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setDelimiterChar('a');
        boolean boolean25 = strList9.equals((java.lang.Object) strTokenizer21);
        java.lang.String str26 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        java.lang.Object obj37 = strTokenizer36.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterChar('a');
        boolean boolean40 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer36.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer36.setIgnoredMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '#', '#');
        int int65 = strMatcher45.isMatch(charArray47, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer21.setQuoteMatcher(strMatcher45);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a   ", "   ");
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String str45 = strTokenizer44.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "a" + "'", str45, "a");
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        int int24 = strList23.size();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        java.lang.Object[] objArray30 = strList27.toArray();
        boolean boolean31 = strList23.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean33 = strList23.add("StrTokenizer[hi!]");
        boolean boolean34 = strList10.containsAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor35 = strList23.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoreEmptyTokens(false);
        java.lang.String str49 = strTokenizer46.next();
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.setIgnoredMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer65.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setQuoteChar('4');
        char[] charArray74 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer70.reset(charArray74);
        int int89 = strMatcher60.isMatch(charArray74, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        boolean boolean96 = strList23.remove((java.lang.Object) strTokenizer95);
        boolean boolean97 = strTokenizer95.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer95.set("a   ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        java.lang.Object obj19 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer1.reset();
        boolean boolean21 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        java.lang.String str18 = strTokenizer16.getContent();
        java.lang.String str19 = strTokenizer16.nextToken();
        java.lang.String str20 = strTokenizer16.previous();
        java.lang.String str21 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer16.getDelimiterMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        java.lang.Object obj11 = strTokenizer10.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setDelimiterChar('a');
        boolean boolean14 = strTokenizer10.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean20 = strTokenizer19.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer21.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setQuoteMatcher(strMatcher32);
        java.lang.String str35 = strTokenizer34.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("444 ", strMatcher17, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int50 = strTokenizer49.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer49.setIgnoredMatcher(strMatcher51);
        boolean boolean53 = strTokenizer52.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer52.getTrimmerMatcher();
        boolean boolean55 = strTokenizer52.hasPrevious();
        int int56 = strTokenizer52.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer37.setQuoteMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher57, strMatcher59);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(true);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        int int43 = strMatcher28.isMatch(charArray32, 1, 1, (int) ' ');
        char[] charArray44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher28, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer52.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        int int62 = strTokenizer59.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setDelimiterChar('a');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer59.reset(charArray66);
        int int87 = strMatcher28.isMatch(charArray66, (int) (short) 0, (int) ' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer8.reset(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', 'a');
        boolean boolean95 = strTokenizer94.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        java.util.Iterator<java.lang.String> strItor13 = strList9.iterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(false);
        int int30 = strList16.indexOf((java.lang.Object) strTokenizer27);
        strList16.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj41 = strTokenizer40.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer40.setQuoteMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setEmptyTokenAsNull(true);
        boolean boolean59 = strList16.remove((java.lang.Object) strTokenizer55);
        boolean boolean60 = strList9.removeAll((java.util.Collection<java.lang.String>) strList16);
        strList9.clear();
        boolean boolean63 = strList9.add("StrTokenizer[hi!]");
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '#');
        java.lang.String str76 = strTokenizer75.nextToken();
        java.lang.String str77 = strTokenizer75.getContent();
        int int78 = strList9.indexOf((java.lang.Object) strTokenizer75);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer75.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "a" + "'", str76, "a");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "a" + "'", str77, "a");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#a444");
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        java.util.ListIterator<java.lang.String> strItor8 = strList5.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strItor8);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.Object obj15 = strTokenizer12.clone();
        boolean boolean16 = strTokenizer12.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream30 = strList9.stream();
        java.util.stream.Stream<java.lang.String> strStream31 = strList9.parallelStream();
        strList9.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        boolean boolean39 = strList38.isEmpty();
        boolean boolean40 = strList38.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList38.spliterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        java.lang.Object obj53 = null;
        boolean boolean54 = strList52.remove(obj53);
        boolean boolean55 = strList44.removeAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("");
        java.lang.Object obj64 = strTokenizer63.clone();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        boolean boolean66 = strList44.retainAll((java.util.Collection<java.lang.String>) strList65);
        java.util.ListIterator<java.lang.String> strItor67 = strList44.listIterator();
        boolean boolean68 = strList38.retainAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean69 = strList9.retainAll((java.util.Collection<java.lang.String>) strList38);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        int int2 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getQuoteMatcher();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset("#");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredMatcher(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        int int31 = strList20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean38 = strList37.isEmpty();
        boolean boolean39 = strList37.isEmpty();
        boolean boolean40 = strList20.containsAll((java.util.Collection<java.lang.String>) strList37);
        java.util.Iterator<java.lang.String> strItor41 = strList20.iterator();
        java.util.Iterator<java.lang.String> strItor42 = strList20.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList20.spliterator();
        java.util.Iterator<java.lang.String> strItor44 = strList20.iterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertNotNull(strItor44);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        int int6 = strTokenizer5.nextIndex();
        java.lang.String str7 = strTokenizer5.previousToken();
        char[] charArray9 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer5.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        int int36 = strTokenizer33.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher83, strMatcher84);
        int int87 = strMatcher36.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        java.lang.String str92 = strTokenizer91.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = strTokenizer91.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "a" + "'", str92, "a");
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", "StrTokenizer[]");
        boolean boolean15 = strList9.contains((java.lang.Object) strTokenizer14);
        java.util.Spliterator<java.lang.String> strSpliterator16 = strList9.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        java.lang.Object obj26 = strTokenizer25.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer30.setDelimiterMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer25.setQuoteMatcher(strMatcher36);
        java.util.List<java.lang.String> strList39 = strTokenizer38.getTokenList();
        java.util.Iterator<java.lang.String> strItor40 = strList39.iterator();
        boolean boolean41 = strList9.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList9.remove(0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSpliterator16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", ' ', '4');
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        int int45 = strTokenizer42.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setDelimiterChar('a');
        boolean boolean48 = strTokenizer47.hasNext();
        int int49 = strList9.indexOf((java.lang.Object) strTokenizer47);
        boolean boolean50 = strTokenizer47.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer16.reset();
        java.lang.String str18 = strTokenizer16.toString();
        java.lang.String str19 = strTokenizer16.next();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "a" + "'", str19, "a");
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        java.util.ListIterator<java.lang.String> strItor17 = strList9.listIterator(1);
        java.lang.String str20 = strList9.set((int) (byte) 0, "StrTokenizer[, ]");
        boolean boolean21 = strList9.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator22 = strList9.spliterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSpliterator22);
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("");
        java.lang.Object obj39 = strTokenizer38.clone();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        int int41 = strList40.size();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        java.lang.Object[] objArray47 = strList44.toArray();
        boolean boolean48 = strList40.removeAll((java.util.Collection<java.lang.String>) strList44);
        int int49 = strList20.indexOf((java.lang.Object) strList44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList52 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setIgnoreEmptyTokens(false);
        int int66 = strList52.indexOf((java.lang.Object) strTokenizer63);
        strList52.clear();
        char[] charArray68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher69);
        int int71 = strTokenizer70.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        java.lang.String str73 = strTokenizer70.nextToken();
        boolean boolean74 = strList52.remove((java.lang.Object) str73);
        java.util.stream.Stream<java.lang.String> strStream75 = strList52.stream();
        java.util.ListIterator<java.lang.String> strItor76 = strList52.listIterator();
        boolean boolean77 = strList20.containsAll((java.util.Collection<java.lang.String>) strList52);
        char[] charArray79 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher81, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher84, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getTrimmerMatcher();
        boolean boolean94 = strList20.equals((java.lang.Object) strMatcher93);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        java.lang.String str44 = strTokenizer41.next();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer41.setIgnoredMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher30, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer17.setIgnoredMatcher(strMatcher30);
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        boolean boolean61 = strTokenizer59.hasPrevious();
        java.lang.String str62 = strTokenizer59.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.reset("StrTokenizer[, ]");
        boolean boolean65 = strTokenizer64.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "a" + "'", str62, "a");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor14 = strList5.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        int int21 = strList5.indexOf((java.lang.Object) strTokenizer20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        boolean boolean25 = strTokenizer24.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher26, strMatcher37);
        java.lang.String str39 = strTokenizer38.getContent();
        int int40 = strList5.lastIndexOf((java.lang.Object) strTokenizer38);
        boolean boolean42 = strList5.add("trTokenizer[hi!]");
        boolean boolean43 = strList5.isEmpty();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[]" + "'", str39, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        int int22 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer8.setIgnoredMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setEmptyTokenAsNull(false);
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer33.setQuoteMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer24.setQuoteMatcher(strMatcher47);
        boolean boolean49 = strTokenizer24.isIgnoreEmptyTokens();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[, ]");
        java.lang.String str2 = strTokenizer1.previousToken();
        java.lang.String str3 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getQuoteMatcher();
        int int5 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[" + "'", str3, "StrTokenizer[");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        int int29 = strTokenizer28.previousIndex();
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        boolean boolean31 = strTokenizer28.hasPrevious();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer28.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher53, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer16.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        boolean boolean75 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer74.setQuoteMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer16.setIgnoredMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setIgnoredChar('a');
        java.lang.String str86 = strTokenizer85.previousToken();
        int int87 = strTokenizer85.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer42.getQuoteMatcher();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "hi!");
        int int61 = strMatcher44.isMatch(charArray46, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer34.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer1.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer1.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer1.setQuoteMatcher(strMatcher68);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer1.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer1.setDelimiterChar('a');
        java.lang.String str64 = strTokenizer63.getContent();
        int int65 = strTokenizer63.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "a" + "'", str64, "a");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        int int3 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset();
        java.lang.Object obj5 = strTokenizer2.clone();
        int int6 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        java.lang.Object obj20 = strTokenizer19.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterChar('a');
        boolean boolean23 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer19.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#', '#');
        int int48 = strMatcher28.isMatch(charArray30, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', '4');
        int int54 = strMatcher10.isMatch(charArray30, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', '4');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        int int39 = strMatcher24.isMatch(charArray28, 1, 1, (int) ' ');
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher24, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer50.setDelimiterMatcher(strMatcher62);
        int int64 = strTokenizer50.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        java.lang.String str70 = strTokenizer69.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer69.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer69.setDelimiterMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher75);
        boolean boolean78 = strTokenizer77.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setTrimmerMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer81.reset("a");
        boolean boolean86 = strTokenizer85.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getQuoteMatcher();
        java.lang.String str88 = strTokenizer85.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer50.setQuoteMatcher(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "StrTokenizer[]" + "'", str88, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        int int24 = strList6.size();
        java.util.ListIterator<java.lang.String> strItor25 = strList6.listIterator();
        java.lang.Object[] objArray26 = strList6.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strList6.set(8, "StrTokenizer[");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str18 = strList13.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        boolean boolean37 = strList13.addAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer41.setDelimiterMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoreEmptyTokens(false);
        boolean boolean51 = strTokenizer48.isEmptyTokenAsNull();
        boolean boolean52 = strList13.contains((java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer48.reset("hi!");
        java.lang.String str55 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        boolean boolean19 = strList9.add("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoreEmptyTokens(false);
        int int36 = strList22.indexOf((java.lang.Object) strTokenizer33);
        strList22.clear();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = strList40.isEmpty();
        java.lang.Object[] objArray43 = strList40.toArray();
        java.lang.String[] strArray46 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        boolean boolean53 = strTokenizer52.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setIgnoredChar('4');
        int int56 = strTokenizer55.nextIndex();
        boolean boolean57 = strList47.equals((java.lang.Object) int56);
        boolean boolean58 = strList40.containsAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean59 = strList22.containsAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean60 = strList9.retainAll((java.util.Collection<java.lang.String>) strList22);
        java.util.ListIterator<java.lang.String> strItor61 = strList9.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator62 = strList9.spliterator();
        java.util.ListIterator<java.lang.String> strItor63 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        java.lang.String str68 = strTokenizer67.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer67.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setQuoteChar('4');
        char[] charArray76 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher81, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer72.reset(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray76);
        boolean boolean90 = strList9.contains((java.lang.Object) charArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = strList9.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertNotNull(strSpliterator62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str68, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a", 'a', '#');
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        boolean boolean29 = strList16.remove((java.lang.Object) strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        boolean boolean34 = strList2.contains((java.lang.Object) strTokenizer32);
        boolean boolean35 = strList2.isEmpty();
        boolean boolean37 = strList2.add("#a");
        // The following exception was thrown during execution in test generation
        try {
            strList2.add((int) '#', "StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor14 = strList5.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor26 = strList24.listIterator((int) (short) 0);
        boolean boolean27 = strList24.isEmpty();
        java.util.List<java.lang.String> strList30 = strList24.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList41.remove(obj42);
        boolean boolean44 = strList33.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean55 = strList33.retainAll((java.util.Collection<java.lang.String>) strList54);
        java.util.ListIterator<java.lang.String> strItor56 = strList33.listIterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.stream();
        boolean boolean62 = strList59.isEmpty();
        java.lang.Object[] objArray63 = strList59.toArray();
        boolean boolean64 = strList33.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean65 = strList30.removeAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean66 = strList5.retainAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("");
        java.lang.Object obj75 = strTokenizer74.clone();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        java.util.ListIterator<java.lang.String> strItor78 = strList76.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream79 = strList76.stream();
        boolean boolean80 = strList59.removeAll((java.util.Collection<java.lang.String>) strList76);
        java.util.Iterator<java.lang.String> strItor81 = strList76.iterator();
        strList76.clear();
        java.lang.Object[] objArray83 = strList76.toArray();
        boolean boolean85 = strList76.add(",");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', '#');
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer5.setTrimmerMatcher(strMatcher16);
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer17.setDelimiterMatcher(strMatcher28);
        java.lang.String str30 = strTokenizer29.getContent();
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        int int65 = strMatcher50.isMatch(charArray54, 1, 1, (int) ' ');
        char[] charArray66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher50, strMatcher69);
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer29.reset(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer3.reset(charArray32);
        boolean boolean89 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setEmptyTokenAsNull(false);
        int int17 = strTokenizer3.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        boolean boolean5 = strTokenizer3.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = strTokenizer7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strTokenizer7.size();
        java.util.List<java.lang.String> strList11 = strTokenizer7.getTokenList();
        java.lang.Object obj12 = null;
        int int13 = strList11.lastIndexOf(obj12);
        java.util.stream.Stream<java.lang.String> strStream14 = strList11.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        boolean boolean21 = strList20.isEmpty();
        boolean boolean22 = strList20.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        java.util.ListIterator<java.lang.String> strItor34 = strList32.listIterator((int) (short) 0);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        java.lang.Object obj47 = null;
        boolean boolean48 = strList46.remove(obj47);
        boolean boolean50 = strList46.add("StrTokenizer[not tokenized yet]");
        boolean boolean51 = strList40.containsAll((java.util.Collection<java.lang.String>) strList46);
        boolean boolean52 = strList20.retainAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor53 = strList46.iterator();
        boolean boolean54 = strList46.isEmpty();
        boolean boolean55 = strList11.addAll((java.util.Collection<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setEmptyTokenAsNull(false);
        boolean boolean65 = strTokenizer59.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer59.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer59.setIgnoredChar(' ');
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer72.getTrimmerMatcher();
        int int76 = strList46.indexOf((java.lang.Object) strTokenizer72);
        boolean boolean77 = strTokenizer72.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.nextIndex();
        boolean boolean15 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setQuoteChar('a');
        boolean boolean18 = strTokenizer12.hasNext();
        int int19 = strList2.lastIndexOf((java.lang.Object) strTokenizer12);
        java.util.stream.Stream<java.lang.String> strStream20 = strList2.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList2.spliterator();
        java.lang.Object[] objArray22 = strList2.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("a");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList14.isEmpty();
        java.lang.Object[] objArray17 = strList14.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "a");
        int int39 = strMatcher22.isMatch(charArray24, (int) (byte) 0);
        boolean boolean40 = strList14.contains((java.lang.Object) strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer9.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setQuoteChar('4');
        int int58 = strTokenizer57.previousIndex();
        boolean boolean59 = strTokenizer57.isIgnoreEmptyTokens();
        boolean boolean60 = strTokenizer57.hasPrevious();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer57.reset(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer46.reset(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        java.util.ListIterator<java.lang.String> strItor27 = strList23.listIterator((int) (byte) 1);
        int int28 = strList23.size();
        java.util.stream.Stream<java.lang.String> strStream29 = strList23.parallelStream();
        java.util.Iterator<java.lang.String> strItor30 = strList23.iterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strItor30);
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        int int24 = strList23.size();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        java.lang.Object[] objArray30 = strList27.toArray();
        boolean boolean31 = strList23.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean33 = strList23.add("StrTokenizer[hi!]");
        boolean boolean34 = strList10.containsAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor35 = strList23.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList41.remove(obj42);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher46);
        boolean boolean48 = strList41.contains((java.lang.Object) "");
        boolean boolean49 = strList23.retainAll((java.util.Collection<java.lang.String>) strList41);
        strList23.clear();
        java.lang.Object[] objArray51 = strList23.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean58 = strList57.isEmpty();
        java.lang.Object[] objArray59 = strList57.toArray();
        boolean boolean61 = strList57.add("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        int int67 = strTokenizer65.previousIndex();
        boolean boolean68 = strList57.equals((java.lang.Object) strTokenizer65);
        int int69 = strList23.indexOf((java.lang.Object) strList57);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        int int7 = strTokenizer3.nextIndex();
        java.util.List<java.lang.String> strList8 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.stream.Stream<java.lang.String> strStream45 = strList2.parallelStream();
        java.util.ListIterator<java.lang.String> strItor46 = strList2.listIterator();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer63.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer68.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer59.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer72.getIgnoredMatcher();
        int int76 = strList2.indexOf((java.lang.Object) strMatcher75);
        boolean boolean78 = strList2.add("");
        boolean boolean80 = strList2.add("StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList7.spliterator();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.stream.Stream<java.lang.String> strStream13 = strList11.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        java.lang.Object obj20 = null;
        boolean boolean21 = strList19.remove(obj20);
        boolean boolean22 = strList11.removeAll((java.util.Collection<java.lang.String>) strList19);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        int int33 = strList32.size();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        java.lang.Object[] objArray39 = strList36.toArray();
        boolean boolean40 = strList32.removeAll((java.util.Collection<java.lang.String>) strList36);
        boolean boolean42 = strList32.add("StrTokenizer[hi!]");
        boolean boolean43 = strList19.containsAll((java.util.Collection<java.lang.String>) strList32);
        java.util.stream.Stream<java.lang.String> strStream44 = strList19.stream();
        boolean boolean45 = strList7.remove((java.lang.Object) strStream44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor47 = strList7.listIterator(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.Object obj42 = strTokenizer41.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterChar('a');
        boolean boolean45 = strTokenizer41.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        int int49 = strList20.indexOf((java.lang.Object) strTokenizer47);
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoreEmptyTokens(true);
        boolean boolean56 = strTokenizer55.hasPrevious();
        java.lang.Object obj57 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer55.setQuoteChar(' ');
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        java.lang.Object[] objArray61 = strList60.toArray();
        boolean boolean62 = strList20.removeAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean63 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream64 = strList20.parallelStream();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        boolean boolean69 = strTokenizer68.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer68.setQuoteMatcher(strMatcher74);
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer76.setQuoteChar(' ');
        int int80 = strList20.lastIndexOf((java.lang.Object) ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        java.lang.String str59 = strTokenizer58.next();
        java.lang.String str60 = strTokenizer58.previous();
        int int61 = strTokenizer58.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer58.getIgnoredMatcher();
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer58.reset(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "a" + "'", str59, "a");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "a" + "'", str60, "a");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher85);
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getTrimmerMatcher();
        boolean boolean15 = strTokenizer12.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isEmptyTokenAsNull();
        java.lang.Object obj13 = strTokenizer10.clone();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.setDelimiterMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher40);
        boolean boolean43 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher28, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer52.reset();
        boolean boolean54 = strTokenizer53.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        boolean boolean42 = strList10.contains((java.lang.Object) strList18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = strList10.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(false);
        java.lang.String str24 = strTokenizer21.next();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer21.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher10, strMatcher37);
        java.lang.String str39 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        java.lang.Object obj49 = strTokenizer48.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterChar('a');
        boolean boolean52 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer48.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer48.setIgnoredMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        java.lang.String str58 = strTokenizer56.getContent();
        java.lang.String str59 = strTokenizer56.nextToken();
        java.lang.String str60 = strTokenizer56.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        int int66 = strTokenizer64.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.reset();
        boolean boolean68 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setIgnoredChar('a');
        int int71 = strTokenizer67.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer67.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer56.setQuoteMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer38.setQuoteMatcher(strMatcher72);
        java.lang.Object obj75 = strTokenizer74.clone();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[hi!]" + "'", str39, "StrTokenizer[hi!]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        int int5 = strTokenizer3.nextIndex();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.reset(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        java.util.ListIterator<java.lang.String> strItor24 = strList23.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator25 = strList23.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator26 = strList23.spliterator();
        strList23.clear();
        strList23.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strSpliterator25);
        org.junit.Assert.assertNotNull(strSpliterator26);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        boolean boolean14 = strTokenizer13.isIgnoreEmptyTokens();
        int int15 = strTokenizer13.size();
        boolean boolean16 = strTokenizer13.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer49.setEmptyTokenAsNull(false);
        boolean boolean55 = strTokenizer49.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.setTrimmerMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean8 = strTokenizer7.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        java.lang.Object obj5 = strTokenizer4.clone();
        int int6 = strTokenizer4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.add("not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.Object obj42 = strTokenizer41.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterChar('a');
        boolean boolean45 = strTokenizer41.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        int int49 = strList20.indexOf((java.lang.Object) strTokenizer47);
        java.util.Iterator<java.lang.String> strItor50 = strList20.iterator();
        boolean boolean52 = strList20.add("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        strList57.clear();
        strList57.clear();
        java.lang.Cloneable[] cloneableArray60 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[] cloneableArray61 = strList57.toArray(cloneableArray60);
        java.lang.Object[] objArray62 = strList57.toArray();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        java.lang.String str72 = strTokenizer71.toString();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        java.lang.Object obj74 = null;
        boolean boolean75 = strList73.remove(obj74);
        boolean boolean76 = strList65.removeAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList65.spliterator();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        boolean boolean82 = strList80.isEmpty();
        java.lang.Object[] objArray83 = strList80.toArray();
        java.lang.Object[] objArray84 = strList65.toArray(objArray83);
        int int85 = strList57.indexOf((java.lang.Object) strList65);
        java.lang.Object[] objArray86 = strList57.toArray();
        boolean boolean87 = strList20.removeAll((java.util.Collection<java.lang.String>) strList57);
        strList57.add(0, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(cloneableArray60);
        org.junit.Assert.assertNotNull(cloneableArray61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str72, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("trTokenizer[hi!]", '#', '4');
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher24.isMatch(charArray66, (int) (short) 100, 0, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[a]]");
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer12.reset(charArray14);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer10.setQuoteMatcher(strMatcher17);
        int int20 = strTokenizer19.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer3.setTrimmerMatcher(strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setIgnoredMatcher(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        int int8 = strList5.size();
        boolean boolean9 = strList5.isEmpty();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        boolean boolean14 = strList12.isEmpty();
        strList12.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strTokenizer23.size();
        java.util.List<java.lang.String> strList27 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int29 = strList27.lastIndexOf((java.lang.Object) strMatcher28);
        boolean boolean30 = strList12.retainAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList12.spliterator();
        java.util.ListIterator<java.lang.String> strItor32 = strList12.listIterator();
        int int33 = strList12.size();
        boolean boolean34 = strList5.containsAll((java.util.Collection<java.lang.String>) strList12);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList5.replaceAll(strUnaryOperator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        java.lang.Object obj19 = null;
        int int20 = strList18.lastIndexOf(obj19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        boolean boolean31 = strList18.contains((java.lang.Object) strMatcher30);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = strList34.isEmpty();
        java.lang.Object[] objArray37 = strList34.toArray();
        java.util.stream.Stream<java.lang.String> strStream38 = strList34.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset("hi!");
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset("hi!");
        int int55 = strTokenizer52.nextIndex();
        boolean boolean56 = strList48.equals((java.lang.Object) int55);
        boolean boolean57 = strList45.contains((java.lang.Object) int55);
        boolean boolean58 = strList34.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean59 = strList18.addAll((java.util.Collection<java.lang.String>) strList34);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("StrTokenizer[a]");
        boolean boolean15 = strTokenizer12.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.reset();
        java.lang.String str17 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("StrTokenizer[StrTokenizer[, ]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setDelimiterString("StrTokenizer[a]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a" + "'", str17, "a");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        java.lang.String str24 = strTokenizer23.next();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "a" + "'", str24, "a");
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = strList23.parallelStream();
        strList23.clear();
        java.lang.Object[] objArray28 = strList23.toArray();
        strList23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strList23.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        int int3 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset();
        java.lang.String str5 = strTokenizer4.previousToken();
        boolean boolean6 = strTokenizer4.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setIgnoreEmptyTokens(false);
        java.util.List<java.lang.String> strList9 = strTokenizer4.getTokenList();
        boolean boolean10 = strList9.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer12.setDelimiterMatcher(strMatcher18);
        int int20 = strTokenizer19.previousIndex();
        char[] charArray21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer22.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer19.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer8.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ', '#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer50.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setDelimiterChar('a');
        boolean boolean25 = strList9.equals((java.lang.Object) strTokenizer21);
        boolean boolean26 = strTokenizer21.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        int int66 = strMatcher51.isMatch(charArray55, 1, 1, (int) ' ');
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher51, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer30.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer21.setDelimiterMatcher(strMatcher81);
        java.lang.String str83 = strTokenizer82.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer82.add("StrTokenizer[StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList2.listIterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        boolean boolean33 = strList2.addAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean34 = strList28.isEmpty();
        boolean boolean36 = strList28.add("StrTokenizer[hi!]");
        java.lang.Object[] objArray37 = strList28.toArray();
        strList28.add(0, "h");
        strList28.add(3, "StrTokenizer[StrTokenizer[, ]]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, StrTokenizer[hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, StrTokenizer[hi!]]");
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        java.lang.String str12 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.reset("a");
        boolean boolean17 = strTokenizer10.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer10.getIgnoredMatcher();
        boolean boolean19 = strTokenizer10.hasPrevious();
        int int20 = strTokenizer10.previousIndex();
        java.lang.String str21 = strTokenizer10.getContent();
        int int22 = strTokenizer10.size();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "a" + "'", str21, "a");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        int int24 = strTokenizer21.size();
        java.util.List<java.lang.String> strList25 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strList25.lastIndexOf((java.lang.Object) strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setTrimmerMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setEmptyTokenAsNull(false);
        boolean boolean38 = strTokenizer37.hasNext();
        java.lang.String str39 = strTokenizer37.next();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "a" + "'", str39, "a");
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("StrTokenizer[not tokenized yet]");
        int int19 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setIgnoredChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", 'a', 'a');
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        boolean boolean47 = strList44.isEmpty();
        java.lang.Object[] objArray48 = strList44.toArray();
        boolean boolean49 = strList18.addAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean50 = strList15.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        java.lang.Object obj62 = null;
        boolean boolean63 = strList61.remove(obj62);
        boolean boolean64 = strList53.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Spliterator<java.lang.String> strSpliterator65 = strList53.spliterator();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        boolean boolean70 = strList68.isEmpty();
        java.lang.Object[] objArray71 = strList68.toArray();
        java.lang.Object[] objArray72 = strList53.toArray(objArray71);
        boolean boolean73 = strList15.containsAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.stream.Stream<java.lang.String> strStream78 = strList76.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher81);
        boolean boolean83 = strList76.remove((java.lang.Object) strMatcher81);
        boolean boolean84 = strList53.retainAll((java.util.Collection<java.lang.String>) strList76);
        java.util.ListIterator<java.lang.String> strItor85 = strList53.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strSpliterator65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strItor85);
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        java.lang.Object obj26 = null;
        boolean boolean27 = strList25.remove(obj26);
        boolean boolean28 = strList17.removeAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("");
        java.lang.Object obj37 = strTokenizer36.clone();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        boolean boolean39 = strList17.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.util.ListIterator<java.lang.String> strItor40 = strList38.listIterator();
        int int41 = strList38.size();
        boolean boolean42 = strList13.containsAll((java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("");
        java.lang.Object obj51 = strTokenizer50.clone();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("");
        java.lang.Object obj62 = strTokenizer61.clone();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        int int64 = strList63.size();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.stream();
        java.lang.Object[] objArray70 = strList67.toArray();
        boolean boolean71 = strList63.removeAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean72 = strList52.containsAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList63.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        java.lang.String str78 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("");
        java.lang.Object obj82 = strTokenizer81.clone();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        int int84 = strList83.size();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.stream.Stream<java.lang.String> strStream89 = strList87.stream();
        java.lang.Object[] objArray90 = strList87.toArray();
        boolean boolean91 = strList83.removeAll((java.util.Collection<java.lang.String>) strList87);
        int int92 = strList63.indexOf((java.lang.Object) strList87);
        boolean boolean93 = strList13.containsAll((java.util.Collection<java.lang.String>) strList63);
        strList13.clear();
        java.util.stream.Stream<java.lang.String> strStream95 = strList13.parallelStream();
        int int96 = strList13.size();
        java.util.stream.Stream<java.lang.String> strStream97 = strList13.stream();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strStream95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(strStream97);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.lang.Object obj18 = null;
        boolean boolean19 = strList17.remove(obj18);
        boolean boolean20 = strList9.removeAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        boolean boolean31 = strList9.retainAll((java.util.Collection<java.lang.String>) strList30);
        java.util.ListIterator<java.lang.String> strItor32 = strList9.listIterator();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.stream();
        boolean boolean38 = strList35.isEmpty();
        java.lang.Object[] objArray39 = strList35.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator40 = strList35.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList35.spliterator();
        strList35.clear();
        boolean boolean43 = strList9.containsAll((java.util.Collection<java.lang.String>) strList35);
        strList9.clear();
        boolean boolean45 = strList4.retainAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object[] objArray46 = strList9.toArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer52.reset(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        boolean boolean75 = strTokenizer73.hasNext();
        java.lang.Object obj76 = strTokenizer73.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer73.setEmptyTokenAsNull(false);
        char[] charArray80 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher85, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer73.setDelimiterMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer50.setTrimmerMatcher(strMatcher92);
        int int96 = strList9.lastIndexOf((java.lang.Object) strTokenizer95);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator40);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setIgnoreEmptyTokens(true);
        java.lang.Object obj47 = strTokenizer43.clone();
        java.lang.String str48 = strTokenizer43.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "a" + "'", str48, "a");
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        java.lang.String str26 = strTokenizer23.nextToken();
        int int27 = strTokenizer23.nextIndex();
        int int28 = strList13.indexOf((java.lang.Object) strTokenizer23);
        boolean boolean30 = strList13.add("trTokenizer[hi!]");
        boolean boolean32 = strList13.add("StrTokenizer[");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strTokenizer40.size();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        java.lang.Object obj45 = null;
        int int46 = strList44.lastIndexOf(obj45);
        java.lang.Object obj47 = null;
        int int48 = strList44.indexOf(obj47);
        boolean boolean49 = strList13.equals((java.lang.Object) int48);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset("hi!");
        java.util.List<java.lang.String> strList14 = strTokenizer11.getTokenList();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '#', '#');
        int int31 = strList14.lastIndexOf((java.lang.Object) strTokenizer30);
        int int32 = strList14.size();
        boolean boolean33 = strList5.retainAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        boolean boolean39 = strList36.isEmpty();
        java.lang.Object[] objArray40 = strList36.toArray();
        java.lang.String[] strArray46 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = strList36.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.lang.String str52 = strList47.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset("hi!");
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("");
        java.lang.Object obj68 = strTokenizer67.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer67.getQuoteMatcher();
        boolean boolean70 = strList59.contains((java.lang.Object) strMatcher69);
        boolean boolean71 = strList47.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str76 = strTokenizer75.previousToken();
        java.lang.String[] strArray77 = strTokenizer75.getTokenArray();
        java.lang.String[] strArray78 = strTokenizer75.getTokenArray();
        boolean boolean79 = strList59.equals((java.lang.Object) strTokenizer75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer75.reset();
        char[] charArray82 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher84, strMatcher85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer86.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher87, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer80.reset(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        boolean boolean93 = strList5.remove((java.lang.Object) strTokenizer92);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer92.set("h");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String[] strArray6 = strTokenizer3.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int22 = strList16.indexOf((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer23.setTrimmerMatcher(strMatcher34);
        int int36 = strList16.indexOf((java.lang.Object) strTokenizer35);
        java.lang.String str38 = strList16.remove((int) (short) 0);
        boolean boolean40 = strList16.add("StrTokenizer[a]");
        java.lang.String str42 = strList16.get((int) (short) 0);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        java.lang.Object obj54 = null;
        boolean boolean55 = strList53.remove(obj54);
        boolean boolean56 = strList45.removeAll((java.util.Collection<java.lang.String>) strList53);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strList45.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        boolean boolean68 = strList45.remove((java.lang.Object) strList67);
        java.util.stream.Stream<java.lang.String> strStream69 = strList45.parallelStream();
        boolean boolean70 = strList16.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean73 = strTokenizer72.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray76 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher81, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer74.setTrimmerMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer72.setQuoteMatcher(strMatcher85);
        int int88 = strList45.lastIndexOf((java.lang.Object) strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.setQuoteMatcher(strMatcher85);
        java.lang.String[] strArray90 = strTokenizer89.getTokenArray();
        int int91 = strTokenizer89.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[a]" + "'", str42, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSpliterator57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        boolean boolean10 = strList8.isEmpty();
        strList8.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("");
        java.lang.Object obj20 = strTokenizer19.clone();
        java.util.List<java.lang.String> strList21 = strTokenizer19.getTokenList();
        int int22 = strTokenizer19.size();
        java.util.List<java.lang.String> strList23 = strTokenizer19.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int25 = strList23.lastIndexOf((java.lang.Object) strMatcher24);
        boolean boolean26 = strList8.retainAll((java.util.Collection<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        int int37 = strList36.size();
        java.util.ListIterator<java.lang.String> strItor38 = strList36.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        boolean boolean44 = strList36.containsAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean45 = strList8.remove((java.lang.Object) boolean44);
        boolean boolean46 = strList5.addAll((java.util.Collection<java.lang.String>) strList8);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = strList49.isEmpty();
        java.lang.Object[] objArray52 = strList49.toArray();
        java.util.stream.Stream<java.lang.String> strStream53 = strList49.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset("hi!");
        java.util.List<java.lang.String> strList60 = strTokenizer57.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.stream.Stream<java.lang.String> strStream65 = strList63.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset("hi!");
        int int70 = strTokenizer67.nextIndex();
        boolean boolean71 = strList63.equals((java.lang.Object) int70);
        boolean boolean72 = strList60.contains((java.lang.Object) int70);
        boolean boolean73 = strList49.containsAll((java.util.Collection<java.lang.String>) strList60);
        int int74 = strList60.size();
        boolean boolean75 = strList60.isEmpty();
        boolean boolean76 = strList8.remove((java.lang.Object) boolean75);
        char[] charArray78 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher83, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        boolean boolean89 = strTokenizer88.hasNext();
        java.lang.String str90 = strTokenizer88.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer88.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer88.getDelimiterMatcher();
        boolean boolean94 = strTokenizer88.hasPrevious();
        boolean boolean95 = strList8.contains((java.lang.Object) strTokenizer88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor97 = strList8.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "a" + "'", str90, "a");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.lang.Object obj51 = null;
        boolean boolean52 = strList50.remove(obj51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        boolean boolean57 = strList50.contains((java.lang.Object) "");
        boolean boolean58 = strList41.removeAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        int int69 = strTokenizer66.size();
        java.util.List<java.lang.String> strList70 = strTokenizer66.getTokenList();
        java.lang.Object obj71 = null;
        int int72 = strList70.lastIndexOf(obj71);
        boolean boolean73 = strList50.retainAll((java.util.Collection<java.lang.String>) strList70);
        java.util.ListIterator<java.lang.String> strItor74 = strList70.listIterator();
        strList70.clear();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.stream.Stream<java.lang.String> strStream80 = strList78.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        java.lang.String str85 = strTokenizer84.toString();
        java.util.List<java.lang.String> strList86 = strTokenizer84.getTokenList();
        java.lang.Object obj87 = null;
        boolean boolean88 = strList86.remove(obj87);
        boolean boolean89 = strList78.removeAll((java.util.Collection<java.lang.String>) strList86);
        java.util.Spliterator<java.lang.String> strSpliterator90 = strList78.spliterator();
        java.util.RandomAccess[] randomAccessArray91 = new java.util.RandomAccess[] { strList78 };
        java.util.RandomAccess[] randomAccessArray92 = strList70.toArray(randomAccessArray91);
        java.lang.Class<?> wildcardClass93 = randomAccessArray92.getClass();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strSpliterator90);
        org.junit.Assert.assertNotNull(randomAccessArray91);
        org.junit.Assert.assertNotNull(randomAccessArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "a");
        int int27 = strMatcher10.isMatch(charArray12, (int) (byte) 0);
        boolean boolean28 = strList2.contains((java.lang.Object) strMatcher10);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        java.lang.Object obj40 = null;
        boolean boolean41 = strList39.remove(obj40);
        boolean boolean42 = strList31.removeAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        java.lang.Object[] objArray48 = strList45.toArray();
        java.util.ListIterator<java.lang.String> strItor49 = strList45.listIterator();
        boolean boolean50 = strList39.remove((java.lang.Object) strList45);
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, "StrTokenizer[hi!]");
        boolean boolean71 = strList45.contains((java.lang.Object) strTokenizer70);
        boolean boolean72 = strTokenizer70.isEmptyTokenAsNull();
        java.lang.String str73 = strTokenizer70.toString();
        boolean boolean74 = strTokenizer70.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer70.setDelimiterString("hi!");
        boolean boolean77 = strTokenizer76.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getQuoteMatcher();
        boolean boolean79 = strList2.equals((java.lang.Object) strTokenizer76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strList2.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str73, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("#a444 ");
        java.lang.String str13 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "a" + "'", str13, "a");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.Object[] objArray6 = strList2.toArray();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        int int28 = strMatcher13.isMatch(charArray17, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList34 = strTokenizer33.getTokenList();
        strList34.clear();
        int int36 = strList2.indexOf((java.lang.Object) strList34);
        java.util.Iterator<java.lang.String> strItor37 = strList2.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        int int48 = strList47.size();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList54 = strTokenizer53.getTokenList();
        boolean boolean55 = strList47.containsAll((java.util.Collection<java.lang.String>) strList54);
        java.util.stream.Stream<java.lang.String> strStream56 = strList47.stream();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        java.util.List<java.lang.String> strList67 = strTokenizer65.getTokenList();
        boolean boolean68 = strList67.isEmpty();
        boolean boolean69 = strList67.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream70 = strList67.stream();
        boolean boolean71 = strList60.addAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean72 = strList60.isEmpty();
        boolean boolean73 = strList47.retainAll((java.util.Collection<java.lang.String>) strList60);
        int int74 = strList47.size();
        java.util.Iterator<java.lang.String> strItor75 = strList47.iterator();
        boolean boolean76 = strList2.removeAll((java.util.Collection<java.lang.String>) strList47);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        java.lang.String str8 = strTokenizer7.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("");
        java.lang.Object obj12 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getQuoteMatcher();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "hi!");
        int int30 = strMatcher13.isMatch(charArray15, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("");
        java.lang.Object obj44 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer49.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoreEmptyTokens(false);
        java.lang.String str59 = strTokenizer56.next();
        char[] charArray61 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer56.setIgnoredMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher45, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer34.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer2.setDelimiterMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer2.setQuoteChar('#');
        int int79 = strTokenizer78.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.reset("StrTokenizer[StrTokenizer[, ]]");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        java.lang.String str14 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer8.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        int int33 = strTokenizer32.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoreEmptyTokens(false);
        java.lang.String str48 = strTokenizer45.next();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer45.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer64.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar('4');
        char[] charArray73 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer69.reset(charArray73);
        int int88 = strMatcher59.isMatch(charArray73, (-1), 0, (int) '#');
        int int90 = strMatcher34.isMatch(charArray73, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("a", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer91.setIgnoredMatcher(strMatcher95);
        int int97 = strTokenizer96.previousIndex();
        int int98 = strTokenizer96.size();
        java.lang.String str99 = strTokenizer96.next();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "a" + "'", str99, "a");
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterChar('4');
        boolean boolean24 = strTokenizer23.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer23.add(",");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setIgnoredChar('4');
        boolean boolean26 = strTokenizer25.isEmptyTokenAsNull();
        boolean boolean27 = strTokenizer25.hasNext();
        int int28 = strList9.indexOf((java.lang.Object) strTokenizer25);
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        int int34 = strTokenizer32.size();
        boolean boolean35 = strList9.remove((java.lang.Object) strTokenizer32);
        java.util.Iterator<java.lang.String> strItor36 = strList9.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getQuoteMatcher();
        java.lang.String str49 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer45.setIgnoredChar(' ');
        int int52 = strList9.lastIndexOf((java.lang.Object) strTokenizer51);
        boolean boolean54 = strList9.add("StrTokenizer[h]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        int int40 = strList39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        java.lang.Object[] objArray57 = strList54.toArray();
        boolean boolean58 = strList50.removeAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean59 = strList39.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList50.spliterator();
        boolean boolean61 = strList50.isEmpty();
        boolean boolean62 = strList9.retainAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("");
        java.lang.Object obj71 = strTokenizer70.clone();
        java.util.List<java.lang.String> strList72 = strTokenizer70.getTokenList();
        java.util.ListIterator<java.lang.String> strItor74 = strList72.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream75 = strList72.stream();
        int int76 = strList72.size();
        boolean boolean78 = strList72.add("hi!");
        strList72.add((int) (byte) 0, "a");
        boolean boolean82 = strList50.containsAll((java.util.Collection<java.lang.String>) strList72);
        java.util.stream.Stream<java.lang.String> strStream83 = strList50.stream();
        java.lang.Object[] objArray84 = strList50.toArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        boolean boolean31 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setEmptyTokenAsNull(false);
        boolean boolean20 = strTokenizer16.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer16.setDelimiterString("StrTokenizer[]");
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer16.setDelimiterMatcher(strMatcher38);
        java.lang.String str40 = strTokenizer16.previous();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "a");
        int int27 = strMatcher10.isMatch(charArray12, (int) (byte) 0);
        boolean boolean28 = strList2.contains((java.lang.Object) strMatcher10);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        int int63 = strMatcher48.isMatch(charArray52, 1, 1, (int) ' ');
        char[] charArray64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher48, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        int int73 = strList2.indexOf((java.lang.Object) charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.addAll((java.util.Collection<java.lang.String>) strList12);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer36.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher42);
        boolean boolean45 = strTokenizer44.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer44.setTrimmerMatcher(strMatcher47);
        int int49 = strList12.lastIndexOf((java.lang.Object) strTokenizer48);
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoreEmptyTokens(true);
        boolean boolean56 = strTokenizer55.hasPrevious();
        java.lang.Object obj57 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer55.getIgnoredMatcher();
        boolean boolean59 = strTokenizer55.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer55.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer48.setDelimiterMatcher(strMatcher60);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("a");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList14.isEmpty();
        java.lang.Object[] objArray17 = strList14.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "a");
        int int39 = strMatcher22.isMatch(charArray24, (int) (byte) 0);
        boolean boolean40 = strList14.contains((java.lang.Object) strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer9.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setQuoteChar('4');
        int int58 = strTokenizer57.previousIndex();
        boolean boolean59 = strTokenizer57.isIgnoreEmptyTokens();
        boolean boolean60 = strTokenizer57.hasPrevious();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer57.reset(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer46.reset(charArray62);
        boolean boolean83 = strTokenizer46.hasPrevious();
        java.lang.String[] strArray84 = strTokenizer46.getTokenArray();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", strMatcher1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setQuoteMatcher(strMatcher11);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str19 = strList13.remove(0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.stream();
        boolean boolean25 = strList22.isEmpty();
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher27);
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        boolean boolean30 = strList22.equals((java.lang.Object) strArray29);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList22.spliterator();
        java.util.stream.Stream<java.lang.String> strStream32 = strList22.stream();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        java.lang.Object obj44 = null;
        boolean boolean45 = strList43.remove(obj44);
        boolean boolean46 = strList35.removeAll((java.util.Collection<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        boolean boolean57 = strList35.retainAll((java.util.Collection<java.lang.String>) strList56);
        java.util.ListIterator<java.lang.String> strItor58 = strList35.listIterator();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        boolean boolean64 = strList61.isEmpty();
        java.lang.Object[] objArray65 = strList61.toArray();
        boolean boolean66 = strList35.addAll((java.util.Collection<java.lang.String>) strList61);
        boolean boolean67 = strList22.removeAll((java.util.Collection<java.lang.String>) strList61);
        int int68 = strList22.size();
        java.util.ListIterator<java.lang.String> strItor69 = strList22.listIterator();
        boolean boolean70 = strList13.addAll((java.util.Collection<java.lang.String>) strList22);
        strList13.clear();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        java.lang.String str13 = strTokenizer8.toString();
        int int14 = strTokenizer8.size();
        int int15 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer20.setDelimiterMatcher(strMatcher26);
        int int28 = strTokenizer27.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoreEmptyTokens(false);
        boolean boolean33 = strTokenizer30.hasPrevious();
        int int34 = strTokenizer30.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer8.setQuoteMatcher(strMatcher41);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("StrTokenizer[StrTokenizer[, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setEmptyTokenAsNull(false);
        java.lang.Object obj28 = strTokenizer27.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer27.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("hi!");
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        boolean boolean51 = strList40.contains((java.lang.Object) strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher32, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        boolean boolean55 = strTokenizer54.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setEmptyTokenAsNull(false);
        java.lang.Object obj28 = strTokenizer27.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer32.setDelimiterMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer27.setQuoteMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getIgnoredMatcher();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '#');
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher45, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer16.setIgnoredMatcher(strMatcher59);
        java.lang.String str62 = strTokenizer61.previousToken();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        int int14 = strTokenizer11.nextIndex();
        java.lang.String str15 = strTokenizer11.getContent();
        boolean boolean16 = strTokenizer11.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer21.setDelimiterMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher27);
        boolean boolean30 = strTokenizer29.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer11.setDelimiterMatcher(strMatcher34);
        boolean boolean36 = strList2.equals((java.lang.Object) strTokenizer35);
        strList2.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('a');
        java.lang.Object obj9 = strTokenizer8.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        boolean boolean11 = strList10.isEmpty();
        boolean boolean12 = strList10.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream13 = strList10.stream();
        boolean boolean14 = strList3.addAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        boolean boolean20 = strList17.isEmpty();
        char[] charArray21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher22);
        java.lang.String[] strArray24 = strTokenizer23.getTokenArray();
        boolean boolean25 = strList17.equals((java.lang.Object) strArray24);
        java.util.Spliterator<java.lang.String> strSpliterator26 = strList17.spliterator();
        java.util.stream.Stream<java.lang.String> strStream27 = strList17.stream();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.stream.Stream<java.lang.String> strStream32 = strList30.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        java.lang.Object obj39 = null;
        boolean boolean40 = strList38.remove(obj39);
        boolean boolean41 = strList30.removeAll((java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("");
        java.lang.Object obj50 = strTokenizer49.clone();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strList30.retainAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor53 = strList30.listIterator();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.stream();
        boolean boolean59 = strList56.isEmpty();
        java.lang.Object[] objArray60 = strList56.toArray();
        boolean boolean61 = strList30.addAll((java.util.Collection<java.lang.String>) strList56);
        boolean boolean62 = strList17.removeAll((java.util.Collection<java.lang.String>) strList56);
        int int63 = strList17.size();
        boolean boolean64 = strList3.equals((java.lang.Object) strList17);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.stream();
        boolean boolean70 = strList67.isEmpty();
        java.lang.Object[] objArray71 = strList67.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator72 = strList67.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList67.spliterator();
        java.util.ListIterator<java.lang.String> strItor74 = strList67.listIterator();
        int int75 = strList3.indexOf((java.lang.Object) strList67);
        java.util.stream.Stream<java.lang.String> strStream76 = strList67.parallelStream();
        java.util.Iterator<java.lang.String> strItor77 = strList67.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSpliterator26);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator72);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertNotNull(strItor77);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        boolean boolean22 = strList9.remove((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        boolean boolean30 = strList9.contains((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer26.setDelimiterString("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer26.setQuoteChar('4');
        int int35 = strTokenizer26.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer26.reset("StrTokenizer[a]");
        boolean boolean38 = strTokenizer26.hasPrevious();
        int int39 = strTokenizer26.size();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer1.getIgnoredMatcher();
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "StrTokenizer[not tokenized yet]");
        int int41 = strMatcher20.isMatch(charArray22, (int) (short) 0, 0, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            int int24 = strMatcher4.isMatch(charArray6, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.reset("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset("StrTokenizer[not tokenized yet]");
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher29);
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        java.lang.String[] strArray32 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer27.setDelimiterMatcher(strMatcher33);
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        int int56 = strMatcher41.isMatch(charArray45, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        int int64 = strMatcher33.isMatch(charArray45, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        boolean boolean67 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer10.reset("444 ");
        boolean boolean70 = strTokenizer10.isEmptyTokenAsNull();
        java.lang.String[] strArray71 = strTokenizer10.getTokenArray();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        int int16 = strTokenizer15.size();
        java.lang.Object obj17 = strTokenizer15.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer23.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer23.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer15.setTrimmerMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer15.setEmptyTokenAsNull(false);
        boolean boolean45 = strTokenizer15.isIgnoreEmptyTokens();
        java.lang.String[] strArray46 = strTokenizer15.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer13.hasPrevious();
        int int17 = strTokenizer13.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer13.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        java.lang.String str27 = strTokenizer26.nextToken();
        boolean boolean28 = strTokenizer26.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getDelimiterMatcher();
        int int30 = strTokenizer26.nextIndex();
        java.lang.String[] strArray31 = strTokenizer26.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('a');
        int int9 = strTokenizer6.size();
        boolean boolean10 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setIgnoredChar('#');
        java.lang.String str21 = strTokenizer20.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer6.setDelimiterMatcher(strMatcher22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("");
        java.lang.Object obj50 = strTokenizer49.clone();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        java.util.ListIterator<java.lang.String> strItor53 = strList51.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor54 = strList51.listIterator();
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        boolean boolean64 = strList51.remove((java.lang.Object) strMatcher61);
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int80 = strMatcher61.isMatch(charArray66, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher41, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer6.setTrimmerMatcher(strMatcher41);
        java.lang.Object obj83 = strTokenizer6.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar(' ');
        java.lang.String str15 = strTokenizer14.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer5.hasPrevious();
        java.lang.Object obj7 = strTokenizer5.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        boolean boolean9 = strTokenizer5.hasPrevious();
        int int10 = strTokenizer5.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '#', 'a');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setQuoteChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        boolean boolean9 = strList5.add("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setQuoteChar('4');
        int int21 = strTokenizer20.previousIndex();
        boolean boolean22 = strTokenizer20.isEmptyTokenAsNull();
        java.lang.Object obj23 = strTokenizer20.clone();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer20.reset(charArray25);
        boolean boolean35 = strList5.contains((java.lang.Object) strTokenizer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("");
        java.lang.Object obj44 = strTokenizer43.clone();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        int int46 = strList45.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        int int57 = strList56.size();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.stream();
        java.lang.Object[] objArray63 = strList60.toArray();
        boolean boolean64 = strList56.removeAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean65 = strList45.containsAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object[] objArray66 = strList56.toArray();
        boolean boolean67 = strList5.addAll((java.util.Collection<java.lang.String>) strList56);
        boolean boolean69 = strList56.add("StrTokenizer[]");
        java.lang.Object[] objArray70 = strList56.toArray();
        java.util.stream.Stream<java.lang.String> strStream71 = strList56.parallelStream();
        java.lang.Class<?> wildcardClass72 = strList56.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", '4');
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        int int37 = strMatcher22.isMatch(charArray26, 1, 1, (int) ' ');
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher22, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean45 = strTokenizer44.hasNext();
        java.lang.Object obj46 = strTokenizer44.clone();
        int int47 = strTokenizer44.previousIndex();
        boolean boolean48 = strTokenizer44.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setDelimiterMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getDelimiterMatcher();
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int75 = strTokenizer74.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher64, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer2.setDelimiterMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer2.getTrimmerMatcher();
        int int81 = strTokenizer2.nextIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        int int26 = strList23.size();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList23.remove(obj27);
        java.util.stream.Stream<java.lang.String> strStream29 = strList23.parallelStream();
        int int30 = strList23.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        strList5.clear();
        java.util.Spliterator<java.lang.String> strSpliterator9 = strList5.spliterator();
        int int10 = strList5.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.util.ListIterator<java.lang.String> strItor22 = strList20.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor23 = strList20.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int26 = strList20.indexOf((java.lang.Object) strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer27.setTrimmerMatcher(strMatcher38);
        int int40 = strList20.indexOf((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset("hi!");
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getQuoteMatcher();
        boolean boolean58 = strList47.contains((java.lang.Object) strMatcher57);
        boolean boolean59 = strList20.retainAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList47.spliterator();
        java.util.stream.Stream<java.lang.String> strStream61 = strList47.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]]", 'a');
        boolean boolean65 = strList47.remove((java.lang.Object) 'a');
        int int66 = strList47.size();
        boolean boolean67 = strList5.addAll((java.util.Collection<java.lang.String>) strList47);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        int int40 = strList39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        java.lang.Object[] objArray57 = strList54.toArray();
        boolean boolean58 = strList50.removeAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean59 = strList39.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList50.spliterator();
        boolean boolean61 = strList50.isEmpty();
        boolean boolean62 = strList9.retainAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoreEmptyTokens(false);
        int int76 = strTokenizer73.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer73.setDelimiterChar('a');
        int int79 = strTokenizer78.size();
        java.lang.Object obj80 = strTokenizer78.clone();
        int int81 = strList9.lastIndexOf(obj80);
        boolean boolean83 = strList9.add("StrTokenizer[not tokenized yet]");
        boolean boolean84 = strList9.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("a", '4');
        int int88 = strTokenizer87.previousIndex();
        int int89 = strTokenizer87.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer87.setIgnoredChar(' ');
        int int92 = strList9.lastIndexOf((java.lang.Object) strTokenizer87);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('#');
        boolean boolean15 = strTokenizer12.isIgnoreEmptyTokens();
        java.lang.Object obj16 = strTokenizer12.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.add("a   ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor20 = strList17.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int23 = strList17.indexOf((java.lang.Object) strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer24.setTrimmerMatcher(strMatcher35);
        int int37 = strList17.indexOf((java.lang.Object) strTokenizer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        int int48 = strList47.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterString("");
        java.lang.Object obj57 = strTokenizer56.clone();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        int int59 = strList58.size();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.stream();
        java.lang.Object[] objArray65 = strList62.toArray();
        boolean boolean66 = strList58.removeAll((java.util.Collection<java.lang.String>) strList62);
        boolean boolean67 = strList47.containsAll((java.util.Collection<java.lang.String>) strList58);
        java.util.Spliterator<java.lang.String> strSpliterator68 = strList58.spliterator();
        boolean boolean69 = strList58.isEmpty();
        boolean boolean70 = strList17.retainAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean71 = strList5.addAll((java.util.Collection<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer73.reset();
        int int75 = strList58.indexOf((java.lang.Object) strTokenizer73);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList58.spliterator();
        java.lang.Class<?> wildcardClass77 = strSpliterator76.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher27, strMatcher41);
        int int43 = strTokenizer42.nextIndex();
        java.lang.String str44 = strTokenizer42.toString();
        java.lang.String str45 = strTokenizer42.nextToken();
        boolean boolean46 = strTokenizer42.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer42.setQuoteChar('4');
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.stream();
        boolean boolean54 = strList51.isEmpty();
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher56);
        java.lang.String[] strArray58 = strTokenizer57.getTokenArray();
        boolean boolean59 = strList51.equals((java.lang.Object) strArray58);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList51.spliterator();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        int int75 = strList51.lastIndexOf((java.lang.Object) charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer48.setQuoteMatcher(strMatcher78);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "a" + "'", str45, "a");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        java.lang.String str5 = strTokenizer4.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj9 = strTokenizer8.clone();
        boolean boolean10 = strTokenizer8.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setQuoteChar('#');
        int int13 = strTokenizer12.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setIgnoreEmptyTokens(true);
        java.lang.Object obj18 = strTokenizer12.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer12.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer21.reset(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer21.getIgnoredMatcher();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "StrTokenizer[not tokenized yet]");
        int int61 = strMatcher40.isMatch(charArray42, (int) (short) 0, 0, 4);
        int int65 = strMatcher19.isMatch(charArray42, (int) (byte) 0, (int) (short) 1, (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        java.lang.String str70 = strTokenizer69.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer69.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer78.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher82);
        int int87 = strMatcher7.isMatch(charArray42, (int) ' ', (-1), (int) (byte) 10);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher83, strMatcher84);
        int int87 = strMatcher36.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher93);
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str18 = strList13.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        boolean boolean37 = strList13.addAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer41.setDelimiterMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoreEmptyTokens(false);
        boolean boolean51 = strTokenizer48.isEmptyTokenAsNull();
        boolean boolean52 = strList13.contains((java.lang.Object) strTokenizer48);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.stream.Stream<java.lang.String> strStream57 = strList55.stream();
        boolean boolean58 = strList55.isEmpty();
        java.lang.Object[] objArray59 = strList55.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList55.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList55.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        boolean boolean66 = strTokenizer65.hasPrevious();
        int int67 = strTokenizer65.nextIndex();
        boolean boolean68 = strTokenizer65.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer65.setQuoteChar('a');
        boolean boolean71 = strTokenizer65.hasNext();
        int int72 = strList55.lastIndexOf((java.lang.Object) strTokenizer65);
        java.util.List<java.lang.String> strList73 = strTokenizer65.getTokenList();
        int int74 = strList73.size();
        java.util.List<java.lang.String> strList77 = strList73.subList((int) (short) 0, 0);
        boolean boolean78 = strList13.removeAll((java.util.Collection<java.lang.String>) strList73);
        int int79 = strList73.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        int int22 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer8.setIgnoredMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setEmptyTokenAsNull(false);
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer33.setQuoteMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer24.setQuoteMatcher(strMatcher47);
        java.lang.String str49 = strTokenizer48.next();
        java.lang.String[] strArray50 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer48.getDelimiterMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher54);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setTrimmerMatcher(strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setEmptyTokenAsNull(false);
        java.lang.String str17 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("");
        java.lang.Object obj36 = strTokenizer35.clone();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        java.util.ListIterator<java.lang.String> strItor39 = strList37.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor40 = strList37.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int43 = strList37.indexOf((java.lang.Object) strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer26.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer22.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[", strMatcher18, strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setEmptyTokenAsNull(false);
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer38.setQuoteMatcher(strMatcher58);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setDelimiterString("");
        java.lang.Object obj10 = strTokenizer9.clone();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList11.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor14 = strList11.listIterator();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        boolean boolean24 = strList11.remove((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setQuoteChar('4');
        java.lang.String str30 = strTokenizer29.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strTokenizer29.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = strList4.get((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        java.lang.String str17 = strTokenizer16.getContent();
        java.lang.Object obj18 = strTokenizer16.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer22.setDelimiterMatcher(strMatcher28);
        int int30 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer16.setIgnoredMatcher(strMatcher33);
        java.lang.Object obj35 = strTokenizer34.clone();
        int int36 = strTokenizer34.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a" + "'", str17, "a");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        strList2.clear();
        strList2.clear();
        strList2.add(0, "StrTokenizer[h]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList20 = strList2.subList((int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer5.setQuoteMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setEmptyTokenAsNull(false);
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterChar('a');
        boolean boolean37 = strTokenizer33.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer33.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer33.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        char[] charArray44 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', '#');
        int int62 = strMatcher42.isMatch(charArray44, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a', '4');
        int int68 = strMatcher24.isMatch(charArray44, (int) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        int int71 = strMatcher12.isMatch(charArray44, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        int int43 = strMatcher28.isMatch(charArray32, 1, 1, (int) ' ');
        int int44 = strList2.indexOf((java.lang.Object) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer();
        java.lang.String str46 = strTokenizer45.getContent();
        boolean boolean47 = strList2.contains((java.lang.Object) strTokenizer45);
        java.lang.Object[] objArray48 = strList2.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        int int12 = strTokenizer11.size();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.retainAll((java.util.Collection<java.lang.String>) strList12);
        boolean boolean33 = strList12.add("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("hi!");
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '#', '#');
        int int57 = strList40.lastIndexOf((java.lang.Object) strTokenizer56);
        int int58 = strList40.size();
        java.util.ListIterator<java.lang.String> strItor59 = strList40.listIterator();
        java.lang.Object[] objArray60 = strList40.toArray();
        java.util.Iterator<java.lang.String> strItor61 = strList40.iterator();
        java.util.stream.Stream<java.lang.String> strStream62 = strList40.stream();
        boolean boolean63 = strList12.addAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.stream.Stream<java.lang.String> strStream68 = strList66.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher71);
        boolean boolean73 = strList66.remove((java.lang.Object) strMatcher71);
        boolean boolean74 = strList66.isEmpty();
        boolean boolean75 = strList12.addAll((java.util.Collection<java.lang.String>) strList66);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        strList5.clear();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.stream.Stream<java.lang.String> strStream14 = strList12.stream();
        java.lang.Object[] objArray15 = strList12.toArray();
        java.util.ListIterator<java.lang.String> strItor16 = strList12.listIterator();
        java.lang.String str18 = strList12.get((int) (short) 0);
        boolean boolean19 = strList12.isEmpty();
        boolean boolean20 = strList12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        boolean boolean27 = strList26.isEmpty();
        boolean boolean28 = strList26.isEmpty();
        boolean boolean29 = strList26.isEmpty();
        boolean boolean30 = strList12.retainAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer39.reset();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        int int75 = strMatcher60.isMatch(charArray64, 1, 1, (int) ' ');
        char[] charArray76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher60, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean83 = strTokenizer82.hasNext();
        java.lang.Object obj84 = strTokenizer82.clone();
        int int85 = strTokenizer82.previousIndex();
        boolean boolean86 = strTokenizer82.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer40.setQuoteMatcher(strMatcher87);
        boolean boolean90 = strList26.remove((java.lang.Object) strTokenizer40);
        java.lang.String str91 = strTokenizer40.previousToken();
        java.util.List<java.lang.String> strList92 = strTokenizer40.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = strList5.addAll((int) (short) 1, (java.util.Collection<java.lang.String>) strList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!]");
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(strList92);
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("444 ", "StrTokenizer[a]");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.setQuoteMatcher(strMatcher18);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("");
        java.lang.String[] strArray17 = strTokenizer14.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer1.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer1.setDelimiterChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer63.add("#a444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setQuoteChar(' ');
        java.lang.String str9 = strTokenizer5.next();
        boolean boolean10 = strTokenizer5.hasNext();
        int int11 = strTokenizer5.size();
        java.lang.String str12 = strTokenizer5.previous();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.stream();
        boolean boolean6 = strList3.isEmpty();
        java.lang.Object[] objArray7 = strList3.toArray();
        java.lang.String[] strArray13 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList3.removeAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str19 = strList14.set(1, "");
        java.util.stream.Stream<java.lang.String> strStream20 = strList14.stream();
        char[] charArray21 = null;
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher39, strMatcher40);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        char[] charArray52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setIgnoredMatcher(strMatcher55);
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        int int78 = strMatcher63.isMatch(charArray67, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher81, strMatcher82);
        java.lang.String str84 = strTokenizer83.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher55, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer41.setIgnoredMatcher(strMatcher86);
        int int91 = strList14.indexOf((java.lang.Object) strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher86);
        java.lang.String str93 = strTokenizer92.toString();
        int int94 = strTokenizer92.previousIndex();
        boolean boolean95 = strTokenizer92.hasPrevious();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str93, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[a]");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.reset(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#", ' ', 'a');
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        java.lang.String str44 = strTokenizer41.next();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer41.setIgnoredMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher30, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer19.setQuoteMatcher(strMatcher57);
        java.lang.String[] strArray60 = strTokenizer59.getTokenArray();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", strMatcher18);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        int int33 = strTokenizer32.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoreEmptyTokens(false);
        java.lang.String str48 = strTokenizer45.next();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer45.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer64.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar('4');
        char[] charArray73 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer69.reset(charArray73);
        int int88 = strMatcher59.isMatch(charArray73, (-1), 0, (int) '#');
        int int90 = strMatcher34.isMatch(charArray73, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        int int96 = strTokenizer95.nextIndex();
        java.lang.Object obj97 = strTokenizer95.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strTokenizer95.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        int int40 = strList39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        java.lang.Object[] objArray57 = strList54.toArray();
        boolean boolean58 = strList50.removeAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean59 = strList39.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList50.spliterator();
        boolean boolean61 = strList50.isEmpty();
        boolean boolean62 = strList9.retainAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Iterator<java.lang.String> strItor63 = strList9.iterator();
        boolean boolean65 = strList9.add("");
        strList9.clear();
        java.lang.Object[] objArray67 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream68 = strList9.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strStream68);
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('4');
        java.lang.String str18 = strTokenizer15.toString();
        int int19 = strTokenizer15.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        int int7 = strList5.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.stream();
        boolean boolean13 = strList10.isEmpty();
        char[] charArray14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher15);
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        boolean boolean18 = strList10.equals((java.lang.Object) strArray17);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList10.spliterator();
        java.util.stream.Stream<java.lang.String> strStream20 = strList10.stream();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean34 = strList23.removeAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        boolean boolean45 = strList23.retainAll((java.util.Collection<java.lang.String>) strList44);
        java.util.ListIterator<java.lang.String> strItor46 = strList23.listIterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList49.stream();
        boolean boolean52 = strList49.isEmpty();
        java.lang.Object[] objArray53 = strList49.toArray();
        boolean boolean54 = strList23.addAll((java.util.Collection<java.lang.String>) strList49);
        boolean boolean55 = strList10.removeAll((java.util.Collection<java.lang.String>) strList49);
        boolean boolean56 = strList5.removeAll((java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            strList5.add(6, "StrTokenizer[,");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        java.lang.String str12 = strTokenizer9.next();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer9.reset(charArray14);
        char[] charArray29 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        boolean boolean26 = strList23.add("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        java.lang.Object obj36 = strTokenizer35.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer35.setTrimmerMatcher(strMatcher40);
        int int42 = strTokenizer41.previousIndex();
        boolean boolean43 = strTokenizer41.isIgnoreEmptyTokens();
        boolean boolean44 = strList23.contains((java.lang.Object) strTokenizer41);
        java.lang.String str45 = strTokenizer41.previousToken();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        boolean boolean27 = strList24.isEmpty();
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher29);
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        boolean boolean32 = strList24.equals((java.lang.Object) strArray31);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer35.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer35.getTrimmerMatcher();
        boolean boolean56 = strList24.equals((java.lang.Object) strTokenizer35);
        boolean boolean57 = strList2.retainAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setQuoteChar('4');
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer66.reset(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        int int84 = strList2.indexOf((java.lang.Object) charArray70);
        boolean boolean85 = strList2.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getDelimiterMatcher();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer26.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher21, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "444 ");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer47.add("StrTokenizer[StrTokenizer[, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        boolean boolean21 = strTokenizer20.hasPrevious();
        boolean boolean22 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getDelimiterMatcher();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int44 = strMatcher23.isMatch(charArray25, (int) (byte) 100, 5, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        java.lang.Object obj10 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer3.setDelimiterString("StrTokenizer[");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setIgnoredChar('4');
        boolean boolean27 = strTokenizer26.isEmptyTokenAsNull();
        boolean boolean28 = strTokenizer26.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer12.setTrimmerMatcher(strMatcher31);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer49.add("StrTokenizer[a]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean40 = strTokenizer39.hasNext();
        java.lang.String str41 = strTokenizer39.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer50.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer39.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        boolean boolean68 = strList31.remove((java.lang.Object) charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "444 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("444 ", "#");
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean3 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer4.setTrimmerMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer2.setQuoteMatcher(strMatcher15);
        java.lang.String str18 = strTokenizer2.previousToken();
        boolean boolean19 = strTokenizer2.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer21.setTrimmerMatcher(strMatcher32);
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer33.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher44, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer2.setQuoteMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer2.reset("   ");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]", strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        boolean boolean13 = strTokenizer9.isEmptyTokenAsNull();
        java.lang.String str14 = strTokenizer9.toString();
        java.lang.Object obj15 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer9.reset();
        int int17 = strTokenizer16.previousIndex();
        java.lang.String str18 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher19);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        boolean boolean10 = strList2.isEmpty();
        int int11 = strList2.size();
        java.lang.Object obj12 = null;
        boolean boolean13 = strList2.remove(obj12);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getTrimmerMatcher();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher5, strMatcher13);
        java.lang.Object obj16 = strTokenizer15.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.reset("hi!");
        java.util.List<java.lang.String> strList19 = strTokenizer15.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator20 = strList19.spliterator();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strSpliterator20);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        int int16 = strList9.size();
        int int17 = strList9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor19 = strList9.listIterator(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher83, strMatcher84);
        int int87 = strMatcher36.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[, ]");
        java.lang.String str92 = strTokenizer91.previousToken();
        boolean boolean93 = strTokenizer91.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer91.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer89.setDelimiterMatcher(strMatcher94);
        java.lang.Class<?> wildcardClass96 = strTokenizer95.getClass();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer3.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer3.setIgnoredMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean35 = strTokenizer34.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer36.setTrimmerMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.setQuoteMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer32.setTrimmerMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer2.setIgnoredMatcher(strMatcher47);
        boolean boolean52 = strTokenizer51.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer51.nextToken();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[, ]" + "'", str53, "StrTokenizer[, ]");
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        java.util.stream.Stream<java.lang.String> strStream26 = strList23.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList29.isEmpty();
        java.lang.Object[] objArray32 = strList29.toArray();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setIgnoredChar('4');
        int int45 = strTokenizer44.nextIndex();
        boolean boolean46 = strList36.equals((java.lang.Object) int45);
        boolean boolean47 = strList29.containsAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList36.spliterator();
        java.util.stream.Stream<java.lang.String> strStream49 = strList36.stream();
        boolean boolean50 = strList23.retainAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        boolean boolean57 = strList56.isEmpty();
        boolean boolean58 = strList56.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        java.util.ListIterator<java.lang.String> strItor70 = strList68.listIterator((int) (short) 0);
        boolean boolean71 = strList56.containsAll((java.util.Collection<java.lang.String>) strList68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher78, strMatcher79);
        java.lang.String str81 = strTokenizer80.toString();
        java.util.List<java.lang.String> strList82 = strTokenizer80.getTokenList();
        java.lang.Object obj83 = null;
        boolean boolean84 = strList82.remove(obj83);
        boolean boolean86 = strList82.add("StrTokenizer[not tokenized yet]");
        boolean boolean87 = strList76.containsAll((java.util.Collection<java.lang.String>) strList82);
        boolean boolean88 = strList56.retainAll((java.util.Collection<java.lang.String>) strList82);
        boolean boolean89 = strList36.addAll((java.util.Collection<java.lang.String>) strList56);
        strList36.clear();
        java.util.stream.Stream<java.lang.String> strStream91 = strList36.parallelStream();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator92 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList36.replaceAll(strUnaryOperator92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str81, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strStream91);
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        int int34 = strList21.size();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("hi!");
        int int44 = strTokenizer41.nextIndex();
        boolean boolean45 = strList37.equals((java.lang.Object) int44);
        strList37.clear();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList49.stream();
        boolean boolean52 = strList49.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset("hi!");
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        char[] charArray61 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '#', '#');
        int int76 = strList59.lastIndexOf((java.lang.Object) strTokenizer75);
        int int77 = strList59.size();
        boolean boolean78 = strList49.retainAll((java.util.Collection<java.lang.String>) strList59);
        int int79 = strList37.indexOf((java.lang.Object) strList59);
        boolean boolean80 = strList21.retainAll((java.util.Collection<java.lang.String>) strList59);
        strList21.clear();
        int int82 = strList21.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor84 = strList21.listIterator((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String[] strArray6 = strTokenizer3.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.reset("StrTokenizer[]");
        int int9 = strTokenizer8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setTrimmerMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("");
        java.lang.Object obj37 = strTokenizer36.clone();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setIgnoredChar('4');
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        int int75 = strMatcher60.isMatch(charArray64, 1, 1, (int) ' ');
        char[] charArray76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher60, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer36.reset(charArray42);
        int int89 = strMatcher27.isMatch(charArray42, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterString("#a");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        java.lang.Object obj27 = strTokenizer26.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.setDelimiterMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer26.setQuoteMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setEmptyTokenAsNull(true);
        boolean boolean45 = strList2.remove((java.lang.Object) strTokenizer41);
        boolean boolean47 = strList2.add("StrTokenizer[not tokenized yet]");
        int int48 = strList2.size();
        strList2.clear();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset("StrTokenizer[StrTokenizer[not tokenized yet]]");
        boolean boolean57 = strTokenizer54.hasNext();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer5.setQuoteChar(' ');
        java.lang.String str15 = strTokenizer5.getContent();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('4');
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream19 = strList18.stream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strStream19);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        java.lang.String str10 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setDelimiterChar('#');
        java.lang.String str13 = strTokenizer12.toString();
        char[] charArray14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoredMatcher(strMatcher17);
        int int19 = strTokenizer16.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer23.setDelimiterMatcher(strMatcher29);
        int int31 = strTokenizer30.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setIgnoredChar('4');
        java.lang.String str38 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer35.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer16.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer12.setTrimmerMatcher(strMatcher39);
        java.util.List<java.lang.String> strList42 = strTokenizer12.getTokenList();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[hi!]" + "'", str13, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        java.util.ListIterator<java.lang.String> strItor39 = strList5.listIterator((int) (short) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor39);
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(false);
        java.lang.String str31 = strTokenizer28.next();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer47.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setQuoteChar('4');
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.reset(charArray56);
        int int71 = strMatcher42.isMatch(charArray56, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer16.setDelimiterMatcher(strMatcher77);
        java.lang.String str79 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer16.setDelimiterString("StrTokenizer[not");
        java.lang.Class<?> wildcardClass82 = strTokenizer81.getClass();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "StrTokenizer[hi!]" + "'", str79, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        boolean boolean46 = strTokenizer45.isEmptyTokenAsNull();
        boolean boolean47 = strTokenizer45.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.reset("StrTokenizer[h]");
        java.lang.Object obj50 = strTokenizer45.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        java.lang.Object obj14 = strTokenizer13.clone();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        java.util.ListIterator<java.lang.String> strItor17 = strList15.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor18 = strList15.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int21 = strList15.indexOf((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer22.setTrimmerMatcher(strMatcher33);
        int int35 = strList15.indexOf((java.lang.Object) strTokenizer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("");
        java.lang.Object obj44 = strTokenizer43.clone();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        int int46 = strList45.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        int int57 = strList56.size();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.stream();
        java.lang.Object[] objArray63 = strList60.toArray();
        boolean boolean64 = strList56.removeAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean65 = strList45.containsAll((java.util.Collection<java.lang.String>) strList56);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList56.spliterator();
        boolean boolean67 = strList56.isEmpty();
        boolean boolean68 = strList15.retainAll((java.util.Collection<java.lang.String>) strList56);
        java.util.Iterator<java.lang.String> strItor69 = strList15.iterator();
        boolean boolean70 = strList4.retainAll((java.util.Collection<java.lang.String>) strList15);
        boolean boolean71 = strList15.isEmpty();
        java.util.Iterator<java.lang.String> strItor72 = strList15.iterator();
        int int73 = strList15.size();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset("StrTokenizer[StrTokenizer[not tokenized yet]]");
        int int57 = strTokenizer54.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer54.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        java.lang.Object obj4 = strTokenizer2.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setQuoteChar('4');
        int int9 = strTokenizer6.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        boolean boolean23 = strTokenizer20.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer6.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher26);
        int int28 = strTokenizer27.nextIndex();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer12.setDelimiterMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer24.getContent();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        boolean boolean31 = strTokenizer30.hasPrevious();
        int int32 = strTokenizer30.nextIndex();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer30.reset(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("");
        java.util.List<java.lang.String> strList50 = strTokenizer47.getTokenList();
        java.lang.String[] strArray51 = strTokenizer47.getTokenArray();
        int int52 = strList26.lastIndexOf((java.lang.Object) strTokenizer47);
        strList26.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        java.util.ListIterator<java.lang.String> strItor70 = strList68.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor71 = strList68.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int74 = strList68.indexOf((java.lang.Object) strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer57.setDelimiterMatcher(strMatcher73);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        strList76.clear();
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList76.spliterator();
        boolean boolean79 = strList76.isEmpty();
        boolean boolean80 = strList26.containsAll((java.util.Collection<java.lang.String>) strList76);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor7 = strList5.listIterator((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setIgnoredChar('a');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher48, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer19.setIgnoredMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenized yet]");
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        int int78 = strMatcher56.isMatch(charArray58, (int) (short) 1);
        int int82 = strMatcher52.isMatch(charArray58, 0, (int) (short) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setQuoteChar('#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("h", "StrTokenizer[h]");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer2.setIgnoredMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "h" + "'", str25, "h");
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        java.lang.String str62 = strTokenizer59.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer59.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMatcher63);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getQuoteMatcher();
        boolean boolean25 = strTokenizer22.hasPrevious();
        java.lang.String[] strArray26 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer22.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        java.util.List<java.lang.String> strList15 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        java.util.ListIterator<java.lang.String> strItor27 = strList25.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor28 = strList25.listIterator();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        boolean boolean38 = strList25.remove((java.lang.Object) strMatcher35);
        boolean boolean39 = strList15.contains((java.lang.Object) strMatcher35);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.stream.Stream<java.lang.String> strStream44 = strList42.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.lang.Object obj51 = null;
        boolean boolean52 = strList50.remove(obj51);
        boolean boolean53 = strList42.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator54 = strList42.spliterator();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        boolean boolean59 = strList57.isEmpty();
        java.lang.Object[] objArray60 = strList57.toArray();
        java.lang.Object[] objArray61 = strList42.toArray(objArray60);
        char[] charArray63 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher68, strMatcher69);
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        int int83 = strMatcher68.isMatch(charArray72, 1, 1, (int) ' ');
        int int84 = strList42.indexOf((java.lang.Object) ' ');
        java.util.Spliterator<java.lang.String> strSpliterator85 = strList42.spliterator();
        boolean boolean86 = strList15.retainAll((java.util.Collection<java.lang.String>) strList42);
        strList42.clear();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strSpliterator54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str18 = strList13.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        boolean boolean37 = strList13.addAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer41.setDelimiterMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoreEmptyTokens(false);
        boolean boolean51 = strTokenizer48.isEmptyTokenAsNull();
        boolean boolean52 = strList13.contains((java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer48.reset("hi!");
        java.lang.String str55 = strTokenizer48.nextToken();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoredChar('a');
        int int22 = strTokenizer17.previousIndex();
        int int23 = strTokenizer17.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer17.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset("   ");
        boolean boolean22 = strTokenizer21.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = strTokenizer21.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getDelimiterMatcher();
        boolean boolean11 = strTokenizer9.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setEmptyTokenAsNull(true);
        boolean boolean14 = strTokenizer9.hasPrevious();
        java.lang.String str15 = strTokenizer9.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer9.getQuoteMatcher();
        boolean boolean17 = strTokenizer9.isIgnoreEmptyTokens();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        java.lang.Object obj26 = null;
        boolean boolean27 = strList25.remove(obj26);
        boolean boolean28 = strList17.removeAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("");
        java.lang.Object obj37 = strTokenizer36.clone();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        boolean boolean39 = strList17.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.util.ListIterator<java.lang.String> strItor40 = strList38.listIterator();
        int int41 = strList38.size();
        boolean boolean42 = strList13.containsAll((java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("");
        java.lang.Object obj51 = strTokenizer50.clone();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("");
        java.lang.Object obj62 = strTokenizer61.clone();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        int int64 = strList63.size();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.stream();
        java.lang.Object[] objArray70 = strList67.toArray();
        boolean boolean71 = strList63.removeAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean72 = strList52.containsAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList63.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        java.lang.String str78 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("");
        java.lang.Object obj82 = strTokenizer81.clone();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        int int84 = strList83.size();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.stream.Stream<java.lang.String> strStream89 = strList87.stream();
        java.lang.Object[] objArray90 = strList87.toArray();
        boolean boolean91 = strList83.removeAll((java.util.Collection<java.lang.String>) strList87);
        int int92 = strList63.indexOf((java.lang.Object) strList87);
        boolean boolean93 = strList13.containsAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Iterator<java.lang.String> strItor94 = strList63.iterator();
        java.util.stream.Stream<java.lang.String> strStream95 = strList63.stream();
        java.util.stream.Stream<java.lang.String> strStream96 = strList63.stream();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strItor94);
        org.junit.Assert.assertNotNull(strStream95);
        org.junit.Assert.assertNotNull(strStream96);
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj1 = strTokenizer0.clone();
        boolean boolean2 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setQuoteChar('#');
        int int5 = strTokenizer4.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setTrimmerMatcher(strMatcher6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setIgnoreEmptyTokens(true);
        java.lang.Object obj10 = strTokenizer4.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer4.getDelimiterMatcher();
        boolean boolean12 = strTokenizer4.isIgnoreEmptyTokens();
        java.lang.String str13 = strTokenizer4.getContent();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setEmptyTokenAsNull(false);
        java.lang.Object obj15 = strTokenizer14.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        java.lang.Object obj49 = strTokenizer48.clone();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[", 'a', 'a');
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        boolean boolean40 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher11);
        java.lang.String str14 = strTokenizer13.next();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        java.lang.String str2 = strTokenizer1.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setTrimmerMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.setTrimmerMatcher(strMatcher8);
        java.util.List<java.lang.String> strList11 = strTokenizer1.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator12 = strList11.spliterator();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        int int23 = strTokenizer22.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterChar('a');
        char[] charArray39 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer48.reset(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer32.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer22.setTrimmerMatcher(strMatcher67);
        boolean boolean69 = strTokenizer22.isIgnoreEmptyTokens();
        java.lang.String[] strArray70 = strTokenizer22.getTokenArray();
        boolean boolean71 = strList11.remove((java.lang.Object) strTokenizer22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = strList11.remove(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strSpliterator12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList9.spliterator();
        strList9.add(1, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("");
        java.lang.Object obj47 = strTokenizer46.clone();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        java.util.ListIterator<java.lang.String> strItor50 = strList48.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor51 = strList48.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int54 = strList48.indexOf((java.lang.Object) strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer37.setDelimiterMatcher(strMatcher53);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        strList56.clear();
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        boolean boolean59 = strList9.retainAll((java.util.Collection<java.lang.String>) strList56);
        int int60 = strList9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = strList9.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer40.reset();
        int int42 = strTokenizer40.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.setQuoteMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer46.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = strTokenizer46.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[, ]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setQuoteChar(' ');
        boolean boolean6 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor13 = strList5.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        boolean boolean20 = strList19.isEmpty();
        boolean boolean22 = strList19.add("a");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.stream();
        java.lang.Object[] objArray28 = strList25.toArray();
        boolean boolean29 = strList19.addAll((java.util.Collection<java.lang.String>) strList25);
        strList25.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("h");
        boolean boolean33 = strList25.contains((java.lang.Object) "h");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("");
        java.lang.Object obj42 = strTokenizer41.clone();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        java.util.ListIterator<java.lang.String> strItor45 = strList43.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor46 = strList43.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int49 = strList43.indexOf((java.lang.Object) strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer50.setTrimmerMatcher(strMatcher61);
        int int63 = strList43.indexOf((java.lang.Object) strTokenizer62);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset("hi!");
        java.util.List<java.lang.String> strList70 = strTokenizer67.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        java.lang.String str75 = strTokenizer74.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("");
        java.lang.Object obj79 = strTokenizer78.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer78.getQuoteMatcher();
        boolean boolean81 = strList70.contains((java.lang.Object) strMatcher80);
        boolean boolean82 = strList43.retainAll((java.util.Collection<java.lang.String>) strList70);
        java.lang.String str84 = strList43.remove((int) (byte) 0);
        boolean boolean85 = strList43.isEmpty();
        java.util.ListIterator<java.lang.String> strItor86 = strList43.listIterator();
        boolean boolean87 = strList25.addAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean88 = strList5.addAll((java.util.Collection<java.lang.String>) strList43);
        java.util.ListIterator<java.lang.String> strItor89 = strList5.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str75, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strItor89);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        boolean boolean13 = strTokenizer8.isEmptyTokenAsNull();
        int int14 = strTokenizer8.nextIndex();
        java.lang.String[] strArray15 = strTokenizer8.getTokenArray();
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.setEmptyTokenAsNull(true);
        java.lang.String str19 = strTokenizer18.next();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(true);
        int int24 = strTokenizer23.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer0.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer0.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('4');
        int int34 = strTokenizer33.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setQuoteMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        char[] charArray16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setIgnoredMatcher(strMatcher19);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add("StrTokenizer[StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        java.lang.Object obj11 = strTokenizer10.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer10.setQuoteMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer10.getIgnoredMatcher();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer34.reset();
        int int36 = strTokenizer34.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setQuoteMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset("StrTokenizer[hi!]");
        int int42 = strTokenizer41.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.Object obj53 = strTokenizer52.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer57.setDelimiterMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer52.setQuoteMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '#');
        java.lang.String str83 = strTokenizer82.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher70, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer41.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher24, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher24);
        java.util.List<java.lang.String> strList89 = strTokenizer88.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator90 = strList89.spliterator();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str83, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(strSpliterator90);
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str18 = strList13.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        boolean boolean37 = strList13.addAll((java.util.Collection<java.lang.String>) strList25);
        boolean boolean38 = strList13.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setEmptyTokenAsNull(false);
        java.lang.Object obj48 = strTokenizer47.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setQuoteChar('#');
        java.lang.String str51 = strTokenizer50.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setIgnoreEmptyTokens(false);
        int int54 = strList13.lastIndexOf((java.lang.Object) strTokenizer53);
        java.util.Iterator<java.lang.String> strItor55 = strList13.iterator();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.stream.Stream<java.lang.String> strStream60 = strList58.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        java.lang.Object obj67 = null;
        boolean boolean68 = strList66.remove(obj67);
        boolean boolean69 = strList58.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.util.Spliterator<java.lang.String> strSpliterator70 = strList58.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        java.lang.String str75 = strTokenizer74.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer74.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList80 = strTokenizer79.getTokenList();
        boolean boolean81 = strList58.remove((java.lang.Object) strList80);
        boolean boolean82 = strList13.containsAll((java.util.Collection<java.lang.String>) strList80);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator83 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList13.replaceAll(strUnaryOperator83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strSpliterator70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str75, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        int int26 = strTokenizer25.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setDelimiterString("#a444 ");
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        int int63 = strMatcher48.isMatch(charArray52, 1, 1, (int) ' ');
        char[] charArray64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher48, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer25.reset(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        java.lang.Object obj75 = strTokenizer74.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        java.lang.Object obj27 = strTokenizer26.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.setDelimiterMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer26.setQuoteMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setEmptyTokenAsNull(true);
        boolean boolean45 = strList2.remove((java.lang.Object) strTokenizer41);
        boolean boolean47 = strList2.add("StrTokenizer[not tokenized yet]");
        java.util.stream.Stream<java.lang.String> strStream48 = strList2.parallelStream();
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        boolean boolean54 = strTokenizer53.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('a');
        int int59 = strTokenizer56.previousIndex();
        int int60 = strList2.indexOf((java.lang.Object) int59);
        boolean boolean62 = strList2.add("a   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", 'a', 'a');
        java.util.List<java.lang.String> strList68 = strTokenizer67.getTokenList();
        boolean boolean69 = strList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.String>) strList68);
        java.util.stream.Stream<java.lang.String> strStream70 = strList2.stream();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer12.setDelimiterMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer24.getContent();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        java.util.ListIterator<java.lang.String> strItor38 = strList36.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor39 = strList36.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int42 = strList36.indexOf((java.lang.Object) strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer43.setTrimmerMatcher(strMatcher54);
        int int56 = strList36.indexOf((java.lang.Object) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("");
        java.lang.Object obj65 = strTokenizer64.clone();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        int int67 = strList66.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        java.lang.String str72 = strTokenizer71.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setDelimiterString("");
        java.lang.Object obj76 = strTokenizer75.clone();
        java.util.List<java.lang.String> strList77 = strTokenizer75.getTokenList();
        int int78 = strList77.size();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.stream.Stream<java.lang.String> strStream83 = strList81.stream();
        java.lang.Object[] objArray84 = strList81.toArray();
        boolean boolean85 = strList77.removeAll((java.util.Collection<java.lang.String>) strList81);
        boolean boolean86 = strList66.containsAll((java.util.Collection<java.lang.String>) strList77);
        java.util.Spliterator<java.lang.String> strSpliterator87 = strList77.spliterator();
        boolean boolean88 = strList77.isEmpty();
        boolean boolean89 = strList36.retainAll((java.util.Collection<java.lang.String>) strList77);
        java.util.Iterator<java.lang.String> strItor90 = strList36.iterator();
        boolean boolean92 = strList36.add("");
        boolean boolean93 = strList26.removeAll((java.util.Collection<java.lang.String>) strList36);
        java.util.stream.Stream<java.lang.String> strStream94 = strList26.stream();
        java.util.stream.Stream<java.lang.String> strStream95 = strList26.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList98 = strList26.subList(0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str72, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strStream94);
        org.junit.Assert.assertNotNull(strStream95);
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer23.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer12.setTrimmerMatcher(strMatcher64);
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        int int26 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer10.setQuoteChar('a');
        java.lang.String str29 = strTokenizer28.getContent();
        java.lang.String str30 = strTokenizer28.nextToken();
        java.lang.String str31 = strTokenizer28.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer28.add("StrTokenizer[not");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[hi!]" + "'", str31, "StrTokenizer[hi!]");
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        boolean boolean30 = strList27.isEmpty();
        java.lang.Object[] objArray31 = strList27.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator32 = strList27.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator33 = strList27.spliterator();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        int int41 = strList39.size();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        boolean boolean47 = strList44.isEmpty();
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher49);
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        boolean boolean52 = strList44.equals((java.lang.Object) strArray51);
        java.util.Spliterator<java.lang.String> strSpliterator53 = strList44.spliterator();
        java.util.stream.Stream<java.lang.String> strStream54 = strList44.stream();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        java.lang.Object obj66 = null;
        boolean boolean67 = strList65.remove(obj66);
        boolean boolean68 = strList57.removeAll((java.util.Collection<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        java.lang.String str73 = strTokenizer72.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterString("");
        java.lang.Object obj77 = strTokenizer76.clone();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        boolean boolean79 = strList57.retainAll((java.util.Collection<java.lang.String>) strList78);
        java.util.ListIterator<java.lang.String> strItor80 = strList57.listIterator();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.stream.Stream<java.lang.String> strStream85 = strList83.stream();
        boolean boolean86 = strList83.isEmpty();
        java.lang.Object[] objArray87 = strList83.toArray();
        boolean boolean88 = strList57.addAll((java.util.Collection<java.lang.String>) strList83);
        boolean boolean89 = strList44.removeAll((java.util.Collection<java.lang.String>) strList83);
        boolean boolean90 = strList39.removeAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean91 = strList27.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.Spliterator<java.lang.String> strSpliterator92 = strList27.spliterator();
        boolean boolean94 = strList27.add("StrTokenizer[]");
        boolean boolean95 = strList23.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean96 = strList27.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream97 = strList27.stream();
        int int98 = strList27.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator32);
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSpliterator53);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str73, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strStream97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 6 + "'", int98 == 6);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher4, strMatcher15);
        java.lang.String str17 = strTokenizer16.getContent();
        int int18 = strTokenizer16.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[]" + "'", str17, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        int int3 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset();
        java.lang.String str5 = strTokenizer4.previousToken();
        boolean boolean6 = strTokenizer4.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setIgnoreEmptyTokens(false);
        java.util.List<java.lang.String> strList9 = strTokenizer4.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream10 = strList9.parallelStream();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strStream10);
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar('#');
        java.lang.String str12 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray15 = strTokenizer11.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str18 = strTokenizer17.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setIgnoreEmptyTokens(false);
        java.lang.String str32 = strTokenizer29.next();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer29.setIgnoredMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer48.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setQuoteChar('4');
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer53.reset(charArray57);
        int int72 = strMatcher43.isMatch(charArray57, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer17.reset(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer11.reset(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[a]" + "'", str18, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar(' ');
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher11);
        int int13 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        java.lang.String str15 = strTokenizer12.nextToken();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        int int50 = strMatcher35.isMatch(charArray39, 1, 1, (int) ' ');
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher35, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer12.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer9.setDelimiterMatcher(strMatcher54);
        java.util.List<java.lang.String> strList58 = strTokenizer9.getTokenList();
        java.lang.String str59 = strTokenizer9.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer9.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher60);
        boolean boolean62 = strTokenizer61.hasNext();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        java.lang.Object obj14 = strTokenizer13.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar('#');
        java.lang.String str17 = strTokenizer16.next();
        int int18 = strList2.lastIndexOf((java.lang.Object) strTokenizer16);
        java.lang.String str19 = strTokenizer16.previous();
        java.lang.String[] strArray20 = strTokenizer16.getTokenArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer3.reset("StrTokenizer[not tokenized yet]");
        java.lang.Object obj16 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset("StrTokenizer[h]");
        boolean boolean19 = strTokenizer3.hasPrevious();
        java.util.List<java.lang.String> strList20 = strTokenizer3.getTokenList();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strList20);
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.nextIndex();
        boolean boolean15 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setQuoteChar('a');
        boolean boolean18 = strTokenizer12.hasNext();
        int int19 = strList2.lastIndexOf((java.lang.Object) strTokenizer12);
        java.util.List<java.lang.String> strList20 = strTokenizer12.getTokenList();
        int int21 = strList20.size();
        java.lang.String str24 = strList20.set((int) (byte) 0, "#");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        java.lang.Object obj36 = null;
        boolean boolean37 = strList35.remove(obj36);
        boolean boolean38 = strList27.removeAll((java.util.Collection<java.lang.String>) strList35);
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList27.spliterator();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = strList42.isEmpty();
        java.lang.Object[] objArray45 = strList42.toArray();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        boolean boolean55 = strTokenizer54.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setIgnoredChar('4');
        int int58 = strTokenizer57.nextIndex();
        boolean boolean59 = strList49.equals((java.lang.Object) int58);
        boolean boolean60 = strList42.containsAll((java.util.Collection<java.lang.String>) strList49);
        boolean boolean61 = strList27.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String str63 = strList49.remove(1);
        boolean boolean64 = strList20.addAll((java.util.Collection<java.lang.String>) strList49);
        java.util.stream.Stream<java.lang.String> strStream65 = strList20.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[hi!]" + "'", str63, "StrTokenizer[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strStream65);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        java.lang.String str3 = strTokenizer2.previousToken();
        char[] charArray4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        int int8 = strTokenizer7.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getIgnoredMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        int int31 = strMatcher16.isMatch(charArray20, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        int int39 = strMatcher9.isMatch(charArray20, 3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer2.setQuoteMatcher(strMatcher9);
        java.lang.Object obj41 = strTokenizer2.clone();
        java.lang.Object obj42 = strTokenizer2.clone();
        java.lang.String str43 = strTokenizer2.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[#a444 ]" + "'", str43, "StrTokenizer[#a444 ]");
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        int int2 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getQuoteMatcher();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer8.reset(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher27);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        int int48 = strMatcher27.isMatch(charArray30, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int52 = strMatcher5.isMatch(charArray30, 9, 4, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        int int23 = strMatcher8.isMatch(charArray12, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(",", strMatcher31);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        boolean boolean13 = strTokenizer0.hasPrevious();
        java.lang.String str14 = strTokenizer0.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer17.reset(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer0.setDelimiterMatcher(strMatcher41);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[]" + "'", str14, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar(' ');
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher11);
        int int13 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        java.lang.String str15 = strTokenizer12.nextToken();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        int int50 = strMatcher35.isMatch(charArray39, 1, 1, (int) ' ');
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher35, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer12.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer9.setDelimiterMatcher(strMatcher54);
        java.util.List<java.lang.String> strList58 = strTokenizer9.getTokenList();
        java.lang.String str59 = strTokenizer9.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer9.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        java.lang.String str63 = strTokenizer61.previousToken();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        int int15 = strTokenizer14.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        java.lang.Object obj14 = strTokenizer13.clone();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        int int16 = strList15.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("");
        java.lang.Object obj25 = strTokenizer24.clone();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        int int27 = strList26.size();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.stream.Stream<java.lang.String> strStream32 = strList30.stream();
        java.lang.Object[] objArray33 = strList30.toArray();
        boolean boolean34 = strList26.removeAll((java.util.Collection<java.lang.String>) strList30);
        boolean boolean35 = strList15.containsAll((java.util.Collection<java.lang.String>) strList26);
        java.util.Spliterator<java.lang.String> strSpliterator36 = strList26.spliterator();
        boolean boolean37 = strList2.addAll((int) (byte) 0, (java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        int int48 = strList47.size();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.stream();
        java.lang.Object[] objArray54 = strList51.toArray();
        boolean boolean55 = strList47.removeAll((java.util.Collection<java.lang.String>) strList51);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        boolean boolean65 = strTokenizer64.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.setIgnoredChar('4');
        int int68 = strTokenizer67.nextIndex();
        boolean boolean69 = strList59.equals((java.lang.Object) int68);
        int int70 = strList59.size();
        boolean boolean71 = strList47.retainAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean73 = strList47.equals((java.lang.Object) 100L);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        boolean boolean76 = strTokenizer75.isEmptyTokenAsNull();
        boolean boolean77 = strTokenizer75.hasNext();
        java.lang.Object obj78 = strTokenizer75.clone();
        boolean boolean79 = strTokenizer75.isEmptyTokenAsNull();
        boolean boolean80 = strList47.contains((java.lang.Object) boolean79);
        boolean boolean81 = strList26.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.util.stream.Stream<java.lang.String> strStream82 = strList47.stream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.Object[] objArray6 = strList2.toArray();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        int int28 = strMatcher13.isMatch(charArray17, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList34 = strTokenizer33.getTokenList();
        strList34.clear();
        int int36 = strList2.indexOf((java.lang.Object) strList34);
        java.util.Iterator<java.lang.String> strItor37 = strList2.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        boolean boolean47 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.setTrimmerMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer41.setIgnoredChar(' ');
        java.lang.Object obj55 = strTokenizer41.clone();
        boolean boolean56 = strList2.remove((java.lang.Object) strTokenizer41);
        int int57 = strList2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        strList62.clear();
        strList62.clear();
        strList62.clear();
        boolean boolean66 = strList2.removeAll((java.util.Collection<java.lang.String>) strList62);
        int int67 = strList2.size();
        java.lang.Object[] objArray68 = strList2.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer2.reset(charArray4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = strTokenizer22.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getQuoteMatcher();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "hi!");
        int int42 = strMatcher25.isMatch(charArray27, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer15.setDelimiterMatcher(strMatcher25);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setIgnoredMatcher(strMatcher48);
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        int int71 = strMatcher56.isMatch(charArray60, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        java.lang.String str77 = strTokenizer76.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer76.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher48, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer15.setTrimmerMatcher(strMatcher48);
        int int83 = strTokenizer82.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.reset();
        boolean boolean85 = strTokenizer84.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str77, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        int int5 = strTokenizer3.nextIndex();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.reset(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        java.util.ListIterator<java.lang.String> strItor24 = strList23.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator25 = strList23.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator26 = strList23.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList34 = strTokenizer33.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator35 = strList34.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setQuoteChar('4');
        int int47 = strTokenizer46.previousIndex();
        boolean boolean48 = strTokenizer46.isEmptyTokenAsNull();
        java.lang.Object obj49 = strTokenizer46.clone();
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer46.reset(charArray51);
        boolean boolean61 = strList34.equals((java.lang.Object) charArray51);
        boolean boolean62 = strList23.containsAll((java.util.Collection<java.lang.String>) strList34);
        java.util.stream.Stream<java.lang.String> strStream63 = strList34.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = strList34.set(8, "StrTokenizer[h]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strSpliterator25);
        org.junit.Assert.assertNotNull(strSpliterator26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getIgnoredMatcher();
        boolean boolean42 = strTokenizer40.isEmptyTokenAsNull();
        java.lang.String str43 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]");
        java.lang.String str46 = strTokenizer45.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer40.setDelimiterMatcher(strMatcher47);
        int int49 = strList23.indexOf((java.lang.Object) strTokenizer40);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[a]" + "'", str46, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.lang.Object obj5 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setQuoteChar('#');
        java.lang.String str8 = strTokenizer7.next();
        java.lang.Object obj9 = strTokenizer7.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer14.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer3.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setTrimmerMatcher(strMatcher26);
        boolean boolean28 = strTokenizer23.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        int int26 = strList2.lastIndexOf((java.lang.Object) charArray13);
        java.lang.Object[] objArray27 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        int int39 = strTokenizer38.previousIndex();
        boolean boolean40 = strTokenizer38.isIgnoreEmptyTokens();
        int int41 = strTokenizer38.nextIndex();
        boolean boolean42 = strList2.equals((java.lang.Object) int41);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        java.lang.Object obj54 = null;
        boolean boolean55 = strList53.remove(obj54);
        boolean boolean56 = strList45.removeAll((java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("");
        java.lang.Object obj65 = strTokenizer64.clone();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        boolean boolean67 = strList45.retainAll((java.util.Collection<java.lang.String>) strList66);
        java.util.ListIterator<java.lang.String> strItor68 = strList66.listIterator();
        int int69 = strList66.size();
        java.util.Spliterator<java.lang.String> strSpliterator70 = strList66.spliterator();
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "StrTokenizer[not tokenized yet]");
        int int88 = strList66.lastIndexOf((java.lang.Object) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        java.lang.String str92 = strTokenizer91.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer91.getTrimmerMatcher();
        boolean boolean94 = strList66.remove((java.lang.Object) strTokenizer91);
        java.util.stream.Stream<java.lang.String> strStream95 = strList66.parallelStream();
        boolean boolean96 = strList2.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.util.stream.Stream<java.lang.String> strStream97 = strList66.stream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strSpliterator70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strStream97);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj1 = strTokenizer0.clone();
        boolean boolean2 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer0.setQuoteChar('#');
        boolean boolean5 = strTokenizer0.hasPrevious();
        boolean boolean6 = strTokenizer0.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertEquals(obj1.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj1), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('a');
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        java.util.Collection<java.lang.String> strCollection22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = strList21.addAll(strCollection22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#a444 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoreEmptyTokens(false);
        java.lang.String str18 = strTokenizer15.next();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer15.setIgnoredMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher29, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer33.setIgnoredMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher2, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset("StrTokenizer[h]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '#', '4');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        boolean boolean20 = strList2.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean34 = strList23.removeAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator35 = strList23.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList45 = strTokenizer44.getTokenList();
        boolean boolean46 = strList23.remove((java.lang.Object) strList45);
        java.util.ListIterator<java.lang.String> strItor47 = strList23.listIterator();
        boolean boolean48 = strList9.addAll((java.util.Collection<java.lang.String>) strList23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = strList23.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[,", "hi!");
        int int3 = strTokenizer2.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("trTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer2.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        boolean boolean11 = strTokenizer10.isIgnoreEmptyTokens();
        int int12 = strTokenizer10.previousIndex();
        int int13 = strTokenizer10.size();
        int int14 = strTokenizer10.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[]");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        int int28 = strMatcher13.isMatch(charArray17, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', 'a');
        int int45 = strMatcher5.isMatch(charArray17, 2, (int) ' ', 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.nextIndex();
        boolean boolean15 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setQuoteChar('a');
        boolean boolean18 = strTokenizer12.hasNext();
        int int19 = strList2.lastIndexOf((java.lang.Object) strTokenizer12);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher27);
        boolean boolean29 = strList22.remove((java.lang.Object) strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int33 = strList22.lastIndexOf((java.lang.Object) '4');
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        boolean boolean39 = strList36.isEmpty();
        java.lang.Object[] objArray40 = strList36.toArray();
        java.lang.String[] strArray46 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = strList36.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList47.parallelStream();
        boolean boolean51 = strList22.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.lang.String str53 = strList47.get((int) (byte) 0);
        boolean boolean54 = strList2.removeAll((java.util.Collection<java.lang.String>) strList47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setIgnoreEmptyTokens(false);
        int int71 = strList57.indexOf((java.lang.Object) strTokenizer68);
        java.util.ListIterator<java.lang.String> strItor72 = strList57.listIterator();
        int int73 = strList47.indexOf((java.lang.Object) strItor72);
        java.util.ListIterator<java.lang.String> strItor75 = strList47.listIterator(2);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList47.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strSpliterator76);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        java.util.List<java.lang.String> strList17 = strTokenizer16.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream18 = strList17.stream();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setIgnoreEmptyTokens(false);
        int int34 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean37 = strTokenizer36.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray40 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer38.setTrimmerMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer36.setQuoteMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer33.setTrimmerMatcher(strMatcher49);
        int int53 = strList17.indexOf((java.lang.Object) strTokenizer33);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteMatcher(strMatcher9);
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        int int26 = strMatcher9.isMatch(charArray13, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(false);
        java.lang.String str40 = strTokenizer37.next();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setQuoteChar('4');
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer61.reset(charArray65);
        int int80 = strMatcher51.isMatch(charArray65, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        boolean boolean85 = strTokenizer84.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer84.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setIgnoredChar(' ');
        java.lang.String str90 = strTokenizer89.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher51, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ', '#');
        int int96 = strTokenizer95.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer95.getQuoteMatcher();
        int int98 = strTokenizer95.size();
        boolean boolean99 = strTokenizer95.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "StrTokenizer[hi!]" + "'", str90, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        boolean boolean26 = strTokenizer10.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList27 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str32 = strTokenizer31.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getTrimmerMatcher();
        boolean boolean34 = strList27.remove((java.lang.Object) strTokenizer31);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        java.lang.Object obj46 = null;
        boolean boolean47 = strList45.remove(obj46);
        boolean boolean48 = strList37.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList37.spliterator();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        boolean boolean54 = strList52.isEmpty();
        java.lang.Object[] objArray55 = strList52.toArray();
        java.lang.Object[] objArray56 = strList37.toArray(objArray55);
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        int int78 = strMatcher63.isMatch(charArray67, 1, 1, (int) ' ');
        int int79 = strList37.indexOf((java.lang.Object) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer();
        java.lang.String str81 = strTokenizer80.getContent();
        boolean boolean82 = strList37.contains((java.lang.Object) strTokenizer80);
        boolean boolean84 = strList37.add("");
        boolean boolean85 = strList27.retainAll((java.util.Collection<java.lang.String>) strList37);
        java.util.Iterator<java.lang.String> strItor86 = strList27.iterator();
        java.lang.Object[] objArray87 = strList27.toArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]]", 'a', 'a');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        java.lang.String str14 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher53);
        int int57 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer8.reset();
        boolean boolean59 = strTokenizer58.hasPrevious();
        char[] charArray61 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer58.setTrimmerMatcher(strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer80.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer83.set("StrTokenizer[StrTokenizer[a]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getQuoteMatcher();
        java.lang.String str12 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setIgnoredChar(' ');
        java.lang.Object obj15 = strTokenizer14.clone();
        java.lang.String str16 = strTokenizer14.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        boolean boolean29 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream31 = strList30.stream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strStream31);
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", "StrTokenizer[");
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strList24.equals((java.lang.Object) int33);
        boolean boolean35 = strList17.containsAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean36 = strList2.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.ListIterator<java.lang.String> strItor38 = strList2.listIterator((int) (short) 0);
        strList2.add((int) (byte) 1, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        java.util.stream.Stream<java.lang.String> strStream42 = strList2.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList45 = strList2.subList(9, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(9) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strStream42);
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.set("StrTokenizer[StrTokenizer[]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer0.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer0.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('4');
        char[] charArray34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.setIgnoredMatcher(strMatcher37);
        int int39 = strTokenizer33.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]", ' ');
        int int3 = strTokenizer2.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strList25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        int int37 = strList36.size();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.stream();
        java.lang.Object[] objArray43 = strList40.toArray();
        boolean boolean44 = strList36.removeAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean45 = strList25.containsAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList36.spliterator();
        boolean boolean47 = strList4.containsAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        int int58 = strList57.size();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        java.lang.Object[] objArray64 = strList61.toArray();
        boolean boolean65 = strList57.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        boolean boolean75 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredChar('4');
        int int78 = strTokenizer77.nextIndex();
        boolean boolean79 = strList69.equals((java.lang.Object) int78);
        int int80 = strList69.size();
        boolean boolean81 = strList57.retainAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean82 = strList57.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream83 = strList57.stream();
        boolean boolean84 = strList36.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.Object obj85 = null;
        int int86 = strList36.lastIndexOf(obj85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList89 = strList36.subList((int) (byte) -1, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor20 = strList17.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int23 = strList17.indexOf((java.lang.Object) strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer6.setDelimiterMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer2.setIgnoredMatcher(strMatcher25);
        java.lang.String str27 = strTokenizer2.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer2.getQuoteMatcher();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        int int39 = strTokenizer38.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setIgnoredMatcher(strMatcher40);
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]", strMatcher28, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher45);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#", "StrTokenizer[]");
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        boolean boolean58 = strTokenizer57.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer57.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean8 = strList5.add("a");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.stream.Stream<java.lang.String> strStream13 = strList11.stream();
        java.lang.Object[] objArray14 = strList11.toArray();
        boolean boolean15 = strList5.addAll((java.util.Collection<java.lang.String>) strList11);
        java.util.ListIterator<java.lang.String> strItor16 = strList11.listIterator();
        java.util.ListIterator<java.lang.String> strItor18 = strList11.listIterator(0);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList11.spliterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strSpliterator19);
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]", '4', '4');
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        boolean boolean33 = strList9.add("StrTokenizer[a]");
        java.lang.String str35 = strList9.get((int) (short) 0);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        java.lang.Object obj47 = null;
        boolean boolean48 = strList46.remove(obj47);
        boolean boolean49 = strList38.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList38.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        boolean boolean61 = strList38.remove((java.lang.Object) strList60);
        java.util.stream.Stream<java.lang.String> strStream62 = strList38.parallelStream();
        boolean boolean63 = strList9.addAll((java.util.Collection<java.lang.String>) strList38);
        int int64 = strList9.size();
        strList9.clear();
        java.util.Iterator<java.lang.String> strItor66 = strList9.iterator();
        java.lang.Object[] objArray67 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream68 = strList9.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[a]" + "'", str35, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strStream68);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.String str8 = strList2.get((int) (short) 0);
        boolean boolean9 = strList2.isEmpty();
        boolean boolean10 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        boolean boolean17 = strList16.isEmpty();
        boolean boolean18 = strList16.isEmpty();
        boolean boolean19 = strList16.isEmpty();
        boolean boolean20 = strList2.retainAll((java.util.Collection<java.lang.String>) strList16);
        java.util.ListIterator<java.lang.String> strItor21 = strList16.listIterator();
        java.util.ListIterator<java.lang.String> strItor22 = strList16.listIterator();
        java.lang.String str25 = strList16.set((int) (short) 0, ",");
        boolean boolean27 = strList16.add("StrTokenizer[#a444 ]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.lang.Object obj18 = null;
        boolean boolean19 = strList17.remove(obj18);
        boolean boolean20 = strList9.removeAll((java.util.Collection<java.lang.String>) strList17);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList24.isEmpty();
        java.lang.Object[] objArray27 = strList24.toArray();
        java.lang.Object[] objArray28 = strList9.toArray(objArray27);
        boolean boolean29 = strList2.addAll((java.util.Collection<java.lang.String>) strList9);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        boolean boolean35 = strList9.contains((java.lang.Object) strMatcher34);
        java.util.stream.Stream<java.lang.String> strStream36 = strList9.stream();
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        int int58 = strMatcher43.isMatch(charArray47, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setTrimmerMatcher(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strTokenizer72);
        java.util.Iterator<java.lang.String> strItor74 = strList9.iterator();
        boolean boolean75 = strList9.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a", "StrTokenizer[h]");
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer68.reset(charArray70);
        int int87 = strMatcher36.isMatch(charArray70, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher94);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher1);
        int int3 = strTokenizer2.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setQuoteChar(' ');
        java.lang.String str19 = strTokenizer18.next();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer18.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "a" + "'", str19, "a");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getTrimmerMatcher();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher5, strMatcher13);
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream17 = strList16.stream();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        java.lang.Object obj29 = null;
        boolean boolean30 = strList28.remove(obj29);
        boolean boolean31 = strList20.removeAll((java.util.Collection<java.lang.String>) strList28);
        java.util.Spliterator<java.lang.String> strSpliterator32 = strList20.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        boolean boolean43 = strList20.remove((java.lang.Object) strList42);
        java.util.Iterator<java.lang.String> strItor44 = strList42.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator45 = strList42.spliterator();
        int int46 = strList16.lastIndexOf((java.lang.Object) strList42);
        java.lang.String str49 = strList42.set(0, "StrTokenizer[");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strSpliterator32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strSpliterator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher24.isMatch(charArray66, (int) (short) 100, 0, (int) 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher84, strMatcher85);
        java.lang.String str87 = strTokenizer86.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setDelimiterString("");
        java.lang.Object obj91 = strTokenizer90.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        java.lang.String[] strArray98 = strTokenizer97.getTokenArray();
        java.lang.String str99 = strTokenizer97.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str87, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strArray98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        int int40 = strTokenizer39.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer46.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer46.setDelimiterMatcher(strMatcher52);
        int int54 = strTokenizer53.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoreEmptyTokens(false);
        boolean boolean59 = strTokenizer56.hasPrevious();
        int int60 = strTokenizer56.size();
        java.lang.String str61 = strTokenizer56.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer56.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer42.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getDelimiterMatcher();
        boolean boolean65 = strTokenizer63.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer5.hasPrevious();
        java.lang.Object obj7 = strTokenizer5.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setQuoteChar(' ');
        java.util.List<java.lang.String> strList10 = strTokenizer9.getTokenList();
        java.lang.String str11 = strTokenizer9.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.parallelStream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strList42.size();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.stream();
        java.lang.Object[] objArray49 = strList46.toArray();
        boolean boolean50 = strList42.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor51 = strList42.iterator();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        java.lang.Object obj63 = null;
        boolean boolean64 = strList62.remove(obj63);
        boolean boolean65 = strList54.removeAll((java.util.Collection<java.lang.String>) strList62);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList54.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer70.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        boolean boolean77 = strList54.remove((java.lang.Object) strList76);
        java.util.Iterator<java.lang.String> strItor78 = strList76.iterator();
        boolean boolean79 = strList42.retainAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean80 = strList20.retainAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean81 = strList20.isEmpty();
        boolean boolean83 = strList20.add("StrTokenizer[StrTokenizer[hi!]]");
        strList20.clear();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        boolean boolean17 = strList9.containsAll((java.util.Collection<java.lang.String>) strList16);
        java.util.stream.Stream<java.lang.String> strStream18 = strList9.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("");
        java.lang.Object obj27 = strTokenizer26.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        boolean boolean32 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer26.setDelimiterMatcher(strMatcher35);
        java.util.List<java.lang.String> strList37 = strTokenizer26.getTokenList();
        boolean boolean38 = strList9.retainAll((java.util.Collection<java.lang.String>) strList37);
        int int39 = strList37.size();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        boolean boolean2 = strTokenizer1.isEmptyTokenAsNull();
        boolean boolean3 = strTokenizer1.hasNext();
        java.lang.Object obj4 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setEmptyTokenAsNull(false);
        java.lang.Object obj7 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer1.setDelimiterChar('4');
        boolean boolean10 = strTokenizer9.isEmptyTokenAsNull();
        boolean boolean11 = strTokenizer9.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        java.lang.String str12 = strTokenizer9.next();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer9.reset(charArray14);
        char[] charArray29 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strMatcher32);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.previousIndex();
        java.lang.String str15 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setIgnoreEmptyTokens(false);
        int int18 = strTokenizer17.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[a]" + "'", str15, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.util.stream.Stream<java.lang.String> strStream10 = strList8.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.lang.Object obj17 = null;
        boolean boolean18 = strList16.remove(obj17);
        boolean boolean19 = strList8.removeAll((java.util.Collection<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("");
        java.lang.Object obj28 = strTokenizer27.clone();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        boolean boolean30 = strList8.retainAll((java.util.Collection<java.lang.String>) strList29);
        java.util.ListIterator<java.lang.String> strItor31 = strList8.listIterator();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.stream();
        boolean boolean37 = strList34.isEmpty();
        java.lang.Object[] objArray38 = strList34.toArray();
        boolean boolean39 = strList8.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.stream.Stream<java.lang.String> strStream40 = strList34.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList34.spliterator();
        java.util.stream.Stream<java.lang.String> strStream42 = strList34.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset("hi!");
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '#', '#');
        int int66 = strList49.lastIndexOf((java.lang.Object) strTokenizer65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.reset("StrTokenizer[a]");
        int int69 = strList34.lastIndexOf((java.lang.Object) "StrTokenizer[a]");
        boolean boolean70 = strList5.addAll((java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        java.lang.String str75 = strTokenizer74.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer74.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setQuoteChar('4');
        int int82 = strTokenizer81.previousIndex();
        boolean boolean83 = strTokenizer81.isEmptyTokenAsNull();
        java.lang.Object obj84 = strTokenizer81.clone();
        boolean boolean85 = strTokenizer81.hasPrevious();
        boolean boolean86 = strList5.equals((java.lang.Object) strTokenizer81);
        java.util.Iterator<java.lang.String> strItor87 = strList5.iterator();
        java.util.stream.Stream<java.lang.String> strStream88 = strList5.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strStream10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str75, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertNotNull(strStream88);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer30.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.reset("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        java.lang.String str80 = strTokenizer79.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer79.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer79.setEmptyTokenAsNull(false);
        java.lang.Object obj85 = strTokenizer84.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer84.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer84.setTrimmerMatcher(strMatcher89);
        boolean boolean91 = strTokenizer90.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer73.setQuoteMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getQuoteMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str80, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        boolean boolean42 = strList10.contains((java.lang.Object) strList18);
        java.lang.String str44 = strList10.remove(0);
        strList10.clear();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.stream();
        java.lang.Object[] objArray51 = strList48.toArray();
        java.lang.Object[] objArray52 = strList48.toArray();
        boolean boolean54 = strList48.add("StrTokenizer[a]");
        java.lang.Object[] objArray55 = strList48.toArray();
        boolean boolean56 = strList10.equals((java.lang.Object) objArray55);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, StrTokenizer[a]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, StrTokenizer[a]]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        java.util.ListIterator<java.lang.String> strItor31 = strList20.listIterator();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.parallelStream();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        java.lang.Object obj44 = null;
        boolean boolean45 = strList43.remove(obj44);
        boolean boolean46 = strList35.removeAll((java.util.Collection<java.lang.String>) strList43);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList35.spliterator();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList50.isEmpty();
        java.lang.Object[] objArray53 = strList50.toArray();
        java.lang.Object[] objArray54 = strList35.toArray(objArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        java.lang.String str59 = strTokenizer58.toString();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.lang.Object obj61 = null;
        boolean boolean62 = strList60.remove(obj61);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        boolean boolean67 = strList60.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor69 = strList60.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        java.lang.String str74 = strTokenizer73.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.reset();
        int int76 = strList60.indexOf((java.lang.Object) strTokenizer75);
        boolean boolean77 = strList35.addAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean78 = strList20.retainAll((java.util.Collection<java.lang.String>) strList35);
        // The following exception was thrown during execution in test generation
        try {
            strList35.add(3, "h");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str74, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer3.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer1.setQuoteMatcher(strMatcher14);
        java.lang.String str17 = strTokenizer1.previousToken();
        int int18 = strTokenizer1.size();
        boolean boolean19 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.setDelimiterChar('a');
        boolean boolean22 = strTokenizer1.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        int int26 = strList23.size();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        java.lang.Object obj38 = null;
        boolean boolean39 = strList37.remove(obj38);
        boolean boolean40 = strList29.removeAll((java.util.Collection<java.lang.String>) strList37);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList29.spliterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = strList44.isEmpty();
        java.lang.Object[] objArray47 = strList44.toArray();
        java.lang.String[] strArray50 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        boolean boolean57 = strTokenizer56.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setIgnoredChar('4');
        int int60 = strTokenizer59.nextIndex();
        boolean boolean61 = strList51.equals((java.lang.Object) int60);
        boolean boolean62 = strList44.containsAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean63 = strList29.addAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean64 = strList23.containsAll((java.util.Collection<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer73.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset("");
        int int80 = strList29.indexOf((java.lang.Object) strTokenizer77);
        strList29.add(0, "#a444 ");
        java.lang.String str85 = strList29.remove((int) (byte) 1);
        java.util.Iterator<java.lang.String> strItor86 = strList29.iterator();
        java.util.Iterator<java.lang.String> strItor87 = strList29.iterator();
        boolean boolean89 = strList29.add("#a");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteMatcher(strMatcher9);
        int int12 = strTokenizer3.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer15.setTrimmerMatcher(strMatcher26);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer27.setDelimiterMatcher(strMatcher38);
        int int40 = strTokenizer27.size();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer27.reset(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer14.setTrimmerMatcher(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.setDelimiterMatcher(strMatcher10);
        int int12 = strTokenizer11.nextIndex();
        java.lang.String str13 = strTokenizer11.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getQuoteMatcher();
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        boolean boolean32 = strTokenizer31.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoredChar('a');
        java.lang.String str37 = strTokenizer36.getContent();
        boolean boolean38 = strTokenizer36.hasPrevious();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        boolean boolean41 = strList39.add("StrTokenizer[");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "a" + "'", str37, "a");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        char[] charArray17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoredMatcher(strMatcher20);
        boolean boolean22 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.setDelimiterMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        int int31 = strTokenizer30.nextIndex();
        java.lang.String str32 = strTokenizer30.previousToken();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer30.reset(charArray34);
        int int60 = strMatcher23.isMatch(charArray34, (-1));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar(' ');
        boolean boolean15 = strTokenizer14.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getQuoteMatcher();
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "hi!");
        int int27 = strMatcher10.isMatch(charArray12, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(false);
        java.lang.String str41 = strTokenizer38.next();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer38.setIgnoredMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher10, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterChar('a');
        java.lang.String str58 = strTokenizer57.getContent();
        boolean boolean59 = strTokenizer57.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[a]" + "'", str58, "StrTokenizer[a]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("trTokenizer[hi!]", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray5);
        int int24 = strMatcher3.isMatch(charArray5, (int) '4', (int) (byte) 10, 9);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        java.lang.String str8 = strTokenizer7.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("");
        java.lang.Object obj12 = strTokenizer11.clone();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        java.util.ListIterator<java.lang.String> strItor15 = strList13.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor16 = strList13.listIterator();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        boolean boolean26 = strList13.remove((java.lang.Object) strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[h]", strMatcher1, strMatcher23);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(false);
        int int53 = strTokenizer50.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setDelimiterChar('a');
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.reset(charArray57);
        int int78 = strMatcher19.isMatch(charArray57, (int) (short) 0, (int) ' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterString("not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "StrTokenizer[not tokenized yet]");
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        int int34 = strTokenizer32.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher24);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.lang.Object obj51 = null;
        boolean boolean52 = strList50.remove(obj51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        boolean boolean57 = strList50.contains((java.lang.Object) "");
        boolean boolean58 = strList41.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Iterator<java.lang.String> strItor59 = strList41.iterator();
        java.lang.String[] strArray63 = new java.lang.String[] { "StrTokenizer[hi!]", "", "StrTokenizer[a]" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        strList64.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        char[] charArray74 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher72, strMatcher80);
        java.util.List<java.lang.String> strList83 = strTokenizer82.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream84 = strList83.stream();
        boolean boolean85 = strList64.retainAll((java.util.Collection<java.lang.String>) strList83);
        boolean boolean86 = strList41.removeAll((java.util.Collection<java.lang.String>) strList64);
        int int87 = strList41.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor89 = strList41.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.util.ListIterator<java.lang.String> strItor16 = strList15.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList15.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator18 = strList15.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = strList15.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(strSpliterator18);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoreEmptyTokens(false);
        java.lang.String str28 = strTokenizer25.next();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer25.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setQuoteChar('4');
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer49.reset(charArray53);
        int int68 = strMatcher39.isMatch(charArray53, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "StrTokenizer[hi!]");
        int int77 = strMatcher13.isMatch(charArray53, 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strMatcher78);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        strList2.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setTrimmerMatcher(strMatcher15);
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.Object[] objArray18 = strList2.toArray((java.lang.Object[]) strArray17);
        java.util.Iterator<java.lang.String> strItor19 = strList2.iterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strItor19);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        int int23 = strTokenizer22.previousIndex();
        boolean boolean24 = strTokenizer22.isIgnoreEmptyTokens();
        boolean boolean25 = strTokenizer22.hasPrevious();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer22.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher47, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher62);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer64.add("a   ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        java.lang.String str1 = strTokenizer0.getContent();
        boolean boolean2 = strTokenizer0.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', 'a');
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher62, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer0.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        int int73 = strTokenizer72.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setEmptyTokenAsNull(false);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setIgnoredChar('a');
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        boolean boolean13 = strTokenizer10.hasPrevious();
        int int14 = strTokenizer10.nextIndex();
        java.lang.String str15 = strTokenizer10.nextToken();
        int int16 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer10.reset("StrTokenizer[not");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer10.getDelimiterMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strList24.equals((java.lang.Object) int33);
        boolean boolean35 = strList17.containsAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean36 = strList2.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        boolean boolean42 = strList2.remove((java.lang.Object) strTokenizer40);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList2.spliterator();
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '#');
        java.lang.String str56 = strTokenizer55.toString();
        java.lang.String str57 = strTokenizer55.toString();
        java.lang.String[] strArray58 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer55.reset();
        boolean boolean60 = strList2.remove((java.lang.Object) strTokenizer55);
        java.lang.Object obj61 = strTokenizer55.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer55.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        boolean boolean47 = strList44.isEmpty();
        java.lang.Object[] objArray48 = strList44.toArray();
        boolean boolean49 = strList18.addAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean50 = strList15.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.stream.Stream<java.lang.String> strStream51 = strList15.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("");
        java.lang.Object obj61 = strTokenizer60.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher62);
        boolean boolean64 = strList15.remove((java.lang.Object) strTokenizer63);
        java.util.stream.Stream<java.lang.String> strStream65 = strList15.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strStream65);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        boolean boolean9 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoredChar('4');
        int int12 = strTokenizer11.nextIndex();
        boolean boolean13 = strList3.equals((java.lang.Object) int12);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList3.spliterator();
        java.util.Iterator<java.lang.String> strItor15 = strList3.iterator();
        strList3.add(0, "StrTokenizer[not tokenized yet]");
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList3.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertNotNull(strSpliterator19);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setEmptyTokenAsNull(true);
        boolean boolean14 = strTokenizer10.hasNext();
        java.lang.String str15 = strTokenizer10.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "StrTokenizer[");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setTrimmerMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("StrTokenizer[a]");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer16.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean26 = strTokenizer25.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer27.setTrimmerMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer25.setQuoteMatcher(strMatcher38);
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        int int58 = strMatcher38.isMatch(charArray42, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "a");
        int int64 = strMatcher22.isMatch(charArray42, (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer2.setQuoteMatcher(strMatcher65);
        int int67 = strTokenizer66.previousIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        java.lang.Object obj14 = strTokenizer13.clone();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        java.util.ListIterator<java.lang.String> strItor17 = strList15.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor18 = strList15.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int21 = strList15.indexOf((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer22.setTrimmerMatcher(strMatcher33);
        int int35 = strList15.indexOf((java.lang.Object) strTokenizer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("");
        java.lang.Object obj44 = strTokenizer43.clone();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        int int46 = strList45.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        int int57 = strList56.size();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.stream();
        java.lang.Object[] objArray63 = strList60.toArray();
        boolean boolean64 = strList56.removeAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean65 = strList45.containsAll((java.util.Collection<java.lang.String>) strList56);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList56.spliterator();
        boolean boolean67 = strList56.isEmpty();
        boolean boolean68 = strList15.retainAll((java.util.Collection<java.lang.String>) strList56);
        java.util.Iterator<java.lang.String> strItor69 = strList15.iterator();
        boolean boolean70 = strList4.retainAll((java.util.Collection<java.lang.String>) strList15);
        java.lang.Object[] objArray71 = strList15.toArray();
        strList15.add((int) (byte) 0, "");
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('4');
        int int22 = strTokenizer21.previousIndex();
        boolean boolean23 = strTokenizer21.isIgnoreEmptyTokens();
        boolean boolean24 = strTokenizer21.hasPrevious();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer21.reset(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher46, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int67 = strMatcher10.isMatch(charArray26, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        int int40 = strList39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        java.lang.Object[] objArray57 = strList54.toArray();
        boolean boolean58 = strList50.removeAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean59 = strList39.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList50.spliterator();
        boolean boolean61 = strList50.isEmpty();
        boolean boolean62 = strList9.retainAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Iterator<java.lang.String> strItor63 = strList9.iterator();
        java.util.Iterator<java.lang.String> strItor64 = strList9.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("");
        java.lang.Object obj73 = strTokenizer72.clone();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        java.util.ListIterator<java.lang.String> strItor76 = strList74.listIterator((int) (short) 0);
        boolean boolean77 = strList74.isEmpty();
        java.util.List<java.lang.String> strList80 = strList74.subList((int) (short) 0, (int) (short) 1);
        boolean boolean81 = strList9.addAll((java.util.Collection<java.lang.String>) strList80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        int int84 = strList80.lastIndexOf((java.lang.Object) strTokenizer83);
        boolean boolean86 = strList80.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
        java.util.ListIterator<java.lang.String> strItor88 = strList80.listIterator(1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strItor88);
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", "not tokenized yet]");
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        char[] charArray4 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        java.lang.Class<?> wildcardClass37 = strTokenizer36.getClass();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        int int5 = strTokenizer3.size();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        boolean boolean25 = strTokenizer24.hasNext();
        java.lang.String str26 = strTokenizer24.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer24.setIgnoreEmptyTokens(false);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        int int51 = strTokenizer50.previousIndex();
        boolean boolean52 = strTokenizer50.isIgnoreEmptyTokens();
        boolean boolean53 = strTokenizer50.hasPrevious();
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer50.reset(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher75, strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        int int96 = strMatcher39.isMatch(charArray55, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer28.setTrimmerMatcher(strMatcher39);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "a" + "'", str26, "a");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        java.lang.String str13 = strTokenizer12.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "a" + "'", str13, "a");
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "a");
        int int27 = strMatcher10.isMatch(charArray12, (int) (byte) 0);
        boolean boolean28 = strList2.contains((java.lang.Object) strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        boolean boolean33 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer32.setQuoteMatcher(strMatcher38);
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        int int55 = strMatcher38.isMatch(charArray42, (int) (short) 10);
        int int57 = strMatcher10.isMatch(charArray42, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        java.lang.Cloneable[] cloneableArray7 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[] cloneableArray8 = strList4.toArray(cloneableArray7);
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        int int31 = strMatcher16.isMatch(charArray20, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoredChar(' ');
        int int43 = strTokenizer42.previousIndex();
        int int44 = strTokenizer42.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher45);
        boolean boolean47 = strList4.contains((java.lang.Object) strTokenizer46);
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(cloneableArray7);
        org.junit.Assert.assertNotNull(cloneableArray8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        int int11 = strTokenizer9.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList2.remove((java.lang.Object) strList24);
        java.util.Iterator<java.lang.String> strItor26 = strList24.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        boolean boolean32 = strList29.isEmpty();
        char[] charArray33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher34);
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        boolean boolean37 = strList29.equals((java.lang.Object) strArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator((int) (short) 0);
        boolean boolean50 = strList29.removeAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean51 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        boolean boolean57 = strList54.isEmpty();
        java.lang.Object[] objArray58 = strList54.toArray();
        strList54.clear();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.stream();
        boolean boolean65 = strList62.isEmpty();
        java.lang.Object[] objArray66 = strList62.toArray();
        java.util.stream.Stream<java.lang.String> strStream67 = strList62.stream();
        boolean boolean68 = strList54.containsAll((java.util.Collection<java.lang.String>) strList62);
        java.util.ListIterator<java.lang.String> strItor69 = strList62.listIterator();
        int int70 = strList62.size();
        boolean boolean71 = strList24.removeAll((java.util.Collection<java.lang.String>) strList62);
        java.util.ListIterator<java.lang.String> strItor72 = strList62.listIterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strItor72);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setIgnoredChar('#');
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("a   ");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher39, strMatcher42);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer17.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.set("#a444");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setTrimmerMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("");
        java.lang.Object obj18 = strTokenizer17.clone();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoredChar('4');
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        int int56 = strMatcher41.isMatch(charArray45, 1, 1, (int) ' ');
        char[] charArray57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher41, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer17.reset(charArray23);
        int int70 = strMatcher8.isMatch(charArray23, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer1.reset(charArray23);
        java.lang.String str72 = strTokenizer71.nextToken();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = strList73.set(1, "StrTokenizer[not");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "a" + "'", str72, "a");
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.lang.Object[] objArray30 = strList20.toArray();
        java.util.stream.Stream<java.lang.String> strStream31 = strList20.stream();
        strList20.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strList42.size();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.stream();
        java.lang.Object[] objArray49 = strList46.toArray();
        boolean boolean50 = strList42.removeAll((java.util.Collection<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        boolean boolean55 = strTokenizer54.hasPrevious();
        int int56 = strTokenizer54.nextIndex();
        int int57 = strTokenizer54.previousIndex();
        boolean boolean58 = strList42.remove((java.lang.Object) strTokenizer54);
        strList42.clear();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        boolean boolean64 = strList62.isEmpty();
        strList62.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        java.lang.String str70 = strTokenizer69.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("");
        java.lang.Object obj74 = strTokenizer73.clone();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        int int76 = strTokenizer73.size();
        java.util.List<java.lang.String> strList77 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int79 = strList77.lastIndexOf((java.lang.Object) strMatcher78);
        boolean boolean80 = strList62.retainAll((java.util.Collection<java.lang.String>) strList77);
        boolean boolean81 = strList42.retainAll((java.util.Collection<java.lang.String>) strList62);
        strList42.clear();
        boolean boolean83 = strList42.isEmpty();
        boolean boolean84 = strList20.addAll((java.util.Collection<java.lang.String>) strList42);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setIgnoreEmptyTokens(false);
        int int26 = strTokenizer23.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setDelimiterChar('a');
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer23.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer23.setQuoteMatcher(strMatcher48);
        boolean boolean50 = strList5.remove((java.lang.Object) strMatcher48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList5.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strStream51);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        java.util.ListIterator<java.lang.String> strItor38 = strList36.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor39 = strList36.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int42 = strList36.indexOf((java.lang.Object) strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer25.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer2.reset(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', ' ');
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        java.lang.String str67 = strTokenizer10.nextToken();
        java.lang.Class<?> wildcardClass68 = strTokenizer10.getClass();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "a" + "'", str67, "a");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor14 = strList5.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor26 = strList24.listIterator((int) (short) 0);
        boolean boolean27 = strList24.isEmpty();
        java.util.List<java.lang.String> strList30 = strList24.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList41.remove(obj42);
        boolean boolean44 = strList33.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean55 = strList33.retainAll((java.util.Collection<java.lang.String>) strList54);
        java.util.ListIterator<java.lang.String> strItor56 = strList33.listIterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.stream();
        boolean boolean62 = strList59.isEmpty();
        java.lang.Object[] objArray63 = strList59.toArray();
        boolean boolean64 = strList33.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean65 = strList30.removeAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean66 = strList5.retainAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("");
        java.lang.Object obj75 = strTokenizer74.clone();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        java.util.ListIterator<java.lang.String> strItor78 = strList76.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream79 = strList76.stream();
        boolean boolean80 = strList59.removeAll((java.util.Collection<java.lang.String>) strList76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strList59.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("StrTokenizer[a]");
        boolean boolean15 = strTokenizer12.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer12.setQuoteMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean22 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer23.setTrimmerMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer21.setQuoteMatcher(strMatcher34);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        int int54 = strMatcher34.isMatch(charArray38, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "a");
        int int60 = strMatcher18.isMatch(charArray38, (int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("trTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setDelimiterMatcher(strMatcher6);
        boolean boolean8 = strTokenizer4.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        java.lang.String str33 = strTokenizer32.next();
        boolean boolean34 = strTokenizer32.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList35.replaceAll(strUnaryOperator36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "a" + "'", str33, "a");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        java.lang.Object obj31 = null;
        boolean boolean32 = strList30.remove(obj31);
        boolean boolean33 = strList22.removeAll((java.util.Collection<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("");
        java.lang.Object obj42 = strTokenizer41.clone();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        boolean boolean44 = strList22.retainAll((java.util.Collection<java.lang.String>) strList43);
        java.util.ListIterator<java.lang.String> strItor45 = strList43.listIterator();
        int int46 = strList43.size();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList49.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        java.lang.Object obj58 = null;
        boolean boolean59 = strList57.remove(obj58);
        boolean boolean60 = strList49.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList49.spliterator();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        boolean boolean66 = strList64.isEmpty();
        java.lang.Object[] objArray67 = strList64.toArray();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        boolean boolean77 = strTokenizer76.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer76.setIgnoredChar('4');
        int int80 = strTokenizer79.nextIndex();
        boolean boolean81 = strList71.equals((java.lang.Object) int80);
        boolean boolean82 = strList64.containsAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean83 = strList49.addAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean84 = strList43.containsAll((java.util.Collection<java.lang.String>) strList49);
        char[] charArray85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoreEmptyTokens(true);
        boolean boolean89 = strList49.contains((java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer93.setTrimmerMatcher(strMatcher95);
        int int97 = strList49.indexOf((java.lang.Object) strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer19.setIgnoredMatcher(strMatcher95);
        java.lang.String str99 = strTokenizer98.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "a" + "'", str99, "a");
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setQuoteChar(' ');
        boolean boolean9 = strTokenizer8.hasNext();
        java.lang.Object obj10 = strTokenizer8.clone();
        java.lang.String str11 = strTokenizer8.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        java.lang.String str12 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str15 = strTokenizer14.nextToken();
        char[] charArray16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.reset(charArray16);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "a" + "'", str15, "a");
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        int int12 = strTokenizer3.previousIndex();
        java.util.List<java.lang.String> strList13 = strTokenizer3.getTokenList();
        java.lang.String str14 = strTokenizer3.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.add("not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setTrimmerMatcher(strMatcher71);
        boolean boolean73 = strTokenizer70.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer70.add("StrTokenizer[StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        boolean boolean33 = strList9.add("StrTokenizer[a]");
        java.lang.String str35 = strList9.get((int) (short) 0);
        java.util.Spliterator<java.lang.String> strSpliterator36 = strList9.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setQuoteChar('4');
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer45.reset(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        int int72 = strList9.lastIndexOf((java.lang.Object) strTokenizer71);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[a]" + "'", str35, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strSpliterator36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("StrTokenizer[a]");
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.setQuoteMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer1.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj25 = strTokenizer24.clone();
        boolean boolean26 = strTokenizer24.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer24.setQuoteChar('#');
        int int29 = strTokenizer28.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setIgnoreEmptyTokens(true);
        java.lang.Object obj34 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer37.reset(charArray39);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer37.getIgnoredMatcher();
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "StrTokenizer[not tokenized yet]");
        int int77 = strMatcher56.isMatch(charArray58, (int) (short) 0, 0, 4);
        int int81 = strMatcher35.isMatch(charArray58, (int) (byte) 0, (int) (short) 1, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer1.reset(charArray58);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("");
        java.lang.Object obj39 = strTokenizer38.clone();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        int int41 = strList40.size();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        java.lang.Object[] objArray47 = strList44.toArray();
        boolean boolean48 = strList40.removeAll((java.util.Collection<java.lang.String>) strList44);
        int int49 = strList20.indexOf((java.lang.Object) strList44);
        java.util.ListIterator<java.lang.String> strItor50 = strList44.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("");
        java.lang.Object obj59 = strTokenizer58.clone();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        int int61 = strList60.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("");
        java.lang.Object obj70 = strTokenizer69.clone();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        int int72 = strList71.size();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.stream.Stream<java.lang.String> strStream77 = strList75.stream();
        java.lang.Object[] objArray78 = strList75.toArray();
        boolean boolean79 = strList71.removeAll((java.util.Collection<java.lang.String>) strList75);
        boolean boolean80 = strList60.containsAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean81 = strList44.addAll((java.util.Collection<java.lang.String>) strList71);
        java.util.stream.Stream<java.lang.String> strStream82 = strList44.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", '#', ' ');
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.reset(charArray87);
        int int89 = strList44.indexOf((java.lang.Object) charArray87);
        java.util.Spliterator<java.lang.String> strSpliterator90 = strList44.spliterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator90);
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer32.setTrimmerMatcher(strMatcher43);
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer44.setDelimiterMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer58.reset(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer58.getIgnoredMatcher();
        java.util.List<java.lang.String> strList78 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer58.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher55, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strList24.equals((java.lang.Object) int33);
        boolean boolean35 = strList17.containsAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean36 = strList2.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String str38 = strList24.remove(1);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        int int46 = strList44.size();
        boolean boolean47 = strList24.removeAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean49 = strList24.add("StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor51 = strList24.listIterator(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[hi!]" + "'", str38, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a');
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[StrTokenizer[, ]]");
        java.lang.Class<?> wildcardClass2 = strMatcher1.getClass();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(false);
        java.lang.String str31 = strTokenizer28.next();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer47.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setQuoteChar('4');
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.reset(charArray56);
        int int71 = strMatcher42.isMatch(charArray56, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer16.setDelimiterMatcher(strMatcher77);
        java.lang.String str79 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer16.reset("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer16.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer83.reset();
        java.util.List<java.lang.String> strList85 = strTokenizer83.getTokenList();
        strList85.clear();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "StrTokenizer[hi!]" + "'", str79, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.reset();
        int int15 = strTokenizer14.nextIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        int int66 = strTokenizer64.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.reset();
        boolean boolean68 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setIgnoredChar('a');
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer70.setDelimiterMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer92.reset();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        int int26 = strList23.size();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        java.lang.Object obj38 = null;
        boolean boolean39 = strList37.remove(obj38);
        boolean boolean40 = strList29.removeAll((java.util.Collection<java.lang.String>) strList37);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList29.spliterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = strList44.isEmpty();
        java.lang.Object[] objArray47 = strList44.toArray();
        java.lang.String[] strArray50 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        boolean boolean57 = strTokenizer56.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setIgnoredChar('4');
        int int60 = strTokenizer59.nextIndex();
        boolean boolean61 = strList51.equals((java.lang.Object) int60);
        boolean boolean62 = strList44.containsAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean63 = strList29.addAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean64 = strList23.containsAll((java.util.Collection<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("");
        java.lang.Object obj73 = strTokenizer72.clone();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        int int75 = strTokenizer72.size();
        java.util.List<java.lang.String> strList76 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        int int79 = strList76.indexOf((java.lang.Object) "a");
        boolean boolean80 = strList23.equals((java.lang.Object) int79);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        java.lang.String str85 = strTokenizer84.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer84.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setIgnoreEmptyTokens(false);
        java.lang.String str94 = strTokenizer91.next();
        boolean boolean95 = strTokenizer91.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer91.reset();
        int int97 = strList23.lastIndexOf((java.lang.Object) strTokenizer91);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        strList22.clear();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList22.spliterator();
        boolean boolean25 = strList22.isEmpty();
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher27);
        int int29 = strTokenizer28.previousIndex();
        boolean boolean30 = strTokenizer28.isEmptyTokenAsNull();
        boolean boolean31 = strTokenizer28.isEmptyTokenAsNull();
        int int32 = strList22.indexOf((java.lang.Object) strTokenizer28);
        java.util.Iterator<java.lang.String> strItor33 = strList22.iterator();
        java.util.stream.Stream<java.lang.String> strStream34 = strList22.parallelStream();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strStream34);
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        strList2.clear();
        strList2.clear();
        boolean boolean16 = strList2.add("StrTokenizer[, ]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher24.isMatch(charArray66, (int) (short) 100, 0, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        java.lang.String[] strArray83 = strTokenizer82.getTokenArray();
        boolean boolean84 = strTokenizer82.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = strTokenizer82.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.reset("StrTokenizer[a]");
        java.lang.Object obj11 = strTokenizer10.clone();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.Object obj21 = strTokenizer20.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.setDelimiterMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer20.setQuoteMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setIgnoredMatcher(strMatcher31);
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        java.lang.Object obj63 = strTokenizer62.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer62.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.reset("hi!");
        java.util.List<java.lang.String> strList75 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        java.lang.String str80 = strTokenizer79.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("");
        java.lang.Object obj84 = strTokenizer83.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer83.getQuoteMatcher();
        boolean boolean86 = strList75.contains((java.lang.Object) strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher67, strMatcher85);
        int int91 = strMatcher31.isMatch(charArray36, 0, 2, (int) 'a');
        java.lang.Class<?> wildcardClass92 = strMatcher31.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str80, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        java.lang.Object obj20 = strTokenizer19.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterChar('a');
        boolean boolean23 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer19.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#', '#');
        int int48 = strMatcher28.isMatch(charArray30, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher58, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer10.setIgnoredMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer10.reset("trTokenizer[hi!]");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        int int34 = strList21.size();
        java.util.stream.Stream<java.lang.String> strStream35 = strList21.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("StrTokenizer[, ]");
        int int50 = strList21.lastIndexOf((java.lang.Object) "StrTokenizer[, ]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer13.hasPrevious();
        int int17 = strTokenizer13.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer13.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        java.lang.String str27 = strTokenizer26.nextToken();
        boolean boolean28 = strTokenizer26.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        int int45 = strTokenizer42.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setDelimiterChar('a');
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer42.reset(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer42.setQuoteMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer42.reset();
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        boolean boolean71 = strTokenizer69.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        java.lang.String str76 = strTokenizer75.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer75.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer69.setIgnoredMatcher(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer31.setTrimmerMatcher(strMatcher81);
        java.lang.String str84 = strTokenizer31.previous();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str76, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        int int36 = strMatcher21.isMatch(charArray25, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[hi!]");
        char[] charArray42 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#a444 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer55.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(false);
        java.lang.String str65 = strTokenizer62.next();
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        java.lang.String str86 = strTokenizer85.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer85.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer85.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer85.setDelimiterMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer80.setIgnoredMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher49, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher45, strMatcher49);
        java.lang.String str97 = strTokenizer96.previousToken();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str86, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        strList2.clear();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setIgnoredChar('4');
        int int20 = strTokenizer19.nextIndex();
        boolean boolean21 = strList11.equals((java.lang.Object) int20);
        int int22 = strList11.size();
        java.util.RandomAccess[] randomAccessArray23 = new java.util.RandomAccess[] { strList11 };
        java.util.RandomAccess[] randomAccessArray24 = strList2.toArray(randomAccessArray23);
        strList2.clear();
        boolean boolean26 = strList2.isEmpty();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList29.isEmpty();
        java.lang.Object[] objArray32 = strList29.toArray();
        java.util.stream.Stream<java.lang.String> strStream33 = strList29.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("hi!");
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.stream.Stream<java.lang.String> strStream45 = strList43.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("hi!");
        int int50 = strTokenizer47.nextIndex();
        boolean boolean51 = strList43.equals((java.lang.Object) int50);
        boolean boolean52 = strList40.contains((java.lang.Object) int50);
        boolean boolean53 = strList29.containsAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean54 = strList2.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator55 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList29.replaceAll(strUnaryOperator55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(randomAccessArray23);
        org.junit.Assert.assertNotNull(randomAccessArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setQuoteChar(' ');
        boolean boolean9 = strTokenizer5.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        java.lang.Object obj19 = strTokenizer18.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterChar('a');
        boolean boolean22 = strTokenizer18.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer18.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer18.setIgnoredMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#', '#');
        int int47 = strMatcher27.isMatch(charArray29, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer5.setDelimiterMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getDelimiterMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher2);
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean25 = strTokenizer24.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getIgnoredMatcher();
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer36.reset();
        int int38 = strTokenizer36.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setQuoteMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setQuoteChar('#');
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer41.reset(charArray47);
        int int63 = strMatcher26.isMatch(charArray47, (int) (byte) -1, 10, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer22.setTrimmerMatcher(strMatcher26);
        int int65 = strTokenizer22.nextIndex();
        int int66 = strTokenizer22.size();
        java.util.List<java.lang.String> strList67 = strTokenizer22.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strList67);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        int int31 = strList30.size();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.stream();
        java.lang.Object[] objArray37 = strList34.toArray();
        boolean boolean38 = strList30.removeAll((java.util.Collection<java.lang.String>) strList34);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        boolean boolean48 = strTokenizer47.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setIgnoredChar('4');
        int int51 = strTokenizer50.nextIndex();
        boolean boolean52 = strList42.equals((java.lang.Object) int51);
        int int53 = strList42.size();
        boolean boolean54 = strList30.retainAll((java.util.Collection<java.lang.String>) strList42);
        boolean boolean55 = strList17.retainAll((java.util.Collection<java.lang.String>) strList42);
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("a");
        int int68 = strList42.indexOf((java.lang.Object) strTokenizer65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer65.setEmptyTokenAsNull(true);
        boolean boolean71 = strTokenizer65.hasNext();
        java.lang.String str72 = strTokenizer65.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        java.lang.Object obj14 = strTokenizer13.clone();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        int int16 = strTokenizer13.size();
        java.util.List<java.lang.String> strList17 = strTokenizer13.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int19 = strList17.lastIndexOf((java.lang.Object) strMatcher18);
        boolean boolean20 = strList2.retainAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        java.util.List<java.lang.String> strList30 = strTokenizer28.getTokenList();
        int int31 = strList30.size();
        java.util.ListIterator<java.lang.String> strItor32 = strList30.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        boolean boolean38 = strList30.containsAll((java.util.Collection<java.lang.String>) strList37);
        boolean boolean39 = strList2.remove((java.lang.Object) boolean38);
        strList2.add(0, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str47 = strTokenizer46.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer46.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean52 = strList2.equals((java.lang.Object) "hi!");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.stream.Stream<java.lang.String> strStream57 = strList55.stream();
        boolean boolean58 = strList55.isEmpty();
        java.lang.Object[] objArray59 = strList55.toArray();
        java.lang.String[] strArray65 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        boolean boolean68 = strList55.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.stream();
        boolean boolean75 = strList72.isEmpty();
        char[] charArray76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher77);
        java.lang.String[] strArray79 = strTokenizer78.getTokenArray();
        boolean boolean80 = strList72.equals((java.lang.Object) strArray79);
        java.util.Spliterator<java.lang.String> strSpliterator81 = strList72.spliterator();
        java.lang.Object[] objArray82 = strList72.toArray();
        boolean boolean83 = strList66.addAll(0, (java.util.Collection<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher85, strMatcher86);
        java.lang.String str88 = strTokenizer87.toString();
        java.util.List<java.lang.String> strList89 = strTokenizer87.getTokenList();
        boolean boolean90 = strList89.isEmpty();
        java.lang.Object[] objArray91 = strList89.toArray();
        int int92 = strList72.lastIndexOf((java.lang.Object) objArray91);
        java.lang.Object[] objArray93 = strList72.toArray();
        java.lang.Object[] objArray94 = strList72.toArray();
        boolean boolean95 = strList2.addAll((java.util.Collection<java.lang.String>) strList72);
        strList2.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strSpliterator81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str88, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[hi!]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[hi!]");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        boolean boolean29 = strList16.remove((java.lang.Object) strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        boolean boolean34 = strList2.contains((java.lang.Object) strTokenizer32);
        java.lang.String str36 = strList2.get(0);
        boolean boolean37 = strList2.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream38 = strList2.parallelStream();
        java.util.Collection<java.lang.String> strCollection39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = strList2.removeAll(strCollection39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean38 = strList31.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList31.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        boolean boolean44 = strTokenizer43.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoredChar('a');
        java.lang.Object obj49 = strTokenizer48.clone();
        java.lang.Class<?> wildcardClass50 = strTokenizer48.getClass();
        boolean boolean51 = strList31.remove((java.lang.Object) wildcardClass50);
        java.util.Collection<java.lang.String> strCollection52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = strList31.removeAll(strCollection52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getQuoteMatcher();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "hi!");
        int int42 = strMatcher25.isMatch(charArray27, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer15.setDelimiterMatcher(strMatcher25);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setIgnoredMatcher(strMatcher48);
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        int int71 = strMatcher56.isMatch(charArray60, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        java.lang.String str77 = strTokenizer76.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer76.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher48, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer15.setTrimmerMatcher(strMatcher48);
        int int83 = strTokenizer82.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.reset();
        boolean boolean85 = strTokenizer82.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str77, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setTrimmerMatcher(strMatcher71);
        java.lang.String str73 = strTokenizer72.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.reset("");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str73, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        boolean boolean9 = strList5.add("StrTokenizer[not tokenized yet]");
        boolean boolean11 = strList5.add("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        strList16.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("");
        java.lang.Object obj26 = strTokenizer25.clone();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.util.ListIterator<java.lang.String> strItor29 = strList27.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor30 = strList27.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int33 = strList27.indexOf((java.lang.Object) strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer34.setTrimmerMatcher(strMatcher45);
        int int47 = strList27.indexOf((java.lang.Object) strTokenizer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        int int58 = strList57.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        int int69 = strList68.size();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.stream();
        java.lang.Object[] objArray75 = strList72.toArray();
        boolean boolean76 = strList68.removeAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean77 = strList57.containsAll((java.util.Collection<java.lang.String>) strList68);
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList68.spliterator();
        boolean boolean79 = strList68.isEmpty();
        boolean boolean80 = strList27.retainAll((java.util.Collection<java.lang.String>) strList68);
        java.util.Iterator<java.lang.String> strItor81 = strList27.iterator();
        boolean boolean82 = strList16.retainAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Iterator<java.lang.String> strItor83 = strList16.iterator();
        java.util.Iterator<java.lang.String> strItor84 = strList16.iterator();
        boolean boolean85 = strList5.retainAll((java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = strList16.remove(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        int int20 = strList9.size();
        boolean boolean21 = strList5.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream22 = strList5.parallelStream();
        java.lang.Object[] objArray23 = strList5.toArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        int int22 = strMatcher7.isMatch(charArray11, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoredChar(' ');
        int int34 = strTokenizer33.previousIndex();
        int int35 = strTokenizer33.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        java.util.ListIterator<java.lang.String> strItor56 = strList54.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor57 = strList54.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int60 = strList54.indexOf((java.lang.Object) strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer43.setDelimiterMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher39, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        java.util.List<java.lang.String> strList70 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer64.setIgnoredMatcher(strMatcher71);
        java.lang.String str73 = strTokenizer64.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        java.lang.Object obj61 = strTokenizer60.clone();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterChar('a');
        char[] charArray26 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('4');
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer35.reset(charArray39);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer19.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer9.setTrimmerMatcher(strMatcher54);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer55.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        java.lang.Object obj44 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterChar('a');
        boolean boolean47 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer43.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer43.setIgnoredMatcher(strMatcher50);
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher50, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        int int43 = strMatcher28.isMatch(charArray32, 1, 1, (int) ' ');
        int int44 = strList2.indexOf((java.lang.Object) ' ');
        java.util.Iterator<java.lang.String> strItor45 = strList2.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strList51.isEmpty();
        boolean boolean54 = strList51.add("a");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.stream();
        java.lang.Object[] objArray60 = strList57.toArray();
        boolean boolean61 = strList51.addAll((java.util.Collection<java.lang.String>) strList57);
        java.util.ListIterator<java.lang.String> strItor62 = strList57.listIterator();
        boolean boolean63 = strList2.contains((java.lang.Object) strList57);
        // The following exception was thrown during execution in test generation
        try {
            strList57.add(2, "a   ");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        boolean boolean28 = strTokenizer27.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer22.setDelimiterMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer9.setQuoteMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        int int37 = strTokenizer36.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean41 = strTokenizer40.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray44 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer42.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer40.setQuoteMatcher(strMatcher53);
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        int int73 = strMatcher53.isMatch(charArray57, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "StrTokenizer[hi!]");
        // The following exception was thrown during execution in test generation
        try {
            int int77 = strMatcher38.isMatch(charArray57, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("   ");
        java.lang.String str7 = strTokenizer6.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("");
        java.lang.Object obj25 = strTokenizer24.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getQuoteMatcher();
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "hi!");
        int int43 = strMatcher26.isMatch(charArray28, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer16.setDelimiterMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher46);
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getIgnoredMatcher();
        java.lang.String str14 = strTokenizer12.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[hi!]");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getQuoteMatcher();
        int int4 = strTokenizer1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]", "StrTokenizer[not");
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer35.setDelimiterMatcher(strMatcher41);
        int int43 = strTokenizer42.previousIndex();
        char[] charArray44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer45.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer42.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer31.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer22.reset(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer16.setDelimiterMatcher(strMatcher75);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer30.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        int int16 = strTokenizer15.size();
        java.lang.Object obj17 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList18 = strTokenizer15.getTokenList();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        boolean boolean22 = strList19.isEmpty();
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher24);
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        boolean boolean27 = strList19.equals((java.lang.Object) strArray26);
        java.util.Spliterator<java.lang.String> strSpliterator28 = strList19.spliterator();
        java.lang.Object[] objArray29 = strList19.toArray();
        boolean boolean30 = strList13.addAll(0, (java.util.Collection<java.lang.String>) strList19);
        java.util.stream.Stream<java.lang.String> strStream31 = strList13.parallelStream();
        boolean boolean32 = strList13.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSpliterator28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "a   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setEmptyTokenAsNull(false);
        int int5 = strTokenizer4.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        java.lang.String str16 = strTokenizer15.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        int int29 = strTokenizer28.previousIndex();
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        boolean boolean31 = strTokenizer28.hasPrevious();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer28.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher53, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer16.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer70.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer70.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer70.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        int int16 = strList14.size();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        boolean boolean22 = strList19.isEmpty();
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher24);
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        boolean boolean27 = strList19.equals((java.lang.Object) strArray26);
        java.util.Spliterator<java.lang.String> strSpliterator28 = strList19.spliterator();
        java.util.stream.Stream<java.lang.String> strStream29 = strList19.stream();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        java.lang.Object obj41 = null;
        boolean boolean42 = strList40.remove(obj41);
        boolean boolean43 = strList32.removeAll((java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("");
        java.lang.Object obj52 = strTokenizer51.clone();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        boolean boolean54 = strList32.retainAll((java.util.Collection<java.lang.String>) strList53);
        java.util.ListIterator<java.lang.String> strItor55 = strList32.listIterator();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.stream.Stream<java.lang.String> strStream60 = strList58.stream();
        boolean boolean61 = strList58.isEmpty();
        java.lang.Object[] objArray62 = strList58.toArray();
        boolean boolean63 = strList32.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean64 = strList19.removeAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean65 = strList14.removeAll((java.util.Collection<java.lang.String>) strList19);
        boolean boolean66 = strList2.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.stream.Stream<java.lang.String> strStream71 = strList69.stream();
        boolean boolean72 = strList69.isEmpty();
        java.lang.Object[] objArray73 = strList69.toArray();
        boolean boolean74 = strList2.addAll((java.util.Collection<java.lang.String>) strList69);
        strList69.clear();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator76 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList69.replaceAll(strUnaryOperator76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSpliterator28);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        boolean boolean33 = strList9.add("StrTokenizer[a]");
        boolean boolean34 = strList9.isEmpty();
        int int35 = strList9.size();
        java.lang.Object[] objArray36 = strList9.toArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[StrTokenizer[a]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[StrTokenizer[a]]");
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setQuoteChar('4');
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher17);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer18.set("#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean2 = strTokenizer1.hasNext();
        java.lang.String str3 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar(' ');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        java.lang.String str10 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setDelimiterChar('#');
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer8.reset(charArray14);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer3.getDelimiterMatcher();
        java.lang.String[] strArray9 = strTokenizer3.getTokenArray();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int44 = strTokenizer43.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer3.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer3.setDelimiterChar(' ');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream30 = strList9.stream();
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        int int52 = strMatcher37.isMatch(charArray41, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        boolean boolean54 = strList9.contains((java.lang.Object) strTokenizer53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer53.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, "StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]");
        int int89 = strMatcher58.isMatch(charArray65, 2, 0, (int) ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ', ' ');
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setQuoteMatcher(strMatcher19);
        int int21 = strTokenizer3.size();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList13 = strTokenizer8.getTokenList();
        int int14 = strTokenizer8.previousIndex();
        boolean boolean15 = strTokenizer8.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.Object obj42 = strTokenizer41.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterChar('a');
        boolean boolean45 = strTokenizer41.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        int int49 = strList20.indexOf((java.lang.Object) strTokenizer47);
        java.util.Iterator<java.lang.String> strItor50 = strList20.iterator();
        boolean boolean52 = strList20.add("StrTokenizer[a]");
        boolean boolean54 = strList20.add("");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.stream.Stream<java.lang.String> strStream11 = strList2.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("");
        java.lang.Object obj21 = strTokenizer20.clone();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        int int23 = strList22.size();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.stream.Stream<java.lang.String> strStream28 = strList26.stream();
        java.lang.Object[] objArray29 = strList26.toArray();
        boolean boolean30 = strList22.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        boolean boolean40 = strTokenizer39.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar('4');
        int int43 = strTokenizer42.nextIndex();
        boolean boolean44 = strList34.equals((java.lang.Object) int43);
        int int45 = strList34.size();
        boolean boolean46 = strList22.retainAll((java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        java.util.ListIterator<java.lang.String> strItor58 = strList56.listIterator((int) (short) 0);
        boolean boolean59 = strList56.isEmpty();
        java.util.List<java.lang.String> strList62 = strList56.subList((int) (short) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        java.lang.Object obj72 = strTokenizer71.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.reset("");
        int int77 = strList56.lastIndexOf((java.lang.Object) "");
        boolean boolean78 = strList34.addAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.String[] strArray83 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "a", "hi!", "StrTokenizer[a]" };
        java.lang.Comparable<java.lang.String>[] strComparableArray84 = strList34.toArray((java.lang.Comparable<java.lang.String>[]) strArray83);
        boolean boolean86 = strList34.add("");
        boolean boolean87 = strList2.containsAll((java.util.Collection<java.lang.String>) strList34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList90 = strList2.subList(3, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(3) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strComparableArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer30.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer30.setDelimiterString("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setIgnoredChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer76.add("StrTokenizer[StrTokenizer[hi!]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        int int29 = strTokenizer13.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer13.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("a", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]", strMatcher32, strMatcher36);
        int int38 = strTokenizer37.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer44.setDelimiterMatcher(strMatcher50);
        int int52 = strTokenizer51.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setIgnoreEmptyTokens(false);
        boolean boolean57 = strTokenizer54.hasPrevious();
        int int58 = strTokenizer54.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        java.util.List<java.lang.String> strList64 = strTokenizer62.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer54.setIgnoredMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer66.reset();
        java.lang.String str68 = strTokenizer67.nextToken();
        boolean boolean69 = strTokenizer67.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer67.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher40, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", strMatcher40);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher71);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.Object obj17 = strTokenizer3.clone();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer3.setDelimiterMatcher(strMatcher30);
        java.lang.String str32 = strTokenizer3.toString();
        java.lang.String[] strArray33 = strTokenizer3.getTokenArray();
        java.util.List<java.lang.String> strList34 = strTokenizer3.getTokenList();
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        int int69 = strMatcher54.isMatch(charArray58, 1, 1, (int) ' ');
        char[] charArray70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher54, strMatcher73);
        int int75 = strTokenizer74.nextIndex();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream77 = strList76.stream();
        boolean boolean78 = strList34.removeAll((java.util.Collection<java.lang.String>) strList76);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[hi!]" + "'", str32, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer3.getDelimiterMatcher();
        java.lang.String[] strArray9 = strTokenizer3.getTokenArray();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int44 = strTokenizer43.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer3.setTrimmerMatcher(strMatcher45);
        java.lang.String str48 = strTokenizer47.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[hi!]" + "'", str48, "StrTokenizer[hi!]");
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        int int26 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean29 = strTokenizer28.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer10.setIgnoredMatcher(strMatcher30);
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoredChar(' ');
        int int22 = strTokenizer21.previousIndex();
        boolean boolean23 = strList4.remove((java.lang.Object) strTokenizer21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        boolean boolean25 = strTokenizer21.isIgnoreEmptyTokens();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer21.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str3 = strTokenizer2.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[a]" + "'", str3, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        java.lang.String str3 = strTokenizer2.previousToken();
        char[] charArray4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        int int8 = strTokenizer7.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getIgnoredMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        int int31 = strMatcher16.isMatch(charArray20, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        int int39 = strMatcher9.isMatch(charArray20, 3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer2.setQuoteMatcher(strMatcher9);
        int int41 = strTokenizer40.previousIndex();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.stream();
        java.lang.Object[] objArray23 = strList20.toArray();
        java.util.ListIterator<java.lang.String> strItor24 = strList20.listIterator();
        java.lang.String str26 = strList20.get((int) (short) 0);
        boolean boolean27 = strList2.containsAll((java.util.Collection<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        int int44 = strList30.indexOf((java.lang.Object) strTokenizer41);
        strList30.clear();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList48.isEmpty();
        java.lang.Object[] objArray51 = strList48.toArray();
        java.lang.String[] strArray54 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        boolean boolean61 = strTokenizer60.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setIgnoredChar('4');
        int int64 = strTokenizer63.nextIndex();
        boolean boolean65 = strList55.equals((java.lang.Object) int64);
        boolean boolean66 = strList48.containsAll((java.util.Collection<java.lang.String>) strList55);
        boolean boolean67 = strList30.containsAll((java.util.Collection<java.lang.String>) strList55);
        strList30.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        strList73.clear();
        strList73.clear();
        int int76 = strList73.size();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "StrTokenizer[a]", "StrTokenizer[, ]", "StrTokenizer[hi!]", "StrTokenizer[, ]", "a" };
        java.lang.String[][] strArray84 = new java.lang.String[][] { strArray83 };
        java.lang.String[][] strArray85 = strList73.toArray(strArray84);
        java.lang.String[][] strArray86 = strList30.toArray(strArray85);
        java.lang.Comparable<java.lang.String>[][] strComparableArray87 = strList2.toArray((java.lang.Comparable<java.lang.String>[][]) strArray85);
        java.util.stream.Stream<java.lang.String> strStream88 = strList2.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = strList2.set((int) 'a', "StrTokenizer[");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strComparableArray87);
        org.junit.Assert.assertNotNull(strStream88);
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer8.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.reset();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        int int16 = strTokenizer15.previousIndex();
        int int17 = strTokenizer15.size();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        java.lang.String str16 = strTokenizer14.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        int int2 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("StrTokenizer[a]");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer4.getDelimiterMatcher();
        boolean boolean7 = strTokenizer4.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[a]" + "'", str5, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[#a444 ]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        int int27 = strTokenizer26.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.reset("hi!");
        boolean boolean30 = strTokenizer29.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        java.lang.Cloneable[] cloneableArray7 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[] cloneableArray8 = strList4.toArray(cloneableArray7);
        java.lang.Object[] objArray9 = strList4.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        java.lang.Object obj16 = null;
        boolean boolean17 = strList15.remove(obj16);
        boolean boolean19 = strList15.add("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('4');
        int int31 = strTokenizer30.previousIndex();
        boolean boolean32 = strTokenizer30.isEmptyTokenAsNull();
        java.lang.Object obj33 = strTokenizer30.clone();
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer30.reset(charArray35);
        boolean boolean45 = strList15.contains((java.lang.Object) strTokenizer44);
        boolean boolean46 = strList4.addAll((java.util.Collection<java.lang.String>) strList15);
        strList4.clear();
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "#a444");
        java.util.List<java.lang.String> strList75 = strTokenizer74.getTokenList();
        boolean boolean76 = strList4.containsAll((java.util.Collection<java.lang.String>) strList75);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(cloneableArray7);
        org.junit.Assert.assertNotNull(cloneableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean8 = strList5.add("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("");
        java.lang.Object obj17 = strTokenizer16.clone();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        java.util.ListIterator<java.lang.String> strItor20 = strList18.listIterator((int) (short) 0);
        boolean boolean21 = strList18.isEmpty();
        java.util.List<java.lang.String> strList24 = strList18.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        java.lang.Object obj36 = null;
        boolean boolean37 = strList35.remove(obj36);
        boolean boolean38 = strList27.removeAll((java.util.Collection<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("");
        java.lang.Object obj47 = strTokenizer46.clone();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        boolean boolean49 = strList27.retainAll((java.util.Collection<java.lang.String>) strList48);
        java.util.ListIterator<java.lang.String> strItor50 = strList27.listIterator();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.stream();
        boolean boolean56 = strList53.isEmpty();
        java.lang.Object[] objArray57 = strList53.toArray();
        boolean boolean58 = strList27.addAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean59 = strList24.removeAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        java.lang.String str69 = strTokenizer68.toString();
        java.util.List<java.lang.String> strList70 = strTokenizer68.getTokenList();
        java.lang.Object obj71 = null;
        boolean boolean72 = strList70.remove(obj71);
        boolean boolean73 = strList62.removeAll((java.util.Collection<java.lang.String>) strList70);
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList62.spliterator();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = strList77.isEmpty();
        java.lang.Object[] objArray80 = strList77.toArray();
        java.lang.Object[] objArray81 = strList62.toArray(objArray80);
        boolean boolean82 = strList24.containsAll((java.util.Collection<java.lang.String>) strList62);
        boolean boolean83 = strList5.removeAll((java.util.Collection<java.lang.String>) strList62);
        java.util.ListIterator<java.lang.String> strItor84 = strList5.listIterator();
        int int85 = strList5.size();
        java.util.ListIterator<java.lang.String> strItor86 = strList5.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(strItor86);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        boolean boolean33 = strList9.add("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setIgnoreEmptyTokens(false);
        java.lang.String str47 = strTokenizer44.next();
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer44.setIgnoredMatcher(strMatcher58);
        int int60 = strTokenizer44.nextIndex();
        java.lang.String str61 = strTokenizer44.previousToken();
        java.util.List<java.lang.String> strList62 = strTokenizer44.getTokenList();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.stream();
        java.lang.Object[] objArray68 = strList65.toArray();
        java.lang.Object[] objArray69 = strList65.toArray();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.stream();
        java.lang.Object[] objArray75 = strList72.toArray();
        java.util.ListIterator<java.lang.String> strItor76 = strList72.listIterator();
        java.lang.String str78 = strList72.get((int) (short) 0);
        boolean boolean79 = strList65.removeAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean80 = strList65.isEmpty();
        int int81 = strList62.lastIndexOf((java.lang.Object) boolean80);
        boolean boolean82 = strList9.addAll((java.util.Collection<java.lang.String>) strList62);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator83 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList9.replaceAll(strUnaryOperator83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str3 = strTokenizer2.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        java.lang.String str8 = strTokenizer7.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setIgnoreEmptyTokens(false);
        java.lang.String str17 = strTokenizer14.next();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer14.setIgnoredMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setQuoteChar('4');
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer38.reset(charArray42);
        int int57 = strMatcher28.isMatch(charArray42, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer2.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setIgnoreEmptyTokens(false);
        java.lang.String str63 = strTokenizer62.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[,", strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[a]" + "'", str3, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "a" + "'", str63, "a");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.parallelStream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strList42.size();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.stream();
        java.lang.Object[] objArray49 = strList46.toArray();
        boolean boolean50 = strList42.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor51 = strList42.iterator();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        java.lang.Object obj63 = null;
        boolean boolean64 = strList62.remove(obj63);
        boolean boolean65 = strList54.removeAll((java.util.Collection<java.lang.String>) strList62);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList54.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer70.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        boolean boolean77 = strList54.remove((java.lang.Object) strList76);
        java.util.Iterator<java.lang.String> strItor78 = strList76.iterator();
        boolean boolean79 = strList42.retainAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean80 = strList20.retainAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean81 = strList20.isEmpty();
        java.lang.Object[] objArray82 = strList20.toArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
    }
}

